cmake_minimum_required(VERSION 2.6)

PROJECT (libmycorekkk)

SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")

ADD_DEFINITIONS(-DBOOST_ALL_NO_LIB)
ADD_DEFINITIONS(-DBOOST_HAS_WINTHREADS)
ADD_DEFINITIONS(-DBOOST_THREAD_BUILD_DLL)

ADD_DEFINITIONS(-D WIN32_LEAN_AND_MEAN)

ADD_DEFINITIONS(-DSERVER_GATEWAY)

INCLUDE_DIRECTORIES(./core)
########################################################################################core
SET(CORE_LIST ${PROJECT_SOURCE_DIR}/core)
FILE(GLOB_RECURSE CORE_LIST_INCLUDE ${CORE_LIST}/*.h ) 
FILE(GLOB_RECURSE CORE_LIST_SRC ${CORE_LIST}/*.cpp) 
FILE(GLOB_RECURSE CORE_LIST_CSRC ${CORE_LIST}/*.c) 

FILE(GLOB_RECURSE CORE_LIST_CCSRC ${CORE_LIST}/../../../public/*.cc) 

SOURCE_GROUP("Header Files" FILES ${CORE_LIST_INCLUDE})
SOURCE_GROUP("Source Files" FILES ${CORE_LIST_SRC})
SOURCE_GROUP("Source Files" FILES ${CORE_LIST_CSRC})
SOURCE_GROUP("Pb Source Files" FILES ${CORE_LIST_CCSRC})

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
ADD_LIBRARY(mycorekkk STATIC ${CORE_LIST_INCLUDE} ${CORE_LIST_SRC} ${CORE_LIST_CSRC} ${CORE_LIST_CCSRC})
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Linux")


IF (CMAKE_SYSTEM_NAME MATCHES "Windows")
ADD_LIBRARY(libmycorekkk STATIC ${CORE_LIST_INCLUDE} ${CORE_LIST_SRC} ${CORE_LIST_CSRC} ${CORE_LIST_CCSRC})
ENDIF (CMAKE_SYSTEM_NAME MATCHES "Windows")


