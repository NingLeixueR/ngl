// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gm.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gm_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_gm_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023002 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_gm_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gm_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_gm_2eproto;
namespace GM {
class PROBUFF_GM_ADD_NOTICE;
struct PROBUFF_GM_ADD_NOTICEDefaultTypeInternal;
extern PROBUFF_GM_ADD_NOTICEDefaultTypeInternal _PROBUFF_GM_ADD_NOTICE_default_instance_;
class PROBUFF_GM_ADD_NOTICE_RESPONSE;
struct PROBUFF_GM_ADD_NOTICE_RESPONSEDefaultTypeInternal;
extern PROBUFF_GM_ADD_NOTICE_RESPONSEDefaultTypeInternal _PROBUFF_GM_ADD_NOTICE_RESPONSE_default_instance_;
class PROBUFF_GM_DEL_NOTICE;
struct PROBUFF_GM_DEL_NOTICEDefaultTypeInternal;
extern PROBUFF_GM_DEL_NOTICEDefaultTypeInternal _PROBUFF_GM_DEL_NOTICE_default_instance_;
class PROBUFF_GM_DEL_NOTICE_RESPONSE;
struct PROBUFF_GM_DEL_NOTICE_RESPONSEDefaultTypeInternal;
extern PROBUFF_GM_DEL_NOTICE_RESPONSEDefaultTypeInternal _PROBUFF_GM_DEL_NOTICE_RESPONSE_default_instance_;
class PROBUFF_GM_GET_NOTICE;
struct PROBUFF_GM_GET_NOTICEDefaultTypeInternal;
extern PROBUFF_GM_GET_NOTICEDefaultTypeInternal _PROBUFF_GM_GET_NOTICE_default_instance_;
class PROBUFF_GM_GET_NOTICE_RESPONSE;
struct PROBUFF_GM_GET_NOTICE_RESPONSEDefaultTypeInternal;
extern PROBUFF_GM_GET_NOTICE_RESPONSEDefaultTypeInternal _PROBUFF_GM_GET_NOTICE_RESPONSE_default_instance_;
class gm_notice;
struct gm_noticeDefaultTypeInternal;
extern gm_noticeDefaultTypeInternal _gm_notice_default_instance_;
}  // namespace GM
PROTOBUF_NAMESPACE_OPEN
template <>
::GM::PROBUFF_GM_ADD_NOTICE* Arena::CreateMaybeMessage<::GM::PROBUFF_GM_ADD_NOTICE>(Arena*);
template <>
::GM::PROBUFF_GM_ADD_NOTICE_RESPONSE* Arena::CreateMaybeMessage<::GM::PROBUFF_GM_ADD_NOTICE_RESPONSE>(Arena*);
template <>
::GM::PROBUFF_GM_DEL_NOTICE* Arena::CreateMaybeMessage<::GM::PROBUFF_GM_DEL_NOTICE>(Arena*);
template <>
::GM::PROBUFF_GM_DEL_NOTICE_RESPONSE* Arena::CreateMaybeMessage<::GM::PROBUFF_GM_DEL_NOTICE_RESPONSE>(Arena*);
template <>
::GM::PROBUFF_GM_GET_NOTICE* Arena::CreateMaybeMessage<::GM::PROBUFF_GM_GET_NOTICE>(Arena*);
template <>
::GM::PROBUFF_GM_GET_NOTICE_RESPONSE* Arena::CreateMaybeMessage<::GM::PROBUFF_GM_GET_NOTICE_RESPONSE>(Arena*);
template <>
::GM::gm_notice* Arena::CreateMaybeMessage<::GM::gm_notice>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace GM {

// ===================================================================


// -------------------------------------------------------------------

class PROBUFF_GM_GET_NOTICE final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:GM.PROBUFF_GM_GET_NOTICE) */ {
 public:
  inline PROBUFF_GM_GET_NOTICE() : PROBUFF_GM_GET_NOTICE(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PROBUFF_GM_GET_NOTICE(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PROBUFF_GM_GET_NOTICE(const PROBUFF_GM_GET_NOTICE& from);
  PROBUFF_GM_GET_NOTICE(PROBUFF_GM_GET_NOTICE&& from) noexcept
    : PROBUFF_GM_GET_NOTICE() {
    *this = ::std::move(from);
  }

  inline PROBUFF_GM_GET_NOTICE& operator=(const PROBUFF_GM_GET_NOTICE& from) {
    CopyFrom(from);
    return *this;
  }
  inline PROBUFF_GM_GET_NOTICE& operator=(PROBUFF_GM_GET_NOTICE&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PROBUFF_GM_GET_NOTICE& default_instance() {
    return *internal_default_instance();
  }
  static inline const PROBUFF_GM_GET_NOTICE* internal_default_instance() {
    return reinterpret_cast<const PROBUFF_GM_GET_NOTICE*>(
               &_PROBUFF_GM_GET_NOTICE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PROBUFF_GM_GET_NOTICE& a, PROBUFF_GM_GET_NOTICE& b) {
    a.Swap(&b);
  }
  inline void Swap(PROBUFF_GM_GET_NOTICE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PROBUFF_GM_GET_NOTICE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PROBUFF_GM_GET_NOTICE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PROBUFF_GM_GET_NOTICE>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PROBUFF_GM_GET_NOTICE& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PROBUFF_GM_GET_NOTICE& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GM.PROBUFF_GM_GET_NOTICE";
  }
  protected:
  explicit PROBUFF_GM_GET_NOTICE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GM.PROBUFF_GM_GET_NOTICE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
  };
  friend struct ::TableStruct_gm_2eproto;
};// -------------------------------------------------------------------

class gm_notice final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GM.gm_notice) */ {
 public:
  inline gm_notice() : gm_notice(nullptr) {}
  ~gm_notice() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR gm_notice(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  gm_notice(const gm_notice& from);
  gm_notice(gm_notice&& from) noexcept
    : gm_notice() {
    *this = ::std::move(from);
  }

  inline gm_notice& operator=(const gm_notice& from) {
    CopyFrom(from);
    return *this;
  }
  inline gm_notice& operator=(gm_notice&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const gm_notice& default_instance() {
    return *internal_default_instance();
  }
  static inline const gm_notice* internal_default_instance() {
    return reinterpret_cast<const gm_notice*>(
               &_gm_notice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(gm_notice& a, gm_notice& b) {
    a.Swap(&b);
  }
  inline void Swap(gm_notice* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(gm_notice* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  gm_notice* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<gm_notice>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const gm_notice& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const gm_notice& from) {
    gm_notice::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(gm_notice* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GM.gm_notice";
  }
  protected:
  explicit gm_notice(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMNoticeFieldNumber = 2,
    kMIdFieldNumber = 1,
    kMStarttimeFieldNumber = 3,
    kMFinishtimeFieldNumber = 4,
  };
  // optional string m_notice = 2;
  bool has_m_notice() const;
  void clear_m_notice() ;
  const std::string& m_notice() const;




  template <typename Arg_ = const std::string&, typename... Args_>
  void set_m_notice(Arg_&& arg, Args_... args);
  std::string* mutable_m_notice();
  PROTOBUF_NODISCARD std::string* release_m_notice();
  void set_allocated_m_notice(std::string* ptr);

  private:
  const std::string& _internal_m_notice() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_m_notice(
      const std::string& value);
  std::string* _internal_mutable_m_notice();

  public:
  // optional int64 m_id = 1;
  bool has_m_id() const;
  void clear_m_id() ;
  ::int64_t m_id() const;
  void set_m_id(::int64_t value);

  private:
  ::int64_t _internal_m_id() const;
  void _internal_set_m_id(::int64_t value);

  public:
  // optional int32 m_starttime = 3;
  bool has_m_starttime() const;
  void clear_m_starttime() ;
  ::int32_t m_starttime() const;
  void set_m_starttime(::int32_t value);

  private:
  ::int32_t _internal_m_starttime() const;
  void _internal_set_m_starttime(::int32_t value);

  public:
  // optional int32 m_finishtime = 4;
  bool has_m_finishtime() const;
  void clear_m_finishtime() ;
  ::int32_t m_finishtime() const;
  void set_m_finishtime(::int32_t value);

  private:
  ::int32_t _internal_m_finishtime() const;
  void _internal_set_m_finishtime(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:GM.gm_notice)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr m_notice_;
    ::int64_t m_id_;
    ::int32_t m_starttime_;
    ::int32_t m_finishtime_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gm_2eproto;
};// -------------------------------------------------------------------

class PROBUFF_GM_GET_NOTICE_RESPONSE final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GM.PROBUFF_GM_GET_NOTICE_RESPONSE) */ {
 public:
  inline PROBUFF_GM_GET_NOTICE_RESPONSE() : PROBUFF_GM_GET_NOTICE_RESPONSE(nullptr) {}
  ~PROBUFF_GM_GET_NOTICE_RESPONSE() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PROBUFF_GM_GET_NOTICE_RESPONSE(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PROBUFF_GM_GET_NOTICE_RESPONSE(const PROBUFF_GM_GET_NOTICE_RESPONSE& from);
  PROBUFF_GM_GET_NOTICE_RESPONSE(PROBUFF_GM_GET_NOTICE_RESPONSE&& from) noexcept
    : PROBUFF_GM_GET_NOTICE_RESPONSE() {
    *this = ::std::move(from);
  }

  inline PROBUFF_GM_GET_NOTICE_RESPONSE& operator=(const PROBUFF_GM_GET_NOTICE_RESPONSE& from) {
    CopyFrom(from);
    return *this;
  }
  inline PROBUFF_GM_GET_NOTICE_RESPONSE& operator=(PROBUFF_GM_GET_NOTICE_RESPONSE&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PROBUFF_GM_GET_NOTICE_RESPONSE& default_instance() {
    return *internal_default_instance();
  }
  static inline const PROBUFF_GM_GET_NOTICE_RESPONSE* internal_default_instance() {
    return reinterpret_cast<const PROBUFF_GM_GET_NOTICE_RESPONSE*>(
               &_PROBUFF_GM_GET_NOTICE_RESPONSE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PROBUFF_GM_GET_NOTICE_RESPONSE& a, PROBUFF_GM_GET_NOTICE_RESPONSE& b) {
    a.Swap(&b);
  }
  inline void Swap(PROBUFF_GM_GET_NOTICE_RESPONSE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PROBUFF_GM_GET_NOTICE_RESPONSE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PROBUFF_GM_GET_NOTICE_RESPONSE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PROBUFF_GM_GET_NOTICE_RESPONSE>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PROBUFF_GM_GET_NOTICE_RESPONSE& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PROBUFF_GM_GET_NOTICE_RESPONSE& from) {
    PROBUFF_GM_GET_NOTICE_RESPONSE::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PROBUFF_GM_GET_NOTICE_RESPONSE* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GM.PROBUFF_GM_GET_NOTICE_RESPONSE";
  }
  protected:
  explicit PROBUFF_GM_GET_NOTICE_RESPONSE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMNoticeFieldNumber = 3,
  };
  // repeated .GM.gm_notice m_notice = 3;
  int m_notice_size() const;
  private:
  int _internal_m_notice_size() const;

  public:
  void clear_m_notice() ;
  ::GM::gm_notice* mutable_m_notice(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GM::gm_notice >*
      mutable_m_notice();
  private:
  const ::GM::gm_notice& _internal_m_notice(int index) const;
  ::GM::gm_notice* _internal_add_m_notice();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::GM::gm_notice>& _internal_m_notice() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::GM::gm_notice>* _internal_mutable_m_notice();
  public:
  const ::GM::gm_notice& m_notice(int index) const;
  ::GM::gm_notice* add_m_notice();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GM::gm_notice >&
      m_notice() const;
  // @@protoc_insertion_point(class_scope:GM.PROBUFF_GM_GET_NOTICE_RESPONSE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GM::gm_notice > m_notice_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gm_2eproto;
};// -------------------------------------------------------------------

class PROBUFF_GM_ADD_NOTICE final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GM.PROBUFF_GM_ADD_NOTICE) */ {
 public:
  inline PROBUFF_GM_ADD_NOTICE() : PROBUFF_GM_ADD_NOTICE(nullptr) {}
  ~PROBUFF_GM_ADD_NOTICE() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PROBUFF_GM_ADD_NOTICE(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PROBUFF_GM_ADD_NOTICE(const PROBUFF_GM_ADD_NOTICE& from);
  PROBUFF_GM_ADD_NOTICE(PROBUFF_GM_ADD_NOTICE&& from) noexcept
    : PROBUFF_GM_ADD_NOTICE() {
    *this = ::std::move(from);
  }

  inline PROBUFF_GM_ADD_NOTICE& operator=(const PROBUFF_GM_ADD_NOTICE& from) {
    CopyFrom(from);
    return *this;
  }
  inline PROBUFF_GM_ADD_NOTICE& operator=(PROBUFF_GM_ADD_NOTICE&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PROBUFF_GM_ADD_NOTICE& default_instance() {
    return *internal_default_instance();
  }
  static inline const PROBUFF_GM_ADD_NOTICE* internal_default_instance() {
    return reinterpret_cast<const PROBUFF_GM_ADD_NOTICE*>(
               &_PROBUFF_GM_ADD_NOTICE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PROBUFF_GM_ADD_NOTICE& a, PROBUFF_GM_ADD_NOTICE& b) {
    a.Swap(&b);
  }
  inline void Swap(PROBUFF_GM_ADD_NOTICE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PROBUFF_GM_ADD_NOTICE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PROBUFF_GM_ADD_NOTICE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PROBUFF_GM_ADD_NOTICE>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PROBUFF_GM_ADD_NOTICE& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PROBUFF_GM_ADD_NOTICE& from) {
    PROBUFF_GM_ADD_NOTICE::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PROBUFF_GM_ADD_NOTICE* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GM.PROBUFF_GM_ADD_NOTICE";
  }
  protected:
  explicit PROBUFF_GM_ADD_NOTICE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMNoticeFieldNumber = 3,
  };
  // optional .GM.gm_notice m_notice = 3;
  bool has_m_notice() const;
  void clear_m_notice() ;
  const ::GM::gm_notice& m_notice() const;
  PROTOBUF_NODISCARD ::GM::gm_notice* release_m_notice();
  ::GM::gm_notice* mutable_m_notice();
  void set_allocated_m_notice(::GM::gm_notice* m_notice);
  private:
  const ::GM::gm_notice& _internal_m_notice() const;
  ::GM::gm_notice* _internal_mutable_m_notice();
  public:
  void unsafe_arena_set_allocated_m_notice(
      ::GM::gm_notice* m_notice);
  ::GM::gm_notice* unsafe_arena_release_m_notice();
  // @@protoc_insertion_point(class_scope:GM.PROBUFF_GM_ADD_NOTICE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::GM::gm_notice* m_notice_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gm_2eproto;
};// -------------------------------------------------------------------

class PROBUFF_GM_ADD_NOTICE_RESPONSE final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GM.PROBUFF_GM_ADD_NOTICE_RESPONSE) */ {
 public:
  inline PROBUFF_GM_ADD_NOTICE_RESPONSE() : PROBUFF_GM_ADD_NOTICE_RESPONSE(nullptr) {}
  ~PROBUFF_GM_ADD_NOTICE_RESPONSE() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PROBUFF_GM_ADD_NOTICE_RESPONSE(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PROBUFF_GM_ADD_NOTICE_RESPONSE(const PROBUFF_GM_ADD_NOTICE_RESPONSE& from);
  PROBUFF_GM_ADD_NOTICE_RESPONSE(PROBUFF_GM_ADD_NOTICE_RESPONSE&& from) noexcept
    : PROBUFF_GM_ADD_NOTICE_RESPONSE() {
    *this = ::std::move(from);
  }

  inline PROBUFF_GM_ADD_NOTICE_RESPONSE& operator=(const PROBUFF_GM_ADD_NOTICE_RESPONSE& from) {
    CopyFrom(from);
    return *this;
  }
  inline PROBUFF_GM_ADD_NOTICE_RESPONSE& operator=(PROBUFF_GM_ADD_NOTICE_RESPONSE&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PROBUFF_GM_ADD_NOTICE_RESPONSE& default_instance() {
    return *internal_default_instance();
  }
  static inline const PROBUFF_GM_ADD_NOTICE_RESPONSE* internal_default_instance() {
    return reinterpret_cast<const PROBUFF_GM_ADD_NOTICE_RESPONSE*>(
               &_PROBUFF_GM_ADD_NOTICE_RESPONSE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PROBUFF_GM_ADD_NOTICE_RESPONSE& a, PROBUFF_GM_ADD_NOTICE_RESPONSE& b) {
    a.Swap(&b);
  }
  inline void Swap(PROBUFF_GM_ADD_NOTICE_RESPONSE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PROBUFF_GM_ADD_NOTICE_RESPONSE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PROBUFF_GM_ADD_NOTICE_RESPONSE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PROBUFF_GM_ADD_NOTICE_RESPONSE>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PROBUFF_GM_ADD_NOTICE_RESPONSE& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PROBUFF_GM_ADD_NOTICE_RESPONSE& from) {
    PROBUFF_GM_ADD_NOTICE_RESPONSE::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PROBUFF_GM_ADD_NOTICE_RESPONSE* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GM.PROBUFF_GM_ADD_NOTICE_RESPONSE";
  }
  protected:
  explicit PROBUFF_GM_ADD_NOTICE_RESPONSE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMStatFieldNumber = 3,
  };
  // optional bool m_stat = 3;
  bool has_m_stat() const;
  void clear_m_stat() ;
  bool m_stat() const;
  void set_m_stat(bool value);

  private:
  bool _internal_m_stat() const;
  void _internal_set_m_stat(bool value);

  public:
  // @@protoc_insertion_point(class_scope:GM.PROBUFF_GM_ADD_NOTICE_RESPONSE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool m_stat_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gm_2eproto;
};// -------------------------------------------------------------------

class PROBUFF_GM_DEL_NOTICE final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GM.PROBUFF_GM_DEL_NOTICE) */ {
 public:
  inline PROBUFF_GM_DEL_NOTICE() : PROBUFF_GM_DEL_NOTICE(nullptr) {}
  ~PROBUFF_GM_DEL_NOTICE() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PROBUFF_GM_DEL_NOTICE(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PROBUFF_GM_DEL_NOTICE(const PROBUFF_GM_DEL_NOTICE& from);
  PROBUFF_GM_DEL_NOTICE(PROBUFF_GM_DEL_NOTICE&& from) noexcept
    : PROBUFF_GM_DEL_NOTICE() {
    *this = ::std::move(from);
  }

  inline PROBUFF_GM_DEL_NOTICE& operator=(const PROBUFF_GM_DEL_NOTICE& from) {
    CopyFrom(from);
    return *this;
  }
  inline PROBUFF_GM_DEL_NOTICE& operator=(PROBUFF_GM_DEL_NOTICE&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PROBUFF_GM_DEL_NOTICE& default_instance() {
    return *internal_default_instance();
  }
  static inline const PROBUFF_GM_DEL_NOTICE* internal_default_instance() {
    return reinterpret_cast<const PROBUFF_GM_DEL_NOTICE*>(
               &_PROBUFF_GM_DEL_NOTICE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PROBUFF_GM_DEL_NOTICE& a, PROBUFF_GM_DEL_NOTICE& b) {
    a.Swap(&b);
  }
  inline void Swap(PROBUFF_GM_DEL_NOTICE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PROBUFF_GM_DEL_NOTICE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PROBUFF_GM_DEL_NOTICE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PROBUFF_GM_DEL_NOTICE>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PROBUFF_GM_DEL_NOTICE& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PROBUFF_GM_DEL_NOTICE& from) {
    PROBUFF_GM_DEL_NOTICE::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PROBUFF_GM_DEL_NOTICE* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GM.PROBUFF_GM_DEL_NOTICE";
  }
  protected:
  explicit PROBUFF_GM_DEL_NOTICE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMIdFieldNumber = 3,
  };
  // optional int64 m_id = 3;
  bool has_m_id() const;
  void clear_m_id() ;
  ::int64_t m_id() const;
  void set_m_id(::int64_t value);

  private:
  ::int64_t _internal_m_id() const;
  void _internal_set_m_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:GM.PROBUFF_GM_DEL_NOTICE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::int64_t m_id_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gm_2eproto;
};// -------------------------------------------------------------------

class PROBUFF_GM_DEL_NOTICE_RESPONSE final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GM.PROBUFF_GM_DEL_NOTICE_RESPONSE) */ {
 public:
  inline PROBUFF_GM_DEL_NOTICE_RESPONSE() : PROBUFF_GM_DEL_NOTICE_RESPONSE(nullptr) {}
  ~PROBUFF_GM_DEL_NOTICE_RESPONSE() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PROBUFF_GM_DEL_NOTICE_RESPONSE(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PROBUFF_GM_DEL_NOTICE_RESPONSE(const PROBUFF_GM_DEL_NOTICE_RESPONSE& from);
  PROBUFF_GM_DEL_NOTICE_RESPONSE(PROBUFF_GM_DEL_NOTICE_RESPONSE&& from) noexcept
    : PROBUFF_GM_DEL_NOTICE_RESPONSE() {
    *this = ::std::move(from);
  }

  inline PROBUFF_GM_DEL_NOTICE_RESPONSE& operator=(const PROBUFF_GM_DEL_NOTICE_RESPONSE& from) {
    CopyFrom(from);
    return *this;
  }
  inline PROBUFF_GM_DEL_NOTICE_RESPONSE& operator=(PROBUFF_GM_DEL_NOTICE_RESPONSE&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PROBUFF_GM_DEL_NOTICE_RESPONSE& default_instance() {
    return *internal_default_instance();
  }
  static inline const PROBUFF_GM_DEL_NOTICE_RESPONSE* internal_default_instance() {
    return reinterpret_cast<const PROBUFF_GM_DEL_NOTICE_RESPONSE*>(
               &_PROBUFF_GM_DEL_NOTICE_RESPONSE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PROBUFF_GM_DEL_NOTICE_RESPONSE& a, PROBUFF_GM_DEL_NOTICE_RESPONSE& b) {
    a.Swap(&b);
  }
  inline void Swap(PROBUFF_GM_DEL_NOTICE_RESPONSE* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PROBUFF_GM_DEL_NOTICE_RESPONSE* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PROBUFF_GM_DEL_NOTICE_RESPONSE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PROBUFF_GM_DEL_NOTICE_RESPONSE>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PROBUFF_GM_DEL_NOTICE_RESPONSE& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PROBUFF_GM_DEL_NOTICE_RESPONSE& from) {
    PROBUFF_GM_DEL_NOTICE_RESPONSE::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PROBUFF_GM_DEL_NOTICE_RESPONSE* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GM.PROBUFF_GM_DEL_NOTICE_RESPONSE";
  }
  protected:
  explicit PROBUFF_GM_DEL_NOTICE_RESPONSE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMStatFieldNumber = 3,
  };
  // optional bool m_stat = 3;
  bool has_m_stat() const;
  void clear_m_stat() ;
  bool m_stat() const;
  void set_m_stat(bool value);

  private:
  bool _internal_m_stat() const;
  void _internal_set_m_stat(bool value);

  public:
  // @@protoc_insertion_point(class_scope:GM.PROBUFF_GM_DEL_NOTICE_RESPONSE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    bool m_stat_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_gm_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PROBUFF_GM_GET_NOTICE

// -------------------------------------------------------------------

// gm_notice

// optional int64 m_id = 1;
inline bool gm_notice::has_m_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void gm_notice::clear_m_id() {
  _impl_.m_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t gm_notice::m_id() const {
  // @@protoc_insertion_point(field_get:GM.gm_notice.m_id)
  return _internal_m_id();
}
inline void gm_notice::set_m_id(::int64_t value) {
  _internal_set_m_id(value);
  // @@protoc_insertion_point(field_set:GM.gm_notice.m_id)
}
inline ::int64_t gm_notice::_internal_m_id() const {
  return _impl_.m_id_;
}
inline void gm_notice::_internal_set_m_id(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.m_id_ = value;
}

// optional string m_notice = 2;
inline bool gm_notice::has_m_notice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void gm_notice::clear_m_notice() {
  _impl_.m_notice_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& gm_notice::m_notice() const {
  // @@protoc_insertion_point(field_get:GM.gm_notice.m_notice)
  return _internal_m_notice();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void gm_notice::set_m_notice(Arg_&& arg,
                                                     Args_... args) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.m_notice_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:GM.gm_notice.m_notice)
}
inline std::string* gm_notice::mutable_m_notice() {
  std::string* _s = _internal_mutable_m_notice();
  // @@protoc_insertion_point(field_mutable:GM.gm_notice.m_notice)
  return _s;
}
inline const std::string& gm_notice::_internal_m_notice() const {
  return _impl_.m_notice_.Get();
}
inline void gm_notice::_internal_set_m_notice(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;


  _impl_.m_notice_.Set(value, GetArenaForAllocation());
}
inline std::string* gm_notice::_internal_mutable_m_notice() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.m_notice_.Mutable( GetArenaForAllocation());
}
inline std::string* gm_notice::release_m_notice() {
  // @@protoc_insertion_point(field_release:GM.gm_notice.m_notice)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.m_notice_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.m_notice_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void gm_notice::set_allocated_m_notice(std::string* value) {
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.m_notice_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.m_notice_.IsDefault()) {
          _impl_.m_notice_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:GM.gm_notice.m_notice)
}

// optional int32 m_starttime = 3;
inline bool gm_notice::has_m_starttime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void gm_notice::clear_m_starttime() {
  _impl_.m_starttime_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t gm_notice::m_starttime() const {
  // @@protoc_insertion_point(field_get:GM.gm_notice.m_starttime)
  return _internal_m_starttime();
}
inline void gm_notice::set_m_starttime(::int32_t value) {
  _internal_set_m_starttime(value);
  // @@protoc_insertion_point(field_set:GM.gm_notice.m_starttime)
}
inline ::int32_t gm_notice::_internal_m_starttime() const {
  return _impl_.m_starttime_;
}
inline void gm_notice::_internal_set_m_starttime(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.m_starttime_ = value;
}

// optional int32 m_finishtime = 4;
inline bool gm_notice::has_m_finishtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void gm_notice::clear_m_finishtime() {
  _impl_.m_finishtime_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t gm_notice::m_finishtime() const {
  // @@protoc_insertion_point(field_get:GM.gm_notice.m_finishtime)
  return _internal_m_finishtime();
}
inline void gm_notice::set_m_finishtime(::int32_t value) {
  _internal_set_m_finishtime(value);
  // @@protoc_insertion_point(field_set:GM.gm_notice.m_finishtime)
}
inline ::int32_t gm_notice::_internal_m_finishtime() const {
  return _impl_.m_finishtime_;
}
inline void gm_notice::_internal_set_m_finishtime(::int32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.m_finishtime_ = value;
}

// -------------------------------------------------------------------

// PROBUFF_GM_GET_NOTICE_RESPONSE

// repeated .GM.gm_notice m_notice = 3;
inline int PROBUFF_GM_GET_NOTICE_RESPONSE::_internal_m_notice_size() const {
  return _impl_.m_notice_.size();
}
inline int PROBUFF_GM_GET_NOTICE_RESPONSE::m_notice_size() const {
  return _internal_m_notice_size();
}
inline void PROBUFF_GM_GET_NOTICE_RESPONSE::clear_m_notice() {
  _internal_mutable_m_notice()->Clear();
}
inline ::GM::gm_notice* PROBUFF_GM_GET_NOTICE_RESPONSE::mutable_m_notice(int index) {
  // @@protoc_insertion_point(field_mutable:GM.PROBUFF_GM_GET_NOTICE_RESPONSE.m_notice)
  return _internal_mutable_m_notice()->Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GM::gm_notice >*
PROBUFF_GM_GET_NOTICE_RESPONSE::mutable_m_notice() {
  // @@protoc_insertion_point(field_mutable_list:GM.PROBUFF_GM_GET_NOTICE_RESPONSE.m_notice)
  return _internal_mutable_m_notice();
}
inline const ::GM::gm_notice& PROBUFF_GM_GET_NOTICE_RESPONSE::_internal_m_notice(int index) const {
  return _internal_m_notice().Get(index);
}
inline const ::GM::gm_notice& PROBUFF_GM_GET_NOTICE_RESPONSE::m_notice(int index) const {
  // @@protoc_insertion_point(field_get:GM.PROBUFF_GM_GET_NOTICE_RESPONSE.m_notice)
  return _internal_m_notice(index);
}
inline ::GM::gm_notice* PROBUFF_GM_GET_NOTICE_RESPONSE::_internal_add_m_notice() {
  return _internal_mutable_m_notice()->Add();
}
inline ::GM::gm_notice* PROBUFF_GM_GET_NOTICE_RESPONSE::add_m_notice() {
  ::GM::gm_notice* _add = _internal_add_m_notice();
  // @@protoc_insertion_point(field_add:GM.PROBUFF_GM_GET_NOTICE_RESPONSE.m_notice)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GM::gm_notice >&
PROBUFF_GM_GET_NOTICE_RESPONSE::m_notice() const {
  // @@protoc_insertion_point(field_list:GM.PROBUFF_GM_GET_NOTICE_RESPONSE.m_notice)
  return _internal_m_notice();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::GM::gm_notice>&
PROBUFF_GM_GET_NOTICE_RESPONSE::_internal_m_notice() const {
  return _impl_.m_notice_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::GM::gm_notice>*
PROBUFF_GM_GET_NOTICE_RESPONSE::_internal_mutable_m_notice() {
  return &_impl_.m_notice_;
}

// -------------------------------------------------------------------

// PROBUFF_GM_ADD_NOTICE

// optional .GM.gm_notice m_notice = 3;
inline bool PROBUFF_GM_ADD_NOTICE::has_m_notice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.m_notice_ != nullptr);
  return value;
}
inline void PROBUFF_GM_ADD_NOTICE::clear_m_notice() {
  if (_impl_.m_notice_ != nullptr) _impl_.m_notice_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::GM::gm_notice& PROBUFF_GM_ADD_NOTICE::_internal_m_notice() const {
  const ::GM::gm_notice* p = _impl_.m_notice_;
  return p != nullptr ? *p : reinterpret_cast<const ::GM::gm_notice&>(
      ::GM::_gm_notice_default_instance_);
}
inline const ::GM::gm_notice& PROBUFF_GM_ADD_NOTICE::m_notice() const {
  // @@protoc_insertion_point(field_get:GM.PROBUFF_GM_ADD_NOTICE.m_notice)
  return _internal_m_notice();
}
inline void PROBUFF_GM_ADD_NOTICE::unsafe_arena_set_allocated_m_notice(
    ::GM::gm_notice* m_notice) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.m_notice_);
  }
  _impl_.m_notice_ = m_notice;
  if (m_notice) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:GM.PROBUFF_GM_ADD_NOTICE.m_notice)
}
inline ::GM::gm_notice* PROBUFF_GM_ADD_NOTICE::release_m_notice() {
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::GM::gm_notice* temp = _impl_.m_notice_;
  _impl_.m_notice_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::GM::gm_notice* PROBUFF_GM_ADD_NOTICE::unsafe_arena_release_m_notice() {
  // @@protoc_insertion_point(field_release:GM.PROBUFF_GM_ADD_NOTICE.m_notice)
  _impl_._has_bits_[0] &= ~0x00000001u;
  ::GM::gm_notice* temp = _impl_.m_notice_;
  _impl_.m_notice_ = nullptr;
  return temp;
}
inline ::GM::gm_notice* PROBUFF_GM_ADD_NOTICE::_internal_mutable_m_notice() {
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.m_notice_ == nullptr) {
    auto* p = CreateMaybeMessage<::GM::gm_notice>(GetArenaForAllocation());
    _impl_.m_notice_ = p;
  }
  return _impl_.m_notice_;
}
inline ::GM::gm_notice* PROBUFF_GM_ADD_NOTICE::mutable_m_notice() {
  ::GM::gm_notice* _msg = _internal_mutable_m_notice();
  // @@protoc_insertion_point(field_mutable:GM.PROBUFF_GM_ADD_NOTICE.m_notice)
  return _msg;
}
inline void PROBUFF_GM_ADD_NOTICE::set_allocated_m_notice(::GM::gm_notice* m_notice) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.m_notice_;
  }
  if (m_notice) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(m_notice);
    if (message_arena != submessage_arena) {
      m_notice = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, m_notice, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.m_notice_ = m_notice;
  // @@protoc_insertion_point(field_set_allocated:GM.PROBUFF_GM_ADD_NOTICE.m_notice)
}

// -------------------------------------------------------------------

// PROBUFF_GM_ADD_NOTICE_RESPONSE

// optional bool m_stat = 3;
inline bool PROBUFF_GM_ADD_NOTICE_RESPONSE::has_m_stat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PROBUFF_GM_ADD_NOTICE_RESPONSE::clear_m_stat() {
  _impl_.m_stat_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PROBUFF_GM_ADD_NOTICE_RESPONSE::m_stat() const {
  // @@protoc_insertion_point(field_get:GM.PROBUFF_GM_ADD_NOTICE_RESPONSE.m_stat)
  return _internal_m_stat();
}
inline void PROBUFF_GM_ADD_NOTICE_RESPONSE::set_m_stat(bool value) {
  _internal_set_m_stat(value);
  // @@protoc_insertion_point(field_set:GM.PROBUFF_GM_ADD_NOTICE_RESPONSE.m_stat)
}
inline bool PROBUFF_GM_ADD_NOTICE_RESPONSE::_internal_m_stat() const {
  return _impl_.m_stat_;
}
inline void PROBUFF_GM_ADD_NOTICE_RESPONSE::_internal_set_m_stat(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.m_stat_ = value;
}

// -------------------------------------------------------------------

// PROBUFF_GM_DEL_NOTICE

// optional int64 m_id = 3;
inline bool PROBUFF_GM_DEL_NOTICE::has_m_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PROBUFF_GM_DEL_NOTICE::clear_m_id() {
  _impl_.m_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t PROBUFF_GM_DEL_NOTICE::m_id() const {
  // @@protoc_insertion_point(field_get:GM.PROBUFF_GM_DEL_NOTICE.m_id)
  return _internal_m_id();
}
inline void PROBUFF_GM_DEL_NOTICE::set_m_id(::int64_t value) {
  _internal_set_m_id(value);
  // @@protoc_insertion_point(field_set:GM.PROBUFF_GM_DEL_NOTICE.m_id)
}
inline ::int64_t PROBUFF_GM_DEL_NOTICE::_internal_m_id() const {
  return _impl_.m_id_;
}
inline void PROBUFF_GM_DEL_NOTICE::_internal_set_m_id(::int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.m_id_ = value;
}

// -------------------------------------------------------------------

// PROBUFF_GM_DEL_NOTICE_RESPONSE

// optional bool m_stat = 3;
inline bool PROBUFF_GM_DEL_NOTICE_RESPONSE::has_m_stat() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void PROBUFF_GM_DEL_NOTICE_RESPONSE::clear_m_stat() {
  _impl_.m_stat_ = false;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline bool PROBUFF_GM_DEL_NOTICE_RESPONSE::m_stat() const {
  // @@protoc_insertion_point(field_get:GM.PROBUFF_GM_DEL_NOTICE_RESPONSE.m_stat)
  return _internal_m_stat();
}
inline void PROBUFF_GM_DEL_NOTICE_RESPONSE::set_m_stat(bool value) {
  _internal_set_m_stat(value);
  // @@protoc_insertion_point(field_set:GM.PROBUFF_GM_DEL_NOTICE_RESPONSE.m_stat)
}
inline bool PROBUFF_GM_DEL_NOTICE_RESPONSE::_internal_m_stat() const {
  return _impl_.m_stat_;
}
inline void PROBUFF_GM_DEL_NOTICE_RESPONSE::_internal_set_m_stat(bool value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.m_stat_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace GM


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_gm_2eproto_2epb_2eh
