// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: net.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pbnet {

  /// <summary>Holder for reflection information generated from net.proto</summary>
  public static partial class NetReflection {

    #region Descriptor
    /// <summary>File descriptor for net.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgluZXQucHJvdG8SBXBibmV0GghkYi5wcm90byIXChVQUk9CVUZGX05FVF9I",
            "RUFSVEJFQVQiQgoUUFJPQlVGRl9ORVRfUkVDSEFSR0USGQoMbV9yZWNoYXJn",
            "ZWlkGAEgASgFSACIAQFCDwoNX21fcmVjaGFyZ2VpZCKGAgodUFJPQlVGRl9O",
            "RVRfUkVDSEFSR0VfUkVTUE9OU0USGQoMbV9yZWNoYXJnZWlkGAEgASgFSACI",
            "AQESPwoGbV9zdGF0GAIgASgOMioucGJuZXQuUFJPQlVGRl9ORVRfUkVDSEFS",
            "R0VfUkVTUE9OU0UuRXN0YXRIAYgBARIWCgltX29yZGVyaWQYAyABKAlIAogB",
            "ASJHCgVFc3RhdBIRCg1Fc3RhdF9TdWNjZXNzEAASFwoTRXN0YXRfTm90UmVj",
            "aGFyZ2VJZBABEhIKDkVzdGF0X01heENvdW50EAJCDwoNX21fcmVjaGFyZ2Vp",
            "ZEIJCgdfbV9zdGF0QgwKCl9tX29yZGVyaWQijQIKIlBST0JVRkZfTkVUX0RF",
            "TElWRVJfR09PRFNfUkVDSEFSR0USGQoMbV9yZWNoYXJnZWlkGAEgASgFSACI",
            "AQESFgoJbV9vcmRlcmlkGAIgASgJSAGIAQESEwoGbV9nb2xkGAMgASgFSAKI",
            "AQESRgoHbV9pdGVtcxgEIAMoCzI1LnBibmV0LlBST0JVRkZfTkVUX0RFTElW",
            "RVJfR09PRFNfUkVDSEFSR0UuTUl0ZW1zRW50cnkaLQoLTUl0ZW1zRW50cnkS",
            "CwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4AUIPCg1fbV9yZWNoYXJn",
            "ZWlkQgwKCl9tX29yZGVyaWRCCQoHX21fZ29sZCI3ChFQUk9CVUZGX05FVF9F",
            "UlJPUhIVCghtX2Vycm51bRgBIAEoBUgAiAEBQgsKCV9tX2Vycm51bSJsChpQ",
            "Uk9CVUZGX05FVF9FUlJPUl9SRVNQT05TRRIVCghtX2Vycm51bRgBIAEoBUgA",
            "iAEBEhkKDG1fZXJybWVzc2FnZRgCIAEoCUgBiAEBQgsKCV9tX2Vycm51bUIP",
            "Cg1fbV9lcnJtZXNzYWdlIhYKFFBST0JVRkZfTkVUX0dFVF9USU1FIj0KHVBS",
            "T0JVRkZfTkVUX0dFVF9USU1FX1JFU1BPTlNFEhIKBW1fdXRjGAEgASgFSACI",
            "AQFCCAoGX21fdXRjIhgKFlBST0JVRkZfTkVUX0dFVF9OT1RJQ0UiRQofUFJP",
            "QlVGRl9ORVRfR0VUX05PVElDRV9SRVNQT05TRRIiCgltX25vdGljZXMYASAD",
            "KAsyDy5wYmRiLmRiX25vdGljZSKIAQoYUFJPQlVGRl9ORVRfQUNPVU5UX0xP",
            "R0lOEhMKBm1fYXJlYRgBIAEoBUgAiAEBEhYKCW1fYWNjb3VudBgCIAEoCUgB",
            "iAEBEhcKCm1fcGFzc3dvcmQYAyABKAlIAogBAUIJCgdfbV9hcmVhQgwKCl9t",
            "X2FjY291bnRCDQoLX21fcGFzc3dvcmQi3QEKIVBST0JVRkZfTkVUX0FDT1VO",
            "VF9MT0dJTl9SRVNQT05TRRITCgZtX2FyZWEYASABKAVIAIgBARIVCghtX3Jv",
            "bGVpZBgCIAEoA0gBiAEBEhYKCW1fc2Vzc2lvbhgDIAEoCUgCiAEBEhYKCW1f",
            "YWNjb3VudBgEIAEoCUgDiAEBEhgKC21fZ2F0ZXdheWlkGAUgASgFSASIAQFC",
            "CQoHX21fYXJlYUILCglfbV9yb2xlaWRCDAoKX21fc2Vzc2lvbkIMCgpfbV9h",
            "Y2NvdW50Qg4KDF9tX2dhdGV3YXlpZCLUAQoWUFJPQlVGRl9ORVRfUk9MRV9M",
            "T0dJThIVCghtX3JvbGVpZBgBIAEoA0gAiAEBEhYKCW1fc2Vzc2lvbhgCIAEo",
            "CUgBiAEBEhcKCm1faXNjcmVhdGUYAyABKAhIAogBARITCgZtX2FyZWEYBCAB",
            "KAVIA4gBARIYCgttX2dhdGV3YXlpZBgFIAEoBUgEiAEBQgsKCV9tX3JvbGVp",
            "ZEIMCgpfbV9zZXNzaW9uQg0KC19tX2lzY3JlYXRlQgkKB19tX2FyZWFCDgoM",
            "X21fZ2F0ZXdheWlkIhcKFVBST0JVRkZfTkVUX1JPTEVfU1lOQyKqAQoeUFJP",
            "QlVGRl9ORVRfUk9MRV9TWU5DX1JFU1BPTlNFEiIKBm1fcm9sZRgBIAEoCzIN",
            "LnBiZGIuZGJfcm9sZUgAiAEBEiAKBW1fYmFnGAIgASgLMgwucGJkYi5kYl9i",
            "YWdIAYgBARIiCgZtX3Rhc2sYAyABKAsyDS5wYmRiLmRiX3Rhc2tIAogBAUIJ",
            "CgdfbV9yb2xlQggKBl9tX2JhZ0IJCgdfbV90YXNrIhYKFFBST0JVRkZfTkVU",
            "X0JBR19TWU5DIksKHVBST0JVRkZfTkVUX0JBR19TWU5DX1JFU1BPTlNFEiAK",
            "BW1fYmFnGAEgASgLMgwucGJkYi5kYl9iYWdIAIgBAUIICgZfbV9iYWciGAoW",
            "UFJPQlVGRl9ORVRfQkFHX1VQREFURSLxAgofUFJPQlVGRl9ORVRfQkFHX1VQ",
            "REFURV9SRVNQT05TRRJCCgptX2RlbGl0ZW1zGAEgAygLMi4ucGJuZXQuUFJP",
            "QlVGRl9ORVRfQkFHX1VQREFURV9SRVNQT05TRS5kZWxpdGVtEhkKEW1fZGVs",
            "bm9zdGFja2l0ZW1zGAIgAygFEkIKCm1fYWRkaXRlbXMYAyADKAsyLi5wYm5l",
            "dC5QUk9CVUZGX05FVF9CQUdfVVBEQVRFX1JFU1BPTlNFLmFkZGl0ZW0SGQoR",
            "bV9hZGRub3N0YWNraXRlbXMYBCADKAUaRwoHZGVsaXRlbRIRCgRtX2lkGAEg",
            "ASgFSACIAQESFAoHbV9jb3VudBgCIAEoBUgBiAEBQgcKBV9tX2lkQgoKCF9t",
            "X2NvdW50GkcKB2FkZGl0ZW0SEQoEbV9pZBgBIAEoBUgAiAEBEhQKB21fY291",
            "bnQYAiABKAVIAYgBAUIHCgVfbV9pZEIKCghfbV9jb3VudCIvCg9QUk9CVUZG",
            "X05FVF9DTUQSEgoFbV9jbWQYASABKAlIAIgBAUIICgZfbV9jbWQiggEKEFBS",
            "T0JVRkZfTkVUX0NIQVQSEwoGbV90eXBlGAEgASgFSACIAQESGAoLbV9jaGFu",
            "bmVsaWQYAiABKAVIAYgBARIWCgltX2NvbnRlbnQYAyABKAlIAogBAUIJCgdf",
            "bV90eXBlQg4KDF9tX2NoYW5uZWxpZEIMCgpfbV9jb250ZW50IpoBCghjaGF0",
            "aXRlbRIVCghtX3JvbGVpZBgBIAEoA0gAiAEBEhcKCm1fcm9sZW5hbWUYAiAB",
            "KAlIAYgBARIWCgltX2NvbnRlbnQYAyABKAlIAogBARISCgVtX3V0YxgEIAEo",
            "BUgDiAEBQgsKCV9tX3JvbGVpZEINCgtfbV9yb2xlbmFtZUIMCgpfbV9jb250",
            "ZW50QggKBl9tX3V0YyKqAQoZUFJPQlVGRl9ORVRfQ0hBVF9SRVNQT05TRRIT",
            "CgZtX3R5cGUYASABKAVIAIgBARIYCgttX2NoYW5uZWxpZBgCIAEoBUgBiAEB",
            "EiMKCm1fY2hhdGxpc3QYAyADKAsyDy5wYm5ldC5jaGF0aXRlbRITCgZtX3N0",
            "YXQYBCABKAhIAogBAUIJCgdfbV90eXBlQg4KDF9tX2NoYW5uZWxpZEIJCgdf",
            "bV9zdGF0IjkKF1BST0JVRkZfTkVUX1NXSVRDSF9MSU5FEhMKBm1fbGluZRgB",
            "IAEoBUgAiAEBQgkKB19tX2xpbmUiYgogUFJPQlVGRl9ORVRfU1dJVENIX0xJ",
            "TkVfUkVTUE9OU0USEwoGbV9saW5lGAEgASgFSACIAQESEwoGbV9zdGF0GAIg",
            "ASgISAGIAQFCCQoHX21fbGluZUIJCgdfbV9zdGF0IhcKFVBST0JVRkZfTkVU",
            "X01BSUxfTElTVCKcAQoeUFJPQlVGRl9ORVRfTUFJTF9MSVNUX1JFU1BPTlNF",
            "EkAKBm1fbWFpbBgBIAMoCzIwLnBibmV0LlBST0JVRkZfTkVUX01BSUxfTElT",
            "VF9SRVNQT05TRS5NTWFpbEVudHJ5GjgKCk1NYWlsRW50cnkSCwoDa2V5GAEg",
            "ASgFEhkKBXZhbHVlGAIgASgLMgoucGJkYi5tYWlsOgI4ASI7ChVQUk9CVUZG",
            "X05FVF9NQUlMX1JFQUQSFQoIbV9tYWlsaWQYASABKANIAIgBAUILCglfbV9t",
            "YWlsaWQiZAoeUFJPQlVGRl9ORVRfTUFJTF9SRUFEX1JFU1BPTlNFEhUKCG1f",
            "bWFpbGlkGAEgASgDSACIAQESEwoGbV9zdGF0GAIgASgISAGIAQFCCwoJX21f",
            "bWFpbGlkQgkKB19tX3N0YXQiOwoVUFJPQlVGRl9ORVRfTUFJTF9EUkFXEhUK",
            "CG1fbWFpbGlkGAEgASgDSACIAQFCCwoJX21fbWFpbGlkImQKHlBST0JVRkZf",
            "TkVUX01BSUxfRFJBV19SRVNQT05TRRIVCghtX21haWxpZBgBIAEoA0gAiAEB",
            "EhMKBm1fc3RhdBgCIAEoCEgBiAEBQgsKCV9tX21haWxpZEIJCgdfbV9zdGF0",
            "IjoKFFBST0JVRkZfTkVUX01BSUxfREVMEhUKCG1fbWFpbGlkGAEgASgDSACI",
            "AQFCCwoJX21fbWFpbGlkImMKHVBST0JVRkZfTkVUX01BSUxfREVMX1JFU1BP",
            "TlNFEhUKCG1fbWFpbGlkGAEgASgDSACIAQESEwoGbV9zdGF0GAIgASgISAGI",
            "AQFCCwoJX21fbWFpbGlkQgkKB19tX3N0YXQiPQoHVkVDVE9SMhIQCgNtX3gY",
            "ASABKAVIAIgBARIQCgNtX3kYAiABKAVIAYgBAUIGCgRfbV94QgYKBF9tX3ki",
            "VwoHVkVDVE9SMxIQCgNtX3gYASABKAVIAIgBARIQCgNtX3kYAiABKAVIAYgB",
            "ARIQCgNtX3oYAyABKAVIAogBAUIGCgRfbV94QgYKBF9tX3lCBgoEX21feiKn",
            "AQoNVU5JVF9QT1NJVElPThIRCgRtX2lkGAIgASgDSACIAQESJwoKbV9wb3Np",
            "dGlvbhgDIAEoCzIOLnBibmV0LlZFQ1RPUjJIAYgBARIUCgdtX2FuZ2xlGAQg",
            "ASgFSAKIAQESFAoHbV9zcGVlZBgFIAEoBUgDiAEBQgcKBV9tX2lkQg0KC19t",
            "X3Bvc2l0aW9uQgoKCF9tX2FuZ2xlQgoKCF9tX3NwZWVkIlEKDVVuaXRBdHRy",
            "aWJ1dGUSEwoGbV90eXBlGAEgASgFSACIAQESFAoHbV92YWx1ZRgCIAEoBUgB",
            "iAEBQgkKB19tX3R5cGVCCgoIX21fdmFsdWUiVwoKVW5pdE1vZHVsZRIUCgdt",
            "X210eXBlGAEgASgFSACIAQESJwoJbV9tb2R1bGVzGAIgAygLMhQucGJuZXQu",
            "VW5pdEF0dHJpYnV0ZUIKCghfbV9tdHlwZSLmAQoEVU5JVBIhCgZtX3R5cGUY",
            "ASABKA4yDC5wYm5ldC5ldW5pdEgAiAEBEhEKBG1faWQYAiABKANIAYgBARIt",
            "CgptX3Bvc2l0aW9uGAMgASgLMhQucGJuZXQuVU5JVF9QT1NJVElPTkgCiAEB",
            "EiQKCW1fbW9kdWxlcxgEIAMoCzIRLnBibmV0LlVuaXRNb2R1bGUSJQoGbV9z",
            "dGF0GAUgASgOMhAucGJuZXQuZXVuaXRzdGF0SAOIAQFCCQoHX21fdHlwZUIH",
            "CgVfbV9pZEINCgtfbV9wb3NpdGlvbkIJCgdfbV9zdGF0IkIKGlBST0JVRkZf",
            "TkVUX1NZTkNfQVRUUklCVVRFEiQKCW1fbW9kdWxlcxgBIAMoCzIRLnBibmV0",
            "LlVuaXRNb2R1bGUiNQoVUFJPQlVGRl9ORVRfU1lOQ19VTklUEhwKB21fdW5p",
            "dHMYASADKAsyCy5wYm5ldC5VTklUIlUKHFBST0JVRkZfTkVUX0VOVEVSX0xF",
            "QVZFX1ZJRVcSFgoJbV9pc2VudGVyGAEgASgISACIAQESDwoHbV91bml0cxgC",
            "IAMoA0IMCgpfbV9pc2VudGVyIqgBChlQUk9CVUZGX05FVF9TWU5DX1BPU0lU",
            "SU9OEkMKCm1fcG9zaXRpb24YASADKAsyLy5wYm5ldC5QUk9CVUZGX05FVF9T",
            "WU5DX1BPU0lUSU9OLk1Qb3NpdGlvbkVudHJ5GkYKDk1Qb3NpdGlvbkVudHJ5",
            "EgsKA2tleRgBIAEoAxIjCgV2YWx1ZRgCIAEoCzIULnBibmV0LlVOSVRfUE9T",
            "SVRJT046AjgBIlgKGFBST0JVRkZfTkVUX0NIQU5HRV9BTkdMRRItCgptX3Bv",
            "c2l0aW9uGAEgASgLMhQucGJuZXQuVU5JVF9QT1NJVElPTkgAiAEBQg0KC19t",
            "X3Bvc2l0aW9uImMKFFBST0JVRkZfTkVUX01BVENISU5HEiIKBm1fdHlwZRgB",
            "IAEoDjINLnBibmV0LmVwbGF5c0gAiAEBEhIKBW1fdGlkGAIgASgFSAGIAQFC",
            "CQoHX21fdHlwZUIICgZfbV90aWQiuwEKD01BVENISU5HX01FTUJFUhIRCgRt",
            "X2lkGAEgASgDSACIAQESEwoGbV9uYW1lGAIgASgJSAGIAQESEQoEbV9sdhgD",
            "IAEoBUgCiAEBEhcKCm1fYmVnbWF0Y2gYBCABKAVIA4gBARIYCgttX2lzY29u",
            "ZmlybRgFIAEoCEgEiAEBQgcKBV9tX2lkQgkKB19tX25hbWVCBwoFX21fbHZC",
            "DQoLX21fYmVnbWF0Y2hCDgoMX21faXNjb25maXJtIjsKHVBST0JVRkZfTkVU",
            "X01BVENISU5HX1JFU1BPTlNFEhEKBG1faWQYASABKANIAIgBAUIHCgVfbV9p",
            "ZCJwChtQUk9CVUZGX05FVF9NQVRDSElOR19DQU5DRUwSIgoGbV90eXBlGAEg",
            "ASgOMg0ucGJuZXQuZXBsYXlzSACIAQESFQoIbV9yb29taWQYAiABKANIAYgB",
            "AUIJCgdfbV90eXBlQgsKCV9tX3Jvb21pZCKTAQokUFJPQlVGRl9ORVRfTUFU",
            "Q0hJTkdfQ0FOQ0VMX1JFU1BPTlNFEiIKBm1fdHlwZRgBIAEoDjINLnBibmV0",
            "LmVwbGF5c0gAiAEBEjEKBm1fc3RhdBgCIAEoDjIcLnBibmV0LmVtYXRjaGlu",
            "Z19jYW5jZWxfc3RhdEgBiAEBQgkKB19tX3R5cGVCCQoHX21fc3RhdCK1AQoi",
            "UFJPQlVGRl9ORVRfTUVNQkVSX01BVENISU5HX0NBTkNFTBIiCgZtX3R5cGUY",
            "ASABKA4yDS5wYm5ldC5lcGxheXNIAIgBARI3CgxtX2NhbmNlbHR5cGUYAiAB",
            "KA4yHC5wYm5ldC5ldHlwZV9tYXRjaGluZ19jYW5jZWxIAYgBARIWCg5tX2Nh",
            "bmNlbG1lbWJlchgDIAMoA0IJCgdfbV90eXBlQg8KDV9tX2NhbmNlbHR5cGUi",
            "dQogUFJPQlVGRl9ORVRfTUFUQ0hJTkdfV0FJVENPTkZJUk0SIgoGbV90eXBl",
            "GAEgASgOMg0ucGJuZXQuZXBsYXlzSACIAQESFQoIbV9yb29taWQYAiABKAVI",
            "AYgBAUIJCgdfbV90eXBlQgsKCV9tX3Jvb21pZCJxChxQUk9CVUZGX05FVF9N",
            "QVRDSElOR19DT05GSVJNEiIKBm1fdHlwZRgBIAEoDjINLnBibmV0LmVwbGF5",
            "c0gAiAEBEhUKCG1fcm9vbWlkGAIgASgFSAGIAQFCCQoHX21fdHlwZUILCglf",
            "bV9yb29taWQiuQEKJVBST0JVRkZfTkVUX01BVENISU5HX0NPTkZJUk1fUkVT",
            "UE9OU0USIgoGbV90eXBlGAEgASgOMg0ucGJuZXQuZXBsYXlzSACIAQESFQoI",
            "bV9yb29taWQYAiABKAVIAYgBARIyCgZtX3N0YXQYAyABKA4yHS5wYm5ldC5l",
            "bWF0Y2hpbmdfY29uZmlybV9zdGF0SAKIAQFCCQoHX21fdHlwZUILCglfbV9y",
            "b29taWRCCQoHX21fc3RhdCKIAQohUFJPQlVGRl9ORVRfU1lOQ19NQVRDSElO",
            "R19DT05GSVJNEiIKBm1fdHlwZRgBIAEoDjINLnBibmV0LmVwbGF5c0gAiAEB",
            "EhUKCG1fcm9vbWlkGAIgASgFSAGIAQESEAoIbV9yb2xlaWQYAyADKANCCQoH",
            "X21fdHlwZUILCglfbV9yb29taWQimAEKGVBST0JVRkZfTkVUX01BVENISU5H",
            "X1NZTkMSIgoGbV90eXBlGAEgASgOMg0ucGJuZXQuZXBsYXlzSACIAQESFQoI",
            "bV9yb29taWQYAiABKAVIAYgBARIoCghtX21lbWJlchgDIAMoCzIWLnBibmV0",
            "Lk1BVENISU5HX01FTUJFUkIJCgdfbV90eXBlQgsKCV9tX3Jvb21pZCKqAQol",
            "UFJPQlVGRl9ORVRfTUFUQ0hJTkdfU1VDQ0VTU19SRVNQT05TRRIiCgZtX3R5",
            "cGUYASABKA4yDS5wYm5ldC5lcGxheXNIAIgBARIVCghtX3Jvb21pZBgCIAEo",
            "BUgBiAEBEhsKDm1fcGxheXNhY3RvcmlkGAMgASgDSAKIAQFCCQoHX21fdHlw",
            "ZUILCglfbV9yb29taWRCEQoPX21fcGxheXNhY3RvcmlkIr8BChxQUk9CVUZG",
            "X05FVF9NQVRDSElOR19TVUNDRVNTEiIKBm1fdHlwZRgBIAEoDjINLnBibmV0",
            "LmVwbGF5c0gAiAEBEhUKCG1fcm9vbWlkGAIgASgFSAGIAQESKAoIbV9tZW1i",
            "ZXIYAyADKAsyFi5wYm5ldC5NQVRDSElOR19NRU1CRVISFQoIbV9kYXRhaWQY",
            "BCABKAVIAogBAUIJCgdfbV90eXBlQgsKCV9tX3Jvb21pZEILCglfbV9kYXRh",
            "aWQibAoXUFJPQlVGRl9ORVRfRU5URVJfUExBWVMSIgoGbV90eXBlGAEgASgO",
            "Mg0ucGJuZXQuZXBsYXlzSACIAQESFQoIbV9yb29taWQYAiABKAVIAYgBAUIJ",
            "CgdfbV90eXBlQgsKCV9tX3Jvb21pZCpGCg9lbnVtX2xvZ2ljX2NoYXQSEQoN",
            "Z2V0X2NoYXRfbGlzdBAAEg4KCmNoYXRfc3BlYWsQARIQCgx1cGRhdGFfc3Bl",
            "Y2sQAio8CgVldW5pdBIOCgpldW5pdF9yb2xlEAASEQoNZXVuaXRfbW9uc3Rl",
            "chABEhAKDGV1bml0X3JlZ2lvbhACKnMKCWV1bml0c3RhdBIUChBldW5pdHN0",
            "YXRfbm9ybWFsEAASFAoQZXVuaXRzdGF0X25vbW92ZRABEhwKGGV1bml0c3Rh",
            "dF9ub25vcm1hbGF0dGFjaxACEhwKGGV1bml0c3RhdF9ub3JlbGVhc2Vza2ls",
            "bBAEKjsKBmVwbGF5cxIfChtlcGxheXNfZ29fdW5kZXJncm91bmRwYWxhY2UQ",
            "ABIQCgxlcGxheXNfY291bnQQASqbAQoVZW1hdGNoaW5nX2NhbmNlbF9zdGF0",
            "EhwKGGVtYXRjaGluZ19jYW5jZWxfc3VjY2VzcxAAEhoKFmVtYXRjaGluZ19j",
            "YW5jZWxfc3RhZ2UQARIgChxlbWF0Y2hpbmdfY2FuY2VsX3Jvb21ub3RmaW5k",
            "EAISJgoiZW1hdGNoaW5nX2NhbmNlbF9yb29tbWVtYmVybm90ZmluZBADKqsB",
            "ChVldHlwZV9tYXRjaGluZ19jYW5jZWwSIAocZXR5cGVfbWF0Y2hpbmdfY2Fu",
            "Y2VsX2FjdGl2ZRAAEiEKHWV0eXBlX21hdGNoaW5nX2NhbmNlbF90aW1lb3V0",
            "EAESJgoiZXR5cGVfbWF0Y2hpbmdfd2FpdGNvbmZpcm1fdGltZW91dBACEiUK",
            "IWV0eXBlX21hdGNoaW5nX3dhaXRjcmVhdGVfdGltZW91dBADKqABChZlbWF0",
            "Y2hpbmdfY29uZmlybV9zdGF0Eh0KGWVtYXRjaGluZ19jb25maXJtX3N1Y2Nl",
            "c3MQABIbChdlbWF0Y2hpbmdfY29uZmlybV9zdGFnZRABEiEKHWVtYXRjaGlu",
            "Z19jb25maXJtX3Jvb21ub3RmaW5kEAISJwojZW1hdGNoaW5nX2NvbmZpcm1f",
            "cm9vbW1lbWJlcm5vdGZpbmQQA0ICSAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Pbdb.DbReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Pbnet.enum_logic_chat), typeof(global::Pbnet.eunit), typeof(global::Pbnet.eunitstat), typeof(global::Pbnet.eplays), typeof(global::Pbnet.ematching_cancel_stat), typeof(global::Pbnet.etype_matching_cancel), typeof(global::Pbnet.ematching_confirm_stat), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_HEARTBEAT), global::Pbnet.PROBUFF_NET_HEARTBEAT.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_RECHARGE), global::Pbnet.PROBUFF_NET_RECHARGE.Parser, new[]{ "MRechargeid" }, new[]{ "MRechargeid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_RECHARGE_RESPONSE), global::Pbnet.PROBUFF_NET_RECHARGE_RESPONSE.Parser, new[]{ "MRechargeid", "MStat", "MOrderid" }, new[]{ "MRechargeid", "MStat", "MOrderid" }, new[]{ typeof(global::Pbnet.PROBUFF_NET_RECHARGE_RESPONSE.Types.Estat) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_DELIVER_GOODS_RECHARGE), global::Pbnet.PROBUFF_NET_DELIVER_GOODS_RECHARGE.Parser, new[]{ "MRechargeid", "MOrderid", "MGold", "MItems" }, new[]{ "MRechargeid", "MOrderid", "MGold" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_ERROR), global::Pbnet.PROBUFF_NET_ERROR.Parser, new[]{ "MErrnum" }, new[]{ "MErrnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_ERROR_RESPONSE), global::Pbnet.PROBUFF_NET_ERROR_RESPONSE.Parser, new[]{ "MErrnum", "MErrmessage" }, new[]{ "MErrnum", "MErrmessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_GET_TIME), global::Pbnet.PROBUFF_NET_GET_TIME.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_GET_TIME_RESPONSE), global::Pbnet.PROBUFF_NET_GET_TIME_RESPONSE.Parser, new[]{ "MUtc" }, new[]{ "MUtc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_GET_NOTICE), global::Pbnet.PROBUFF_NET_GET_NOTICE.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_GET_NOTICE_RESPONSE), global::Pbnet.PROBUFF_NET_GET_NOTICE_RESPONSE.Parser, new[]{ "MNotices" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_ACOUNT_LOGIN), global::Pbnet.PROBUFF_NET_ACOUNT_LOGIN.Parser, new[]{ "MArea", "MAccount", "MPassword" }, new[]{ "MArea", "MAccount", "MPassword" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_ACOUNT_LOGIN_RESPONSE), global::Pbnet.PROBUFF_NET_ACOUNT_LOGIN_RESPONSE.Parser, new[]{ "MArea", "MRoleid", "MSession", "MAccount", "MGatewayid" }, new[]{ "MArea", "MRoleid", "MSession", "MAccount", "MGatewayid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_ROLE_LOGIN), global::Pbnet.PROBUFF_NET_ROLE_LOGIN.Parser, new[]{ "MRoleid", "MSession", "MIscreate", "MArea", "MGatewayid" }, new[]{ "MRoleid", "MSession", "MIscreate", "MArea", "MGatewayid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_ROLE_SYNC), global::Pbnet.PROBUFF_NET_ROLE_SYNC.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_ROLE_SYNC_RESPONSE), global::Pbnet.PROBUFF_NET_ROLE_SYNC_RESPONSE.Parser, new[]{ "MRole", "MBag", "MTask" }, new[]{ "MRole", "MBag", "MTask" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_BAG_SYNC), global::Pbnet.PROBUFF_NET_BAG_SYNC.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_BAG_SYNC_RESPONSE), global::Pbnet.PROBUFF_NET_BAG_SYNC_RESPONSE.Parser, new[]{ "MBag" }, new[]{ "MBag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_BAG_UPDATE), global::Pbnet.PROBUFF_NET_BAG_UPDATE.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE), global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Parser, new[]{ "MDelitems", "MDelnostackitems", "MAdditems", "MAddnostackitems" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.delitem), global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.delitem.Parser, new[]{ "MId", "MCount" }, new[]{ "MId", "MCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.additem), global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.additem.Parser, new[]{ "MId", "MCount" }, new[]{ "MId", "MCount" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_CMD), global::Pbnet.PROBUFF_NET_CMD.Parser, new[]{ "MCmd" }, new[]{ "MCmd" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_CHAT), global::Pbnet.PROBUFF_NET_CHAT.Parser, new[]{ "MType", "MChannelid", "MContent" }, new[]{ "MType", "MChannelid", "MContent" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.chatitem), global::Pbnet.chatitem.Parser, new[]{ "MRoleid", "MRolename", "MContent", "MUtc" }, new[]{ "MRoleid", "MRolename", "MContent", "MUtc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_CHAT_RESPONSE), global::Pbnet.PROBUFF_NET_CHAT_RESPONSE.Parser, new[]{ "MType", "MChannelid", "MChatlist", "MStat" }, new[]{ "MType", "MChannelid", "MStat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_SWITCH_LINE), global::Pbnet.PROBUFF_NET_SWITCH_LINE.Parser, new[]{ "MLine" }, new[]{ "MLine" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_SWITCH_LINE_RESPONSE), global::Pbnet.PROBUFF_NET_SWITCH_LINE_RESPONSE.Parser, new[]{ "MLine", "MStat" }, new[]{ "MLine", "MStat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MAIL_LIST), global::Pbnet.PROBUFF_NET_MAIL_LIST.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MAIL_LIST_RESPONSE), global::Pbnet.PROBUFF_NET_MAIL_LIST_RESPONSE.Parser, new[]{ "MMail" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MAIL_READ), global::Pbnet.PROBUFF_NET_MAIL_READ.Parser, new[]{ "MMailid" }, new[]{ "MMailid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MAIL_READ_RESPONSE), global::Pbnet.PROBUFF_NET_MAIL_READ_RESPONSE.Parser, new[]{ "MMailid", "MStat" }, new[]{ "MMailid", "MStat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MAIL_DRAW), global::Pbnet.PROBUFF_NET_MAIL_DRAW.Parser, new[]{ "MMailid" }, new[]{ "MMailid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MAIL_DRAW_RESPONSE), global::Pbnet.PROBUFF_NET_MAIL_DRAW_RESPONSE.Parser, new[]{ "MMailid", "MStat" }, new[]{ "MMailid", "MStat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MAIL_DEL), global::Pbnet.PROBUFF_NET_MAIL_DEL.Parser, new[]{ "MMailid" }, new[]{ "MMailid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MAIL_DEL_RESPONSE), global::Pbnet.PROBUFF_NET_MAIL_DEL_RESPONSE.Parser, new[]{ "MMailid", "MStat" }, new[]{ "MMailid", "MStat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.VECTOR2), global::Pbnet.VECTOR2.Parser, new[]{ "MX", "MY" }, new[]{ "MX", "MY" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.VECTOR3), global::Pbnet.VECTOR3.Parser, new[]{ "MX", "MY", "MZ" }, new[]{ "MX", "MY", "MZ" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.UNIT_POSITION), global::Pbnet.UNIT_POSITION.Parser, new[]{ "MId", "MPosition", "MAngle", "MSpeed" }, new[]{ "MId", "MPosition", "MAngle", "MSpeed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.UnitAttribute), global::Pbnet.UnitAttribute.Parser, new[]{ "MType", "MValue" }, new[]{ "MType", "MValue" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.UnitModule), global::Pbnet.UnitModule.Parser, new[]{ "MMtype", "MModules" }, new[]{ "MMtype" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.UNIT), global::Pbnet.UNIT.Parser, new[]{ "MType", "MId", "MPosition", "MModules", "MStat" }, new[]{ "MType", "MId", "MPosition", "MStat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_SYNC_ATTRIBUTE), global::Pbnet.PROBUFF_NET_SYNC_ATTRIBUTE.Parser, new[]{ "MModules" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_SYNC_UNIT), global::Pbnet.PROBUFF_NET_SYNC_UNIT.Parser, new[]{ "MUnits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_ENTER_LEAVE_VIEW), global::Pbnet.PROBUFF_NET_ENTER_LEAVE_VIEW.Parser, new[]{ "MIsenter", "MUnits" }, new[]{ "MIsenter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_SYNC_POSITION), global::Pbnet.PROBUFF_NET_SYNC_POSITION.Parser, new[]{ "MPosition" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_CHANGE_ANGLE), global::Pbnet.PROBUFF_NET_CHANGE_ANGLE.Parser, new[]{ "MPosition" }, new[]{ "MPosition" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MATCHING), global::Pbnet.PROBUFF_NET_MATCHING.Parser, new[]{ "MType", "MTid" }, new[]{ "MType", "MTid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.MATCHING_MEMBER), global::Pbnet.MATCHING_MEMBER.Parser, new[]{ "MId", "MName", "MLv", "MBegmatch", "MIsconfirm" }, new[]{ "MId", "MName", "MLv", "MBegmatch", "MIsconfirm" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MATCHING_RESPONSE), global::Pbnet.PROBUFF_NET_MATCHING_RESPONSE.Parser, new[]{ "MId" }, new[]{ "MId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MATCHING_CANCEL), global::Pbnet.PROBUFF_NET_MATCHING_CANCEL.Parser, new[]{ "MType", "MRoomid" }, new[]{ "MType", "MRoomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MATCHING_CANCEL_RESPONSE), global::Pbnet.PROBUFF_NET_MATCHING_CANCEL_RESPONSE.Parser, new[]{ "MType", "MStat" }, new[]{ "MType", "MStat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MEMBER_MATCHING_CANCEL), global::Pbnet.PROBUFF_NET_MEMBER_MATCHING_CANCEL.Parser, new[]{ "MType", "MCanceltype", "MCancelmember" }, new[]{ "MType", "MCanceltype" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MATCHING_WAITCONFIRM), global::Pbnet.PROBUFF_NET_MATCHING_WAITCONFIRM.Parser, new[]{ "MType", "MRoomid" }, new[]{ "MType", "MRoomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MATCHING_CONFIRM), global::Pbnet.PROBUFF_NET_MATCHING_CONFIRM.Parser, new[]{ "MType", "MRoomid" }, new[]{ "MType", "MRoomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MATCHING_CONFIRM_RESPONSE), global::Pbnet.PROBUFF_NET_MATCHING_CONFIRM_RESPONSE.Parser, new[]{ "MType", "MRoomid", "MStat" }, new[]{ "MType", "MRoomid", "MStat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_SYNC_MATCHING_CONFIRM), global::Pbnet.PROBUFF_NET_SYNC_MATCHING_CONFIRM.Parser, new[]{ "MType", "MRoomid", "MRoleid" }, new[]{ "MType", "MRoomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MATCHING_SYNC), global::Pbnet.PROBUFF_NET_MATCHING_SYNC.Parser, new[]{ "MType", "MRoomid", "MMember" }, new[]{ "MType", "MRoomid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MATCHING_SUCCESS_RESPONSE), global::Pbnet.PROBUFF_NET_MATCHING_SUCCESS_RESPONSE.Parser, new[]{ "MType", "MRoomid", "MPlaysactorid" }, new[]{ "MType", "MRoomid", "MPlaysactorid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_MATCHING_SUCCESS), global::Pbnet.PROBUFF_NET_MATCHING_SUCCESS.Parser, new[]{ "MType", "MRoomid", "MMember", "MDataid" }, new[]{ "MType", "MRoomid", "MDataid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pbnet.PROBUFF_NET_ENTER_PLAYS), global::Pbnet.PROBUFF_NET_ENTER_PLAYS.Parser, new[]{ "MType", "MRoomid" }, new[]{ "MType", "MRoomid" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// [请求]聊天
  /// </summary>
  public enum enum_logic_chat {
    [pbr::OriginalName("get_chat_list")] GetChatList = 0,
    [pbr::OriginalName("chat_speak")] ChatSpeak = 1,
    [pbr::OriginalName("updata_speck")] UpdataSpeck = 2,
  }

  public enum eunit {
    /// <summary>
    /// 玩家单位
    /// </summary>
    [pbr::OriginalName("eunit_role")] Role = 0,
    /// <summary>
    /// 怪物单位
    /// </summary>
    [pbr::OriginalName("eunit_monster")] Monster = 1,
    /// <summary>
    /// 区域单位
    /// </summary>
    [pbr::OriginalName("eunit_region")] Region = 2,
  }

  public enum eunitstat {
    /// <summary>
    /// (0)正常状态
    /// </summary>
    [pbr::OriginalName("eunitstat_normal")] Normal = 0,
    /// <summary>
    /// (1 &lt;&lt; 0)无法移动
    /// </summary>
    [pbr::OriginalName("eunitstat_nomove")] Nomove = 1,
    /// <summary>
    /// (1 &lt;&lt; 1)无法进行普通攻击
    /// </summary>
    [pbr::OriginalName("eunitstat_nonormalattack")] Nonormalattack = 2,
    /// <summary>
    /// (1 &lt;&lt; 2)无法释放技能
    /// </summary>
    [pbr::OriginalName("eunitstat_noreleaseskill")] Noreleaseskill = 4,
  }

  public enum eplays {
    /// <summary>
    /// 勇闯地宫
    /// </summary>
    [pbr::OriginalName("eplays_go_undergroundpalace")] GoUndergroundpalace = 0,
    /// <summary>
    /// 玩法数量
    /// </summary>
    [pbr::OriginalName("eplays_count")] Count = 1,
  }

  public enum ematching_cancel_stat {
    [pbr::OriginalName("ematching_cancel_success")] EmatchingCancelSuccess = 0,
    /// <summary>
    /// 不是匹配阶段,不能取消匹配
    /// </summary>
    [pbr::OriginalName("ematching_cancel_stage")] EmatchingCancelStage = 1,
    /// <summary>
    /// 指定房间未发现
    /// </summary>
    [pbr::OriginalName("ematching_cancel_roomnotfind")] EmatchingCancelRoomnotfind = 2,
    /// <summary>
    /// 指定房间中未发现玩家
    /// </summary>
    [pbr::OriginalName("ematching_cancel_roommembernotfind")] EmatchingCancelRoommembernotfind = 3,
  }

  public enum etype_matching_cancel {
    /// <summary>
    /// 主动取消
    /// </summary>
    [pbr::OriginalName("etype_matching_cancel_active")] Active = 0,
    /// <summary>
    /// 超时取消
    /// </summary>
    [pbr::OriginalName("etype_matching_cancel_timeout")] Timeout = 1,
    /// <summary>
    /// 等待确认超时取消
    /// </summary>
    [pbr::OriginalName("etype_matching_waitconfirm_timeout")] EtypeMatchingWaitconfirmTimeout = 2,
    /// <summary>
    /// 等待创建玩法超时取消
    /// </summary>
    [pbr::OriginalName("etype_matching_waitcreate_timeout")] EtypeMatchingWaitcreateTimeout = 3,
  }

  public enum ematching_confirm_stat {
    [pbr::OriginalName("ematching_confirm_success")] EmatchingConfirmSuccess = 0,
    /// <summary>
    /// 不是匹配阶段,不能取消匹配
    /// </summary>
    [pbr::OriginalName("ematching_confirm_stage")] EmatchingConfirmStage = 1,
    /// <summary>
    /// 指定房间未发现
    /// </summary>
    [pbr::OriginalName("ematching_confirm_roomnotfind")] EmatchingConfirmRoomnotfind = 2,
    /// <summary>
    /// 指定房间中未发现玩家
    /// </summary>
    [pbr::OriginalName("ematching_confirm_roommembernotfind")] EmatchingConfirmRoommembernotfind = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// [请求]心跳协议
  /// </summary>
  public sealed partial class PROBUFF_NET_HEARTBEAT : pb::IMessage<PROBUFF_NET_HEARTBEAT>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_HEARTBEAT> _parser = new pb::MessageParser<PROBUFF_NET_HEARTBEAT>(() => new PROBUFF_NET_HEARTBEAT());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_HEARTBEAT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_HEARTBEAT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_HEARTBEAT(PROBUFF_NET_HEARTBEAT other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_HEARTBEAT Clone() {
      return new PROBUFF_NET_HEARTBEAT(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_HEARTBEAT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_HEARTBEAT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_HEARTBEAT other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]充值
  /// </summary>
  public sealed partial class PROBUFF_NET_RECHARGE : pb::IMessage<PROBUFF_NET_RECHARGE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_RECHARGE> _parser = new pb::MessageParser<PROBUFF_NET_RECHARGE>(() => new PROBUFF_NET_RECHARGE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_RECHARGE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_RECHARGE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_RECHARGE(PROBUFF_NET_RECHARGE other) : this() {
      _hasBits0 = other._hasBits0;
      mRechargeid_ = other.mRechargeid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_RECHARGE Clone() {
      return new PROBUFF_NET_RECHARGE(this);
    }

    /// <summary>Field number for the "m_rechargeid" field.</summary>
    public const int MRechargeidFieldNumber = 1;
    private int mRechargeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRechargeid {
      get { if ((_hasBits0 & 1) != 0) { return mRechargeid_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mRechargeid_ = value;
      }
    }
    /// <summary>Gets whether the "m_rechargeid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRechargeid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_rechargeid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRechargeid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_RECHARGE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_RECHARGE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MRechargeid != other.MRechargeid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMRechargeid) hash ^= MRechargeid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMRechargeid) {
        output.WriteRawTag(8);
        output.WriteInt32(MRechargeid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMRechargeid) {
        output.WriteRawTag(8);
        output.WriteInt32(MRechargeid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMRechargeid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRechargeid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_RECHARGE other) {
      if (other == null) {
        return;
      }
      if (other.HasMRechargeid) {
        MRechargeid = other.MRechargeid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MRechargeid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MRechargeid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]充值
  /// </summary>
  public sealed partial class PROBUFF_NET_RECHARGE_RESPONSE : pb::IMessage<PROBUFF_NET_RECHARGE_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_RECHARGE_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_RECHARGE_RESPONSE>(() => new PROBUFF_NET_RECHARGE_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_RECHARGE_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_RECHARGE_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_RECHARGE_RESPONSE(PROBUFF_NET_RECHARGE_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mRechargeid_ = other.mRechargeid_;
      mStat_ = other.mStat_;
      mOrderid_ = other.mOrderid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_RECHARGE_RESPONSE Clone() {
      return new PROBUFF_NET_RECHARGE_RESPONSE(this);
    }

    /// <summary>Field number for the "m_rechargeid" field.</summary>
    public const int MRechargeidFieldNumber = 1;
    private int mRechargeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRechargeid {
      get { if ((_hasBits0 & 1) != 0) { return mRechargeid_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mRechargeid_ = value;
      }
    }
    /// <summary>Gets whether the "m_rechargeid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRechargeid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_rechargeid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRechargeid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_stat" field.</summary>
    public const int MStatFieldNumber = 2;
    private global::Pbnet.PROBUFF_NET_RECHARGE_RESPONSE.Types.Estat mStat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.PROBUFF_NET_RECHARGE_RESPONSE.Types.Estat MStat {
      get { if ((_hasBits0 & 2) != 0) { return mStat_; } else { return global::Pbnet.PROBUFF_NET_RECHARGE_RESPONSE.Types.Estat.Success; } }
      set {
        _hasBits0 |= 2;
        mStat_ = value;
      }
    }
    /// <summary>Gets whether the "m_stat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMStat {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_stat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMStat() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_orderid" field.</summary>
    public const int MOrderidFieldNumber = 3;
    private string mOrderid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MOrderid {
      get { return mOrderid_ ?? ""; }
      set {
        mOrderid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_orderid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMOrderid {
      get { return mOrderid_ != null; }
    }
    /// <summary>Clears the value of the "m_orderid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMOrderid() {
      mOrderid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_RECHARGE_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_RECHARGE_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MRechargeid != other.MRechargeid) return false;
      if (MStat != other.MStat) return false;
      if (MOrderid != other.MOrderid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMRechargeid) hash ^= MRechargeid.GetHashCode();
      if (HasMStat) hash ^= MStat.GetHashCode();
      if (HasMOrderid) hash ^= MOrderid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMRechargeid) {
        output.WriteRawTag(8);
        output.WriteInt32(MRechargeid);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MStat);
      }
      if (HasMOrderid) {
        output.WriteRawTag(26);
        output.WriteString(MOrderid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMRechargeid) {
        output.WriteRawTag(8);
        output.WriteInt32(MRechargeid);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MStat);
      }
      if (HasMOrderid) {
        output.WriteRawTag(26);
        output.WriteString(MOrderid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMRechargeid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRechargeid);
      }
      if (HasMStat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MStat);
      }
      if (HasMOrderid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MOrderid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_RECHARGE_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMRechargeid) {
        MRechargeid = other.MRechargeid;
      }
      if (other.HasMStat) {
        MStat = other.MStat;
      }
      if (other.HasMOrderid) {
        MOrderid = other.MOrderid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MRechargeid = input.ReadInt32();
            break;
          }
          case 16: {
            MStat = (global::Pbnet.PROBUFF_NET_RECHARGE_RESPONSE.Types.Estat) input.ReadEnum();
            break;
          }
          case 26: {
            MOrderid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MRechargeid = input.ReadInt32();
            break;
          }
          case 16: {
            MStat = (global::Pbnet.PROBUFF_NET_RECHARGE_RESPONSE.Types.Estat) input.ReadEnum();
            break;
          }
          case 26: {
            MOrderid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PROBUFF_NET_RECHARGE_RESPONSE message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Estat {
        /// <summary>
        /// 成功
        /// </summary>
        [pbr::OriginalName("Estat_Success")] Success = 0,
        /// <summary>
        /// 没有找到指定充值id
        /// </summary>
        [pbr::OriginalName("Estat_NotRechargeId")] NotRechargeId = 1,
        /// <summary>
        /// 超过充值最大限制次数
        /// </summary>
        [pbr::OriginalName("Estat_MaxCount")] MaxCount = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// 通知客户端充值发货
  /// </summary>
  public sealed partial class PROBUFF_NET_DELIVER_GOODS_RECHARGE : pb::IMessage<PROBUFF_NET_DELIVER_GOODS_RECHARGE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_DELIVER_GOODS_RECHARGE> _parser = new pb::MessageParser<PROBUFF_NET_DELIVER_GOODS_RECHARGE>(() => new PROBUFF_NET_DELIVER_GOODS_RECHARGE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_DELIVER_GOODS_RECHARGE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_DELIVER_GOODS_RECHARGE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_DELIVER_GOODS_RECHARGE(PROBUFF_NET_DELIVER_GOODS_RECHARGE other) : this() {
      _hasBits0 = other._hasBits0;
      mRechargeid_ = other.mRechargeid_;
      mOrderid_ = other.mOrderid_;
      mGold_ = other.mGold_;
      mItems_ = other.mItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_DELIVER_GOODS_RECHARGE Clone() {
      return new PROBUFF_NET_DELIVER_GOODS_RECHARGE(this);
    }

    /// <summary>Field number for the "m_rechargeid" field.</summary>
    public const int MRechargeidFieldNumber = 1;
    private int mRechargeid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRechargeid {
      get { if ((_hasBits0 & 1) != 0) { return mRechargeid_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mRechargeid_ = value;
      }
    }
    /// <summary>Gets whether the "m_rechargeid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRechargeid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_rechargeid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRechargeid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_orderid" field.</summary>
    public const int MOrderidFieldNumber = 2;
    private string mOrderid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MOrderid {
      get { return mOrderid_ ?? ""; }
      set {
        mOrderid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_orderid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMOrderid {
      get { return mOrderid_ != null; }
    }
    /// <summary>Clears the value of the "m_orderid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMOrderid() {
      mOrderid_ = null;
    }

    /// <summary>Field number for the "m_gold" field.</summary>
    public const int MGoldFieldNumber = 3;
    private int mGold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MGold {
      get { if ((_hasBits0 & 2) != 0) { return mGold_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mGold_ = value;
      }
    }
    /// <summary>Gets whether the "m_gold" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMGold {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_gold" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMGold() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_items" field.</summary>
    public const int MItemsFieldNumber = 4;
    private static readonly pbc::MapField<int, int>.Codec _map_mItems_codec
        = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 34);
    private readonly pbc::MapField<int, int> mItems_ = new pbc::MapField<int, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, int> MItems {
      get { return mItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_DELIVER_GOODS_RECHARGE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_DELIVER_GOODS_RECHARGE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MRechargeid != other.MRechargeid) return false;
      if (MOrderid != other.MOrderid) return false;
      if (MGold != other.MGold) return false;
      if (!MItems.Equals(other.MItems)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMRechargeid) hash ^= MRechargeid.GetHashCode();
      if (HasMOrderid) hash ^= MOrderid.GetHashCode();
      if (HasMGold) hash ^= MGold.GetHashCode();
      hash ^= MItems.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMRechargeid) {
        output.WriteRawTag(8);
        output.WriteInt32(MRechargeid);
      }
      if (HasMOrderid) {
        output.WriteRawTag(18);
        output.WriteString(MOrderid);
      }
      if (HasMGold) {
        output.WriteRawTag(24);
        output.WriteInt32(MGold);
      }
      mItems_.WriteTo(output, _map_mItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMRechargeid) {
        output.WriteRawTag(8);
        output.WriteInt32(MRechargeid);
      }
      if (HasMOrderid) {
        output.WriteRawTag(18);
        output.WriteString(MOrderid);
      }
      if (HasMGold) {
        output.WriteRawTag(24);
        output.WriteInt32(MGold);
      }
      mItems_.WriteTo(ref output, _map_mItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMRechargeid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRechargeid);
      }
      if (HasMOrderid) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MOrderid);
      }
      if (HasMGold) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MGold);
      }
      size += mItems_.CalculateSize(_map_mItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_DELIVER_GOODS_RECHARGE other) {
      if (other == null) {
        return;
      }
      if (other.HasMRechargeid) {
        MRechargeid = other.MRechargeid;
      }
      if (other.HasMOrderid) {
        MOrderid = other.MOrderid;
      }
      if (other.HasMGold) {
        MGold = other.MGold;
      }
      mItems_.Add(other.mItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MRechargeid = input.ReadInt32();
            break;
          }
          case 18: {
            MOrderid = input.ReadString();
            break;
          }
          case 24: {
            MGold = input.ReadInt32();
            break;
          }
          case 34: {
            mItems_.AddEntriesFrom(input, _map_mItems_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MRechargeid = input.ReadInt32();
            break;
          }
          case 18: {
            MOrderid = input.ReadString();
            break;
          }
          case 24: {
            MGold = input.ReadInt32();
            break;
          }
          case 34: {
            mItems_.AddEntriesFrom(ref input, _map_mItems_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]错误码
  /// </summary>
  public sealed partial class PROBUFF_NET_ERROR : pb::IMessage<PROBUFF_NET_ERROR>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_ERROR> _parser = new pb::MessageParser<PROBUFF_NET_ERROR>(() => new PROBUFF_NET_ERROR());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_ERROR> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ERROR() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ERROR(PROBUFF_NET_ERROR other) : this() {
      _hasBits0 = other._hasBits0;
      mErrnum_ = other.mErrnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ERROR Clone() {
      return new PROBUFF_NET_ERROR(this);
    }

    /// <summary>Field number for the "m_errnum" field.</summary>
    public const int MErrnumFieldNumber = 1;
    private int mErrnum_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MErrnum {
      get { if ((_hasBits0 & 1) != 0) { return mErrnum_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mErrnum_ = value;
      }
    }
    /// <summary>Gets whether the "m_errnum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMErrnum {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_errnum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMErrnum() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_ERROR);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_ERROR other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MErrnum != other.MErrnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMErrnum) hash ^= MErrnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMErrnum) {
        output.WriteRawTag(8);
        output.WriteInt32(MErrnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMErrnum) {
        output.WriteRawTag(8);
        output.WriteInt32(MErrnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMErrnum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MErrnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_ERROR other) {
      if (other == null) {
        return;
      }
      if (other.HasMErrnum) {
        MErrnum = other.MErrnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MErrnum = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MErrnum = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]错误码
  /// </summary>
  public sealed partial class PROBUFF_NET_ERROR_RESPONSE : pb::IMessage<PROBUFF_NET_ERROR_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_ERROR_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_ERROR_RESPONSE>(() => new PROBUFF_NET_ERROR_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_ERROR_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ERROR_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ERROR_RESPONSE(PROBUFF_NET_ERROR_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mErrnum_ = other.mErrnum_;
      mErrmessage_ = other.mErrmessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ERROR_RESPONSE Clone() {
      return new PROBUFF_NET_ERROR_RESPONSE(this);
    }

    /// <summary>Field number for the "m_errnum" field.</summary>
    public const int MErrnumFieldNumber = 1;
    private int mErrnum_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MErrnum {
      get { if ((_hasBits0 & 1) != 0) { return mErrnum_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mErrnum_ = value;
      }
    }
    /// <summary>Gets whether the "m_errnum" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMErrnum {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_errnum" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMErrnum() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_errmessage" field.</summary>
    public const int MErrmessageFieldNumber = 2;
    private string mErrmessage_;
    /// <summary>
    /// 错误描述
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MErrmessage {
      get { return mErrmessage_ ?? ""; }
      set {
        mErrmessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_errmessage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMErrmessage {
      get { return mErrmessage_ != null; }
    }
    /// <summary>Clears the value of the "m_errmessage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMErrmessage() {
      mErrmessage_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_ERROR_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_ERROR_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MErrnum != other.MErrnum) return false;
      if (MErrmessage != other.MErrmessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMErrnum) hash ^= MErrnum.GetHashCode();
      if (HasMErrmessage) hash ^= MErrmessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMErrnum) {
        output.WriteRawTag(8);
        output.WriteInt32(MErrnum);
      }
      if (HasMErrmessage) {
        output.WriteRawTag(18);
        output.WriteString(MErrmessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMErrnum) {
        output.WriteRawTag(8);
        output.WriteInt32(MErrnum);
      }
      if (HasMErrmessage) {
        output.WriteRawTag(18);
        output.WriteString(MErrmessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMErrnum) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MErrnum);
      }
      if (HasMErrmessage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MErrmessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_ERROR_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMErrnum) {
        MErrnum = other.MErrnum;
      }
      if (other.HasMErrmessage) {
        MErrmessage = other.MErrmessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MErrnum = input.ReadInt32();
            break;
          }
          case 18: {
            MErrmessage = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MErrnum = input.ReadInt32();
            break;
          }
          case 18: {
            MErrmessage = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]服务器时间
  /// </summary>
  public sealed partial class PROBUFF_NET_GET_TIME : pb::IMessage<PROBUFF_NET_GET_TIME>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_GET_TIME> _parser = new pb::MessageParser<PROBUFF_NET_GET_TIME>(() => new PROBUFF_NET_GET_TIME());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_GET_TIME> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_TIME() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_TIME(PROBUFF_NET_GET_TIME other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_TIME Clone() {
      return new PROBUFF_NET_GET_TIME(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_GET_TIME);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_GET_TIME other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_GET_TIME other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]服务器时间
  /// </summary>
  public sealed partial class PROBUFF_NET_GET_TIME_RESPONSE : pb::IMessage<PROBUFF_NET_GET_TIME_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_GET_TIME_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_GET_TIME_RESPONSE>(() => new PROBUFF_NET_GET_TIME_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_GET_TIME_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_TIME_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_TIME_RESPONSE(PROBUFF_NET_GET_TIME_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mUtc_ = other.mUtc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_TIME_RESPONSE Clone() {
      return new PROBUFF_NET_GET_TIME_RESPONSE(this);
    }

    /// <summary>Field number for the "m_utc" field.</summary>
    public const int MUtcFieldNumber = 1;
    private int mUtc_;
    /// <summary>
    /// 错误码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MUtc {
      get { if ((_hasBits0 & 1) != 0) { return mUtc_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mUtc_ = value;
      }
    }
    /// <summary>Gets whether the "m_utc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMUtc {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_utc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMUtc() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_GET_TIME_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_GET_TIME_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MUtc != other.MUtc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMUtc) hash ^= MUtc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMUtc) {
        output.WriteRawTag(8);
        output.WriteInt32(MUtc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMUtc) {
        output.WriteRawTag(8);
        output.WriteInt32(MUtc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMUtc) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MUtc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_GET_TIME_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMUtc) {
        MUtc = other.MUtc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MUtc = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MUtc = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]获取公告列表
  /// </summary>
  public sealed partial class PROBUFF_NET_GET_NOTICE : pb::IMessage<PROBUFF_NET_GET_NOTICE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_GET_NOTICE> _parser = new pb::MessageParser<PROBUFF_NET_GET_NOTICE>(() => new PROBUFF_NET_GET_NOTICE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_GET_NOTICE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_NOTICE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_NOTICE(PROBUFF_NET_GET_NOTICE other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_NOTICE Clone() {
      return new PROBUFF_NET_GET_NOTICE(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_GET_NOTICE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_GET_NOTICE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_GET_NOTICE other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]获取公告列表
  /// </summary>
  public sealed partial class PROBUFF_NET_GET_NOTICE_RESPONSE : pb::IMessage<PROBUFF_NET_GET_NOTICE_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_GET_NOTICE_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_GET_NOTICE_RESPONSE>(() => new PROBUFF_NET_GET_NOTICE_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_GET_NOTICE_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_NOTICE_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_NOTICE_RESPONSE(PROBUFF_NET_GET_NOTICE_RESPONSE other) : this() {
      mNotices_ = other.mNotices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_GET_NOTICE_RESPONSE Clone() {
      return new PROBUFF_NET_GET_NOTICE_RESPONSE(this);
    }

    /// <summary>Field number for the "m_notices" field.</summary>
    public const int MNoticesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Pbdb.db_notice> _repeated_mNotices_codec
        = pb::FieldCodec.ForMessage(10, global::Pbdb.db_notice.Parser);
    private readonly pbc::RepeatedField<global::Pbdb.db_notice> mNotices_ = new pbc::RepeatedField<global::Pbdb.db_notice>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbdb.db_notice> MNotices {
      get { return mNotices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_GET_NOTICE_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_GET_NOTICE_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mNotices_.Equals(other.mNotices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mNotices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mNotices_.WriteTo(output, _repeated_mNotices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mNotices_.WriteTo(ref output, _repeated_mNotices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mNotices_.CalculateSize(_repeated_mNotices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_GET_NOTICE_RESPONSE other) {
      if (other == null) {
        return;
      }
      mNotices_.Add(other.mNotices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mNotices_.AddEntriesFrom(input, _repeated_mNotices_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mNotices_.AddEntriesFrom(ref input, _repeated_mNotices_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]登录账号
  /// </summary>
  public sealed partial class PROBUFF_NET_ACOUNT_LOGIN : pb::IMessage<PROBUFF_NET_ACOUNT_LOGIN>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_ACOUNT_LOGIN> _parser = new pb::MessageParser<PROBUFF_NET_ACOUNT_LOGIN>(() => new PROBUFF_NET_ACOUNT_LOGIN());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_ACOUNT_LOGIN> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ACOUNT_LOGIN() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ACOUNT_LOGIN(PROBUFF_NET_ACOUNT_LOGIN other) : this() {
      _hasBits0 = other._hasBits0;
      mArea_ = other.mArea_;
      mAccount_ = other.mAccount_;
      mPassword_ = other.mPassword_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ACOUNT_LOGIN Clone() {
      return new PROBUFF_NET_ACOUNT_LOGIN(this);
    }

    /// <summary>Field number for the "m_area" field.</summary>
    public const int MAreaFieldNumber = 1;
    private int mArea_;
    /// <summary>
    /// 区服id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MArea {
      get { if ((_hasBits0 & 1) != 0) { return mArea_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mArea_ = value;
      }
    }
    /// <summary>Gets whether the "m_area" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMArea {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_area" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMArea() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_account" field.</summary>
    public const int MAccountFieldNumber = 2;
    private string mAccount_;
    /// <summary>
    /// 帐号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MAccount {
      get { return mAccount_ ?? ""; }
      set {
        mAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_account" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMAccount {
      get { return mAccount_ != null; }
    }
    /// <summary>Clears the value of the "m_account" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMAccount() {
      mAccount_ = null;
    }

    /// <summary>Field number for the "m_password" field.</summary>
    public const int MPasswordFieldNumber = 3;
    private string mPassword_;
    /// <summary>
    /// 密码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MPassword {
      get { return mPassword_ ?? ""; }
      set {
        mPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_password" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMPassword {
      get { return mPassword_ != null; }
    }
    /// <summary>Clears the value of the "m_password" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMPassword() {
      mPassword_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_ACOUNT_LOGIN);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_ACOUNT_LOGIN other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MArea != other.MArea) return false;
      if (MAccount != other.MAccount) return false;
      if (MPassword != other.MPassword) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMArea) hash ^= MArea.GetHashCode();
      if (HasMAccount) hash ^= MAccount.GetHashCode();
      if (HasMPassword) hash ^= MPassword.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMArea) {
        output.WriteRawTag(8);
        output.WriteInt32(MArea);
      }
      if (HasMAccount) {
        output.WriteRawTag(18);
        output.WriteString(MAccount);
      }
      if (HasMPassword) {
        output.WriteRawTag(26);
        output.WriteString(MPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMArea) {
        output.WriteRawTag(8);
        output.WriteInt32(MArea);
      }
      if (HasMAccount) {
        output.WriteRawTag(18);
        output.WriteString(MAccount);
      }
      if (HasMPassword) {
        output.WriteRawTag(26);
        output.WriteString(MPassword);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMArea) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MArea);
      }
      if (HasMAccount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MAccount);
      }
      if (HasMPassword) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MPassword);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_ACOUNT_LOGIN other) {
      if (other == null) {
        return;
      }
      if (other.HasMArea) {
        MArea = other.MArea;
      }
      if (other.HasMAccount) {
        MAccount = other.MAccount;
      }
      if (other.HasMPassword) {
        MPassword = other.MPassword;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MArea = input.ReadInt32();
            break;
          }
          case 18: {
            MAccount = input.ReadString();
            break;
          }
          case 26: {
            MPassword = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MArea = input.ReadInt32();
            break;
          }
          case 18: {
            MAccount = input.ReadString();
            break;
          }
          case 26: {
            MPassword = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]登录账号
  /// </summary>
  public sealed partial class PROBUFF_NET_ACOUNT_LOGIN_RESPONSE : pb::IMessage<PROBUFF_NET_ACOUNT_LOGIN_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_ACOUNT_LOGIN_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_ACOUNT_LOGIN_RESPONSE>(() => new PROBUFF_NET_ACOUNT_LOGIN_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_ACOUNT_LOGIN_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ACOUNT_LOGIN_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ACOUNT_LOGIN_RESPONSE(PROBUFF_NET_ACOUNT_LOGIN_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mArea_ = other.mArea_;
      mRoleid_ = other.mRoleid_;
      mSession_ = other.mSession_;
      mAccount_ = other.mAccount_;
      mGatewayid_ = other.mGatewayid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ACOUNT_LOGIN_RESPONSE Clone() {
      return new PROBUFF_NET_ACOUNT_LOGIN_RESPONSE(this);
    }

    /// <summary>Field number for the "m_area" field.</summary>
    public const int MAreaFieldNumber = 1;
    private int mArea_;
    /// <summary>
    /// 区服id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MArea {
      get { if ((_hasBits0 & 1) != 0) { return mArea_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mArea_ = value;
      }
    }
    /// <summary>Gets whether the "m_area" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMArea {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_area" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMArea() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_roleid" field.</summary>
    public const int MRoleidFieldNumber = 2;
    private long mRoleid_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MRoleid {
      get { if ((_hasBits0 & 2) != 0) { return mRoleid_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        mRoleid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoleid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_roleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoleid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_session" field.</summary>
    public const int MSessionFieldNumber = 3;
    private string mSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MSession {
      get { return mSession_ ?? ""; }
      set {
        mSession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMSession {
      get { return mSession_ != null; }
    }
    /// <summary>Clears the value of the "m_session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMSession() {
      mSession_ = null;
    }

    /// <summary>Field number for the "m_account" field.</summary>
    public const int MAccountFieldNumber = 4;
    private string mAccount_;
    /// <summary>
    /// 帐号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MAccount {
      get { return mAccount_ ?? ""; }
      set {
        mAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_account" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMAccount {
      get { return mAccount_ != null; }
    }
    /// <summary>Clears the value of the "m_account" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMAccount() {
      mAccount_ = null;
    }

    /// <summary>Field number for the "m_gatewayid" field.</summary>
    public const int MGatewayidFieldNumber = 5;
    private int mGatewayid_;
    /// <summary>
    /// 网关id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MGatewayid {
      get { if ((_hasBits0 & 4) != 0) { return mGatewayid_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        mGatewayid_ = value;
      }
    }
    /// <summary>Gets whether the "m_gatewayid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMGatewayid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "m_gatewayid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMGatewayid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_ACOUNT_LOGIN_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_ACOUNT_LOGIN_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MArea != other.MArea) return false;
      if (MRoleid != other.MRoleid) return false;
      if (MSession != other.MSession) return false;
      if (MAccount != other.MAccount) return false;
      if (MGatewayid != other.MGatewayid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMArea) hash ^= MArea.GetHashCode();
      if (HasMRoleid) hash ^= MRoleid.GetHashCode();
      if (HasMSession) hash ^= MSession.GetHashCode();
      if (HasMAccount) hash ^= MAccount.GetHashCode();
      if (HasMGatewayid) hash ^= MGatewayid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMArea) {
        output.WriteRawTag(8);
        output.WriteInt32(MArea);
      }
      if (HasMRoleid) {
        output.WriteRawTag(16);
        output.WriteInt64(MRoleid);
      }
      if (HasMSession) {
        output.WriteRawTag(26);
        output.WriteString(MSession);
      }
      if (HasMAccount) {
        output.WriteRawTag(34);
        output.WriteString(MAccount);
      }
      if (HasMGatewayid) {
        output.WriteRawTag(40);
        output.WriteInt32(MGatewayid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMArea) {
        output.WriteRawTag(8);
        output.WriteInt32(MArea);
      }
      if (HasMRoleid) {
        output.WriteRawTag(16);
        output.WriteInt64(MRoleid);
      }
      if (HasMSession) {
        output.WriteRawTag(26);
        output.WriteString(MSession);
      }
      if (HasMAccount) {
        output.WriteRawTag(34);
        output.WriteString(MAccount);
      }
      if (HasMGatewayid) {
        output.WriteRawTag(40);
        output.WriteInt32(MGatewayid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMArea) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MArea);
      }
      if (HasMRoleid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MRoleid);
      }
      if (HasMSession) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MSession);
      }
      if (HasMAccount) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MAccount);
      }
      if (HasMGatewayid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MGatewayid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_ACOUNT_LOGIN_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMArea) {
        MArea = other.MArea;
      }
      if (other.HasMRoleid) {
        MRoleid = other.MRoleid;
      }
      if (other.HasMSession) {
        MSession = other.MSession;
      }
      if (other.HasMAccount) {
        MAccount = other.MAccount;
      }
      if (other.HasMGatewayid) {
        MGatewayid = other.MGatewayid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MArea = input.ReadInt32();
            break;
          }
          case 16: {
            MRoleid = input.ReadInt64();
            break;
          }
          case 26: {
            MSession = input.ReadString();
            break;
          }
          case 34: {
            MAccount = input.ReadString();
            break;
          }
          case 40: {
            MGatewayid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MArea = input.ReadInt32();
            break;
          }
          case 16: {
            MRoleid = input.ReadInt64();
            break;
          }
          case 26: {
            MSession = input.ReadString();
            break;
          }
          case 34: {
            MAccount = input.ReadString();
            break;
          }
          case 40: {
            MGatewayid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]玩家登录
  /// </summary>
  public sealed partial class PROBUFF_NET_ROLE_LOGIN : pb::IMessage<PROBUFF_NET_ROLE_LOGIN>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_ROLE_LOGIN> _parser = new pb::MessageParser<PROBUFF_NET_ROLE_LOGIN>(() => new PROBUFF_NET_ROLE_LOGIN());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_ROLE_LOGIN> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ROLE_LOGIN() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ROLE_LOGIN(PROBUFF_NET_ROLE_LOGIN other) : this() {
      _hasBits0 = other._hasBits0;
      mRoleid_ = other.mRoleid_;
      mSession_ = other.mSession_;
      mIscreate_ = other.mIscreate_;
      mArea_ = other.mArea_;
      mGatewayid_ = other.mGatewayid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ROLE_LOGIN Clone() {
      return new PROBUFF_NET_ROLE_LOGIN(this);
    }

    /// <summary>Field number for the "m_roleid" field.</summary>
    public const int MRoleidFieldNumber = 1;
    private long mRoleid_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MRoleid {
      get { if ((_hasBits0 & 1) != 0) { return mRoleid_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mRoleid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoleid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_roleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoleid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_session" field.</summary>
    public const int MSessionFieldNumber = 2;
    private string mSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MSession {
      get { return mSession_ ?? ""; }
      set {
        mSession_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_session" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMSession {
      get { return mSession_ != null; }
    }
    /// <summary>Clears the value of the "m_session" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMSession() {
      mSession_ = null;
    }

    /// <summary>Field number for the "m_iscreate" field.</summary>
    public const int MIscreateFieldNumber = 3;
    private bool mIscreate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MIscreate {
      get { if ((_hasBits0 & 2) != 0) { return mIscreate_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        mIscreate_ = value;
      }
    }
    /// <summary>Gets whether the "m_iscreate" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMIscreate {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_iscreate" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMIscreate() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_area" field.</summary>
    public const int MAreaFieldNumber = 4;
    private int mArea_;
    /// <summary>
    /// 区服id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MArea {
      get { if ((_hasBits0 & 4) != 0) { return mArea_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        mArea_ = value;
      }
    }
    /// <summary>Gets whether the "m_area" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMArea {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "m_area" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMArea() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "m_gatewayid" field.</summary>
    public const int MGatewayidFieldNumber = 5;
    private int mGatewayid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MGatewayid {
      get { if ((_hasBits0 & 8) != 0) { return mGatewayid_; } else { return 0; } }
      set {
        _hasBits0 |= 8;
        mGatewayid_ = value;
      }
    }
    /// <summary>Gets whether the "m_gatewayid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMGatewayid {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "m_gatewayid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMGatewayid() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_ROLE_LOGIN);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_ROLE_LOGIN other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MRoleid != other.MRoleid) return false;
      if (MSession != other.MSession) return false;
      if (MIscreate != other.MIscreate) return false;
      if (MArea != other.MArea) return false;
      if (MGatewayid != other.MGatewayid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMRoleid) hash ^= MRoleid.GetHashCode();
      if (HasMSession) hash ^= MSession.GetHashCode();
      if (HasMIscreate) hash ^= MIscreate.GetHashCode();
      if (HasMArea) hash ^= MArea.GetHashCode();
      if (HasMGatewayid) hash ^= MGatewayid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMRoleid) {
        output.WriteRawTag(8);
        output.WriteInt64(MRoleid);
      }
      if (HasMSession) {
        output.WriteRawTag(18);
        output.WriteString(MSession);
      }
      if (HasMIscreate) {
        output.WriteRawTag(24);
        output.WriteBool(MIscreate);
      }
      if (HasMArea) {
        output.WriteRawTag(32);
        output.WriteInt32(MArea);
      }
      if (HasMGatewayid) {
        output.WriteRawTag(40);
        output.WriteInt32(MGatewayid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMRoleid) {
        output.WriteRawTag(8);
        output.WriteInt64(MRoleid);
      }
      if (HasMSession) {
        output.WriteRawTag(18);
        output.WriteString(MSession);
      }
      if (HasMIscreate) {
        output.WriteRawTag(24);
        output.WriteBool(MIscreate);
      }
      if (HasMArea) {
        output.WriteRawTag(32);
        output.WriteInt32(MArea);
      }
      if (HasMGatewayid) {
        output.WriteRawTag(40);
        output.WriteInt32(MGatewayid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMRoleid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MRoleid);
      }
      if (HasMSession) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MSession);
      }
      if (HasMIscreate) {
        size += 1 + 1;
      }
      if (HasMArea) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MArea);
      }
      if (HasMGatewayid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MGatewayid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_ROLE_LOGIN other) {
      if (other == null) {
        return;
      }
      if (other.HasMRoleid) {
        MRoleid = other.MRoleid;
      }
      if (other.HasMSession) {
        MSession = other.MSession;
      }
      if (other.HasMIscreate) {
        MIscreate = other.MIscreate;
      }
      if (other.HasMArea) {
        MArea = other.MArea;
      }
      if (other.HasMGatewayid) {
        MGatewayid = other.MGatewayid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MRoleid = input.ReadInt64();
            break;
          }
          case 18: {
            MSession = input.ReadString();
            break;
          }
          case 24: {
            MIscreate = input.ReadBool();
            break;
          }
          case 32: {
            MArea = input.ReadInt32();
            break;
          }
          case 40: {
            MGatewayid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MRoleid = input.ReadInt64();
            break;
          }
          case 18: {
            MSession = input.ReadString();
            break;
          }
          case 24: {
            MIscreate = input.ReadBool();
            break;
          }
          case 32: {
            MArea = input.ReadInt32();
            break;
          }
          case 40: {
            MGatewayid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]获取角色信息
  /// </summary>
  public sealed partial class PROBUFF_NET_ROLE_SYNC : pb::IMessage<PROBUFF_NET_ROLE_SYNC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_ROLE_SYNC> _parser = new pb::MessageParser<PROBUFF_NET_ROLE_SYNC>(() => new PROBUFF_NET_ROLE_SYNC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_ROLE_SYNC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ROLE_SYNC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ROLE_SYNC(PROBUFF_NET_ROLE_SYNC other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ROLE_SYNC Clone() {
      return new PROBUFF_NET_ROLE_SYNC(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_ROLE_SYNC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_ROLE_SYNC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_ROLE_SYNC other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]获取角色信息
  /// </summary>
  public sealed partial class PROBUFF_NET_ROLE_SYNC_RESPONSE : pb::IMessage<PROBUFF_NET_ROLE_SYNC_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_ROLE_SYNC_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_ROLE_SYNC_RESPONSE>(() => new PROBUFF_NET_ROLE_SYNC_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_ROLE_SYNC_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ROLE_SYNC_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ROLE_SYNC_RESPONSE(PROBUFF_NET_ROLE_SYNC_RESPONSE other) : this() {
      mRole_ = other.mRole_ != null ? other.mRole_.Clone() : null;
      mBag_ = other.mBag_ != null ? other.mBag_.Clone() : null;
      mTask_ = other.mTask_ != null ? other.mTask_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ROLE_SYNC_RESPONSE Clone() {
      return new PROBUFF_NET_ROLE_SYNC_RESPONSE(this);
    }

    /// <summary>Field number for the "m_role" field.</summary>
    public const int MRoleFieldNumber = 1;
    private global::Pbdb.db_role mRole_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbdb.db_role MRole {
      get { return mRole_; }
      set {
        mRole_ = value;
      }
    }

    /// <summary>Field number for the "m_bag" field.</summary>
    public const int MBagFieldNumber = 2;
    private global::Pbdb.db_bag mBag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbdb.db_bag MBag {
      get { return mBag_; }
      set {
        mBag_ = value;
      }
    }

    /// <summary>Field number for the "m_task" field.</summary>
    public const int MTaskFieldNumber = 3;
    private global::Pbdb.db_task mTask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbdb.db_task MTask {
      get { return mTask_; }
      set {
        mTask_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_ROLE_SYNC_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_ROLE_SYNC_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MRole, other.MRole)) return false;
      if (!object.Equals(MBag, other.MBag)) return false;
      if (!object.Equals(MTask, other.MTask)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mRole_ != null) hash ^= MRole.GetHashCode();
      if (mBag_ != null) hash ^= MBag.GetHashCode();
      if (mTask_ != null) hash ^= MTask.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (mRole_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MRole);
      }
      if (mBag_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MBag);
      }
      if (mTask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MTask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (mRole_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MRole);
      }
      if (mBag_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MBag);
      }
      if (mTask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MTask);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mRole_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MRole);
      }
      if (mBag_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MBag);
      }
      if (mTask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MTask);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_ROLE_SYNC_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.mRole_ != null) {
        if (mRole_ == null) {
          MRole = new global::Pbdb.db_role();
        }
        MRole.MergeFrom(other.MRole);
      }
      if (other.mBag_ != null) {
        if (mBag_ == null) {
          MBag = new global::Pbdb.db_bag();
        }
        MBag.MergeFrom(other.MBag);
      }
      if (other.mTask_ != null) {
        if (mTask_ == null) {
          MTask = new global::Pbdb.db_task();
        }
        MTask.MergeFrom(other.MTask);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mRole_ == null) {
              MRole = new global::Pbdb.db_role();
            }
            input.ReadMessage(MRole);
            break;
          }
          case 18: {
            if (mBag_ == null) {
              MBag = new global::Pbdb.db_bag();
            }
            input.ReadMessage(MBag);
            break;
          }
          case 26: {
            if (mTask_ == null) {
              MTask = new global::Pbdb.db_task();
            }
            input.ReadMessage(MTask);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (mRole_ == null) {
              MRole = new global::Pbdb.db_role();
            }
            input.ReadMessage(MRole);
            break;
          }
          case 18: {
            if (mBag_ == null) {
              MBag = new global::Pbdb.db_bag();
            }
            input.ReadMessage(MBag);
            break;
          }
          case 26: {
            if (mTask_ == null) {
              MTask = new global::Pbdb.db_task();
            }
            input.ReadMessage(MTask);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]获取背包信息
  /// </summary>
  public sealed partial class PROBUFF_NET_BAG_SYNC : pb::IMessage<PROBUFF_NET_BAG_SYNC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_BAG_SYNC> _parser = new pb::MessageParser<PROBUFF_NET_BAG_SYNC>(() => new PROBUFF_NET_BAG_SYNC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_BAG_SYNC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_SYNC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_SYNC(PROBUFF_NET_BAG_SYNC other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_SYNC Clone() {
      return new PROBUFF_NET_BAG_SYNC(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_BAG_SYNC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_BAG_SYNC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_BAG_SYNC other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]获取背包信息
  /// </summary>
  public sealed partial class PROBUFF_NET_BAG_SYNC_RESPONSE : pb::IMessage<PROBUFF_NET_BAG_SYNC_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_BAG_SYNC_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_BAG_SYNC_RESPONSE>(() => new PROBUFF_NET_BAG_SYNC_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_BAG_SYNC_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_SYNC_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_SYNC_RESPONSE(PROBUFF_NET_BAG_SYNC_RESPONSE other) : this() {
      mBag_ = other.mBag_ != null ? other.mBag_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_SYNC_RESPONSE Clone() {
      return new PROBUFF_NET_BAG_SYNC_RESPONSE(this);
    }

    /// <summary>Field number for the "m_bag" field.</summary>
    public const int MBagFieldNumber = 1;
    private global::Pbdb.db_bag mBag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbdb.db_bag MBag {
      get { return mBag_; }
      set {
        mBag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_BAG_SYNC_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_BAG_SYNC_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MBag, other.MBag)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mBag_ != null) hash ^= MBag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (mBag_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MBag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (mBag_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MBag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mBag_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MBag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_BAG_SYNC_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.mBag_ != null) {
        if (mBag_ == null) {
          MBag = new global::Pbdb.db_bag();
        }
        MBag.MergeFrom(other.MBag);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mBag_ == null) {
              MBag = new global::Pbdb.db_bag();
            }
            input.ReadMessage(MBag);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (mBag_ == null) {
              MBag = new global::Pbdb.db_bag();
            }
            input.ReadMessage(MBag);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]更新背包信息
  /// </summary>
  public sealed partial class PROBUFF_NET_BAG_UPDATE : pb::IMessage<PROBUFF_NET_BAG_UPDATE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_BAG_UPDATE> _parser = new pb::MessageParser<PROBUFF_NET_BAG_UPDATE>(() => new PROBUFF_NET_BAG_UPDATE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_BAG_UPDATE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_UPDATE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_UPDATE(PROBUFF_NET_BAG_UPDATE other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_UPDATE Clone() {
      return new PROBUFF_NET_BAG_UPDATE(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_BAG_UPDATE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_BAG_UPDATE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_BAG_UPDATE other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]更新背包信息
  /// </summary>
  public sealed partial class PROBUFF_NET_BAG_UPDATE_RESPONSE : pb::IMessage<PROBUFF_NET_BAG_UPDATE_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_BAG_UPDATE_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_BAG_UPDATE_RESPONSE>(() => new PROBUFF_NET_BAG_UPDATE_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_BAG_UPDATE_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_UPDATE_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_UPDATE_RESPONSE(PROBUFF_NET_BAG_UPDATE_RESPONSE other) : this() {
      mDelitems_ = other.mDelitems_.Clone();
      mDelnostackitems_ = other.mDelnostackitems_.Clone();
      mAdditems_ = other.mAdditems_.Clone();
      mAddnostackitems_ = other.mAddnostackitems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_BAG_UPDATE_RESPONSE Clone() {
      return new PROBUFF_NET_BAG_UPDATE_RESPONSE(this);
    }

    /// <summary>Field number for the "m_delitems" field.</summary>
    public const int MDelitemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.delitem> _repeated_mDelitems_codec
        = pb::FieldCodec.ForMessage(10, global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.delitem.Parser);
    private readonly pbc::RepeatedField<global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.delitem> mDelitems_ = new pbc::RepeatedField<global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.delitem>();
    /// <summary>
    /// 删除(可叠加物品)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.delitem> MDelitems {
      get { return mDelitems_; }
    }

    /// <summary>Field number for the "m_delnostackitems" field.</summary>
    public const int MDelnostackitemsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_mDelnostackitems_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> mDelnostackitems_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 删除(不可叠加物品)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MDelnostackitems {
      get { return mDelnostackitems_; }
    }

    /// <summary>Field number for the "m_additems" field.</summary>
    public const int MAdditemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.additem> _repeated_mAdditems_codec
        = pb::FieldCodec.ForMessage(26, global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.additem.Parser);
    private readonly pbc::RepeatedField<global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.additem> mAdditems_ = new pbc::RepeatedField<global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.additem>();
    /// <summary>
    /// 增加(可叠加物品)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Types.additem> MAdditems {
      get { return mAdditems_; }
    }

    /// <summary>Field number for the "m_addnostackitems" field.</summary>
    public const int MAddnostackitemsFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_mAddnostackitems_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> mAddnostackitems_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 增加(不可叠加物品)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> MAddnostackitems {
      get { return mAddnostackitems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_BAG_UPDATE_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_BAG_UPDATE_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mDelitems_.Equals(other.mDelitems_)) return false;
      if(!mDelnostackitems_.Equals(other.mDelnostackitems_)) return false;
      if(!mAdditems_.Equals(other.mAdditems_)) return false;
      if(!mAddnostackitems_.Equals(other.mAddnostackitems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mDelitems_.GetHashCode();
      hash ^= mDelnostackitems_.GetHashCode();
      hash ^= mAdditems_.GetHashCode();
      hash ^= mAddnostackitems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mDelitems_.WriteTo(output, _repeated_mDelitems_codec);
      mDelnostackitems_.WriteTo(output, _repeated_mDelnostackitems_codec);
      mAdditems_.WriteTo(output, _repeated_mAdditems_codec);
      mAddnostackitems_.WriteTo(output, _repeated_mAddnostackitems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mDelitems_.WriteTo(ref output, _repeated_mDelitems_codec);
      mDelnostackitems_.WriteTo(ref output, _repeated_mDelnostackitems_codec);
      mAdditems_.WriteTo(ref output, _repeated_mAdditems_codec);
      mAddnostackitems_.WriteTo(ref output, _repeated_mAddnostackitems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mDelitems_.CalculateSize(_repeated_mDelitems_codec);
      size += mDelnostackitems_.CalculateSize(_repeated_mDelnostackitems_codec);
      size += mAdditems_.CalculateSize(_repeated_mAdditems_codec);
      size += mAddnostackitems_.CalculateSize(_repeated_mAddnostackitems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_BAG_UPDATE_RESPONSE other) {
      if (other == null) {
        return;
      }
      mDelitems_.Add(other.mDelitems_);
      mDelnostackitems_.Add(other.mDelnostackitems_);
      mAdditems_.Add(other.mAdditems_);
      mAddnostackitems_.Add(other.mAddnostackitems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mDelitems_.AddEntriesFrom(input, _repeated_mDelitems_codec);
            break;
          }
          case 18:
          case 16: {
            mDelnostackitems_.AddEntriesFrom(input, _repeated_mDelnostackitems_codec);
            break;
          }
          case 26: {
            mAdditems_.AddEntriesFrom(input, _repeated_mAdditems_codec);
            break;
          }
          case 34:
          case 32: {
            mAddnostackitems_.AddEntriesFrom(input, _repeated_mAddnostackitems_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mDelitems_.AddEntriesFrom(ref input, _repeated_mDelitems_codec);
            break;
          }
          case 18:
          case 16: {
            mDelnostackitems_.AddEntriesFrom(ref input, _repeated_mDelnostackitems_codec);
            break;
          }
          case 26: {
            mAdditems_.AddEntriesFrom(ref input, _repeated_mAdditems_codec);
            break;
          }
          case 34:
          case 32: {
            mAddnostackitems_.AddEntriesFrom(ref input, _repeated_mAddnostackitems_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PROBUFF_NET_BAG_UPDATE_RESPONSE message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class delitem : pb::IMessage<delitem>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<delitem> _parser = new pb::MessageParser<delitem>(() => new delitem());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<delitem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public delitem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public delitem(delitem other) : this() {
          _hasBits0 = other._hasBits0;
          mId_ = other.mId_;
          mCount_ = other.mCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public delitem Clone() {
          return new delitem(this);
        }

        /// <summary>Field number for the "m_id" field.</summary>
        public const int MIdFieldNumber = 1;
        private int mId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MId {
          get { if ((_hasBits0 & 1) != 0) { return mId_; } else { return 0; } }
          set {
            _hasBits0 |= 1;
            mId_ = value;
          }
        }
        /// <summary>Gets whether the "m_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasMId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "m_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearMId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "m_count" field.</summary>
        public const int MCountFieldNumber = 2;
        private int mCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MCount {
          get { if ((_hasBits0 & 2) != 0) { return mCount_; } else { return 0; } }
          set {
            _hasBits0 |= 2;
            mCount_ = value;
          }
        }
        /// <summary>Gets whether the "m_count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasMCount {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "m_count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearMCount() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as delitem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(delitem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MId != other.MId) return false;
          if (MCount != other.MCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasMId) hash ^= MId.GetHashCode();
          if (HasMCount) hash ^= MCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasMId) {
            output.WriteRawTag(8);
            output.WriteInt32(MId);
          }
          if (HasMCount) {
            output.WriteRawTag(16);
            output.WriteInt32(MCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasMId) {
            output.WriteRawTag(8);
            output.WriteInt32(MId);
          }
          if (HasMCount) {
            output.WriteRawTag(16);
            output.WriteInt32(MCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasMId) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MId);
          }
          if (HasMCount) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(delitem other) {
          if (other == null) {
            return;
          }
          if (other.HasMId) {
            MId = other.MId;
          }
          if (other.HasMCount) {
            MCount = other.MCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MId = input.ReadInt32();
                break;
              }
              case 16: {
                MCount = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                MId = input.ReadInt32();
                break;
              }
              case 16: {
                MCount = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class additem : pb::IMessage<additem>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<additem> _parser = new pb::MessageParser<additem>(() => new additem());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<additem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pbnet.PROBUFF_NET_BAG_UPDATE_RESPONSE.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public additem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public additem(additem other) : this() {
          _hasBits0 = other._hasBits0;
          mId_ = other.mId_;
          mCount_ = other.mCount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public additem Clone() {
          return new additem(this);
        }

        /// <summary>Field number for the "m_id" field.</summary>
        public const int MIdFieldNumber = 1;
        private int mId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MId {
          get { if ((_hasBits0 & 1) != 0) { return mId_; } else { return 0; } }
          set {
            _hasBits0 |= 1;
            mId_ = value;
          }
        }
        /// <summary>Gets whether the "m_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasMId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "m_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearMId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "m_count" field.</summary>
        public const int MCountFieldNumber = 2;
        private int mCount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int MCount {
          get { if ((_hasBits0 & 2) != 0) { return mCount_; } else { return 0; } }
          set {
            _hasBits0 |= 2;
            mCount_ = value;
          }
        }
        /// <summary>Gets whether the "m_count" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool HasMCount {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "m_count" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearMCount() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as additem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(additem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MId != other.MId) return false;
          if (MCount != other.MCount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (HasMId) hash ^= MId.GetHashCode();
          if (HasMCount) hash ^= MCount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasMId) {
            output.WriteRawTag(8);
            output.WriteInt32(MId);
          }
          if (HasMCount) {
            output.WriteRawTag(16);
            output.WriteInt32(MCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasMId) {
            output.WriteRawTag(8);
            output.WriteInt32(MId);
          }
          if (HasMCount) {
            output.WriteRawTag(16);
            output.WriteInt32(MCount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (HasMId) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MId);
          }
          if (HasMCount) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(MCount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(additem other) {
          if (other == null) {
            return;
          }
          if (other.HasMId) {
            MId = other.MId;
          }
          if (other.HasMCount) {
            MCount = other.MCount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MId = input.ReadInt32();
                break;
              }
              case 16: {
                MCount = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                MId = input.ReadInt32();
                break;
              }
              case 16: {
                MCount = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// [请求]cmd协议
  /// </summary>
  public sealed partial class PROBUFF_NET_CMD : pb::IMessage<PROBUFF_NET_CMD>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_CMD> _parser = new pb::MessageParser<PROBUFF_NET_CMD>(() => new PROBUFF_NET_CMD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_CMD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CMD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CMD(PROBUFF_NET_CMD other) : this() {
      mCmd_ = other.mCmd_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CMD Clone() {
      return new PROBUFF_NET_CMD(this);
    }

    /// <summary>Field number for the "m_cmd" field.</summary>
    public const int MCmdFieldNumber = 1;
    private string mCmd_;
    /// <summary>
    /// ## 命令							注释
    /// ## /time						获取服务器时间
    /// ## /set_rolename				设置角色名称
    /// ## /set_rolelv				增加角色等级(负数就是减少)
    /// ## /chat						聊天
    /// ## /switch					切换game服务器
    /// [命令|参数]   参数[parm1*parm2]
    /// /set_rolename|libo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MCmd {
      get { return mCmd_ ?? ""; }
      set {
        mCmd_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_cmd" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMCmd {
      get { return mCmd_ != null; }
    }
    /// <summary>Clears the value of the "m_cmd" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMCmd() {
      mCmd_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_CMD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_CMD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MCmd != other.MCmd) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMCmd) hash ^= MCmd.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMCmd) {
        output.WriteRawTag(10);
        output.WriteString(MCmd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMCmd) {
        output.WriteRawTag(10);
        output.WriteString(MCmd);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMCmd) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MCmd);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_CMD other) {
      if (other == null) {
        return;
      }
      if (other.HasMCmd) {
        MCmd = other.MCmd;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MCmd = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MCmd = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PROBUFF_NET_CHAT : pb::IMessage<PROBUFF_NET_CHAT>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_CHAT> _parser = new pb::MessageParser<PROBUFF_NET_CHAT>(() => new PROBUFF_NET_CHAT());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_CHAT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CHAT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CHAT(PROBUFF_NET_CHAT other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mChannelid_ = other.mChannelid_;
      mContent_ = other.mContent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CHAT Clone() {
      return new PROBUFF_NET_CHAT(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private int mType_;
    /// <summary>
    ///enum_logic_chat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_channelid" field.</summary>
    public const int MChannelidFieldNumber = 2;
    private int mChannelid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MChannelid {
      get { if ((_hasBits0 & 2) != 0) { return mChannelid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mChannelid_ = value;
      }
    }
    /// <summary>Gets whether the "m_channelid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMChannelid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_channelid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMChannelid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_content" field.</summary>
    public const int MContentFieldNumber = 3;
    private string mContent_;
    /// <summary>
    ///m_type == chat_speak
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MContent {
      get { return mContent_ ?? ""; }
      set {
        mContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMContent {
      get { return mContent_ != null; }
    }
    /// <summary>Clears the value of the "m_content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMContent() {
      mContent_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_CHAT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_CHAT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MChannelid != other.MChannelid) return false;
      if (MContent != other.MContent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMChannelid) hash ^= MChannelid.GetHashCode();
      if (HasMContent) hash ^= MContent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteInt32(MType);
      }
      if (HasMChannelid) {
        output.WriteRawTag(16);
        output.WriteInt32(MChannelid);
      }
      if (HasMContent) {
        output.WriteRawTag(26);
        output.WriteString(MContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteInt32(MType);
      }
      if (HasMChannelid) {
        output.WriteRawTag(16);
        output.WriteInt32(MChannelid);
      }
      if (HasMContent) {
        output.WriteRawTag(26);
        output.WriteString(MContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MType);
      }
      if (HasMChannelid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MChannelid);
      }
      if (HasMContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_CHAT other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMChannelid) {
        MChannelid = other.MChannelid;
      }
      if (other.HasMContent) {
        MContent = other.MContent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = input.ReadInt32();
            break;
          }
          case 16: {
            MChannelid = input.ReadInt32();
            break;
          }
          case 26: {
            MContent = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = input.ReadInt32();
            break;
          }
          case 16: {
            MChannelid = input.ReadInt32();
            break;
          }
          case 26: {
            MContent = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]聊天
  /// </summary>
  public sealed partial class chatitem : pb::IMessage<chatitem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<chatitem> _parser = new pb::MessageParser<chatitem>(() => new chatitem());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<chatitem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public chatitem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public chatitem(chatitem other) : this() {
      _hasBits0 = other._hasBits0;
      mRoleid_ = other.mRoleid_;
      mRolename_ = other.mRolename_;
      mContent_ = other.mContent_;
      mUtc_ = other.mUtc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public chatitem Clone() {
      return new chatitem(this);
    }

    /// <summary>Field number for the "m_roleid" field.</summary>
    public const int MRoleidFieldNumber = 1;
    private long mRoleid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MRoleid {
      get { if ((_hasBits0 & 1) != 0) { return mRoleid_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mRoleid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roleid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoleid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_roleid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoleid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_rolename" field.</summary>
    public const int MRolenameFieldNumber = 2;
    private string mRolename_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MRolename {
      get { return mRolename_ ?? ""; }
      set {
        mRolename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_rolename" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRolename {
      get { return mRolename_ != null; }
    }
    /// <summary>Clears the value of the "m_rolename" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRolename() {
      mRolename_ = null;
    }

    /// <summary>Field number for the "m_content" field.</summary>
    public const int MContentFieldNumber = 3;
    private string mContent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MContent {
      get { return mContent_ ?? ""; }
      set {
        mContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMContent {
      get { return mContent_ != null; }
    }
    /// <summary>Clears the value of the "m_content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMContent() {
      mContent_ = null;
    }

    /// <summary>Field number for the "m_utc" field.</summary>
    public const int MUtcFieldNumber = 4;
    private int mUtc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MUtc {
      get { if ((_hasBits0 & 2) != 0) { return mUtc_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mUtc_ = value;
      }
    }
    /// <summary>Gets whether the "m_utc" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMUtc {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_utc" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMUtc() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as chatitem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(chatitem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MRoleid != other.MRoleid) return false;
      if (MRolename != other.MRolename) return false;
      if (MContent != other.MContent) return false;
      if (MUtc != other.MUtc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMRoleid) hash ^= MRoleid.GetHashCode();
      if (HasMRolename) hash ^= MRolename.GetHashCode();
      if (HasMContent) hash ^= MContent.GetHashCode();
      if (HasMUtc) hash ^= MUtc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMRoleid) {
        output.WriteRawTag(8);
        output.WriteInt64(MRoleid);
      }
      if (HasMRolename) {
        output.WriteRawTag(18);
        output.WriteString(MRolename);
      }
      if (HasMContent) {
        output.WriteRawTag(26);
        output.WriteString(MContent);
      }
      if (HasMUtc) {
        output.WriteRawTag(32);
        output.WriteInt32(MUtc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMRoleid) {
        output.WriteRawTag(8);
        output.WriteInt64(MRoleid);
      }
      if (HasMRolename) {
        output.WriteRawTag(18);
        output.WriteString(MRolename);
      }
      if (HasMContent) {
        output.WriteRawTag(26);
        output.WriteString(MContent);
      }
      if (HasMUtc) {
        output.WriteRawTag(32);
        output.WriteInt32(MUtc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMRoleid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MRoleid);
      }
      if (HasMRolename) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MRolename);
      }
      if (HasMContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MContent);
      }
      if (HasMUtc) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MUtc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(chatitem other) {
      if (other == null) {
        return;
      }
      if (other.HasMRoleid) {
        MRoleid = other.MRoleid;
      }
      if (other.HasMRolename) {
        MRolename = other.MRolename;
      }
      if (other.HasMContent) {
        MContent = other.MContent;
      }
      if (other.HasMUtc) {
        MUtc = other.MUtc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MRoleid = input.ReadInt64();
            break;
          }
          case 18: {
            MRolename = input.ReadString();
            break;
          }
          case 26: {
            MContent = input.ReadString();
            break;
          }
          case 32: {
            MUtc = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MRoleid = input.ReadInt64();
            break;
          }
          case 18: {
            MRolename = input.ReadString();
            break;
          }
          case 26: {
            MContent = input.ReadString();
            break;
          }
          case 32: {
            MUtc = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PROBUFF_NET_CHAT_RESPONSE : pb::IMessage<PROBUFF_NET_CHAT_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_CHAT_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_CHAT_RESPONSE>(() => new PROBUFF_NET_CHAT_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_CHAT_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CHAT_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CHAT_RESPONSE(PROBUFF_NET_CHAT_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mChannelid_ = other.mChannelid_;
      mChatlist_ = other.mChatlist_.Clone();
      mStat_ = other.mStat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CHAT_RESPONSE Clone() {
      return new PROBUFF_NET_CHAT_RESPONSE(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private int mType_;
    /// <summary>
    /// enum_logic_chat
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_channelid" field.</summary>
    public const int MChannelidFieldNumber = 2;
    private int mChannelid_;
    /// <summary>
    /// tab_chat.m_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MChannelid {
      get { if ((_hasBits0 & 2) != 0) { return mChannelid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mChannelid_ = value;
      }
    }
    /// <summary>Gets whether the "m_channelid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMChannelid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_channelid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMChannelid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_chatlist" field.</summary>
    public const int MChatlistFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Pbnet.chatitem> _repeated_mChatlist_codec
        = pb::FieldCodec.ForMessage(26, global::Pbnet.chatitem.Parser);
    private readonly pbc::RepeatedField<global::Pbnet.chatitem> mChatlist_ = new pbc::RepeatedField<global::Pbnet.chatitem>();
    /// <summary>
    /// m_type == get_chat_list || m_type == updata_speck
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbnet.chatitem> MChatlist {
      get { return mChatlist_; }
    }

    /// <summary>Field number for the "m_stat" field.</summary>
    public const int MStatFieldNumber = 4;
    private bool mStat_;
    /// <summary>
    /// m_type == chat_speak
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MStat {
      get { if ((_hasBits0 & 4) != 0) { return mStat_; } else { return false; } }
      set {
        _hasBits0 |= 4;
        mStat_ = value;
      }
    }
    /// <summary>Gets whether the "m_stat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMStat {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "m_stat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMStat() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_CHAT_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_CHAT_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MChannelid != other.MChannelid) return false;
      if(!mChatlist_.Equals(other.mChatlist_)) return false;
      if (MStat != other.MStat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMChannelid) hash ^= MChannelid.GetHashCode();
      hash ^= mChatlist_.GetHashCode();
      if (HasMStat) hash ^= MStat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteInt32(MType);
      }
      if (HasMChannelid) {
        output.WriteRawTag(16);
        output.WriteInt32(MChannelid);
      }
      mChatlist_.WriteTo(output, _repeated_mChatlist_codec);
      if (HasMStat) {
        output.WriteRawTag(32);
        output.WriteBool(MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteInt32(MType);
      }
      if (HasMChannelid) {
        output.WriteRawTag(16);
        output.WriteInt32(MChannelid);
      }
      mChatlist_.WriteTo(ref output, _repeated_mChatlist_codec);
      if (HasMStat) {
        output.WriteRawTag(32);
        output.WriteBool(MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MType);
      }
      if (HasMChannelid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MChannelid);
      }
      size += mChatlist_.CalculateSize(_repeated_mChatlist_codec);
      if (HasMStat) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_CHAT_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMChannelid) {
        MChannelid = other.MChannelid;
      }
      mChatlist_.Add(other.mChatlist_);
      if (other.HasMStat) {
        MStat = other.MStat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = input.ReadInt32();
            break;
          }
          case 16: {
            MChannelid = input.ReadInt32();
            break;
          }
          case 26: {
            mChatlist_.AddEntriesFrom(input, _repeated_mChatlist_codec);
            break;
          }
          case 32: {
            MStat = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = input.ReadInt32();
            break;
          }
          case 16: {
            MChannelid = input.ReadInt32();
            break;
          }
          case 26: {
            mChatlist_.AddEntriesFrom(ref input, _repeated_mChatlist_codec);
            break;
          }
          case 32: {
            MStat = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]切换线路
  /// </summary>
  public sealed partial class PROBUFF_NET_SWITCH_LINE : pb::IMessage<PROBUFF_NET_SWITCH_LINE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_SWITCH_LINE> _parser = new pb::MessageParser<PROBUFF_NET_SWITCH_LINE>(() => new PROBUFF_NET_SWITCH_LINE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_SWITCH_LINE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SWITCH_LINE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SWITCH_LINE(PROBUFF_NET_SWITCH_LINE other) : this() {
      _hasBits0 = other._hasBits0;
      mLine_ = other.mLine_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SWITCH_LINE Clone() {
      return new PROBUFF_NET_SWITCH_LINE(this);
    }

    /// <summary>Field number for the "m_line" field.</summary>
    public const int MLineFieldNumber = 1;
    private int mLine_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MLine {
      get { if ((_hasBits0 & 1) != 0) { return mLine_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mLine_ = value;
      }
    }
    /// <summary>Gets whether the "m_line" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMLine {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_line" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMLine() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_SWITCH_LINE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_SWITCH_LINE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MLine != other.MLine) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMLine) hash ^= MLine.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMLine) {
        output.WriteRawTag(8);
        output.WriteInt32(MLine);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMLine) {
        output.WriteRawTag(8);
        output.WriteInt32(MLine);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMLine) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MLine);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_SWITCH_LINE other) {
      if (other == null) {
        return;
      }
      if (other.HasMLine) {
        MLine = other.MLine;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MLine = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MLine = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]切换线路
  /// </summary>
  public sealed partial class PROBUFF_NET_SWITCH_LINE_RESPONSE : pb::IMessage<PROBUFF_NET_SWITCH_LINE_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_SWITCH_LINE_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_SWITCH_LINE_RESPONSE>(() => new PROBUFF_NET_SWITCH_LINE_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_SWITCH_LINE_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SWITCH_LINE_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SWITCH_LINE_RESPONSE(PROBUFF_NET_SWITCH_LINE_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mLine_ = other.mLine_;
      mStat_ = other.mStat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SWITCH_LINE_RESPONSE Clone() {
      return new PROBUFF_NET_SWITCH_LINE_RESPONSE(this);
    }

    /// <summary>Field number for the "m_line" field.</summary>
    public const int MLineFieldNumber = 1;
    private int mLine_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MLine {
      get { if ((_hasBits0 & 1) != 0) { return mLine_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mLine_ = value;
      }
    }
    /// <summary>Gets whether the "m_line" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMLine {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_line" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMLine() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_stat" field.</summary>
    public const int MStatFieldNumber = 2;
    private bool mStat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MStat {
      get { if ((_hasBits0 & 2) != 0) { return mStat_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        mStat_ = value;
      }
    }
    /// <summary>Gets whether the "m_stat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMStat {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_stat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMStat() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_SWITCH_LINE_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_SWITCH_LINE_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MLine != other.MLine) return false;
      if (MStat != other.MStat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMLine) hash ^= MLine.GetHashCode();
      if (HasMStat) hash ^= MStat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMLine) {
        output.WriteRawTag(8);
        output.WriteInt32(MLine);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteBool(MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMLine) {
        output.WriteRawTag(8);
        output.WriteInt32(MLine);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteBool(MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMLine) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MLine);
      }
      if (HasMStat) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_SWITCH_LINE_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMLine) {
        MLine = other.MLine;
      }
      if (other.HasMStat) {
        MStat = other.MStat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MLine = input.ReadInt32();
            break;
          }
          case 16: {
            MStat = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MLine = input.ReadInt32();
            break;
          }
          case 16: {
            MStat = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]获取邮件列表
  /// </summary>
  public sealed partial class PROBUFF_NET_MAIL_LIST : pb::IMessage<PROBUFF_NET_MAIL_LIST>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MAIL_LIST> _parser = new pb::MessageParser<PROBUFF_NET_MAIL_LIST>(() => new PROBUFF_NET_MAIL_LIST());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MAIL_LIST> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_LIST() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_LIST(PROBUFF_NET_MAIL_LIST other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_LIST Clone() {
      return new PROBUFF_NET_MAIL_LIST(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MAIL_LIST);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MAIL_LIST other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MAIL_LIST other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]获取邮件列表
  /// </summary>
  public sealed partial class PROBUFF_NET_MAIL_LIST_RESPONSE : pb::IMessage<PROBUFF_NET_MAIL_LIST_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MAIL_LIST_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_MAIL_LIST_RESPONSE>(() => new PROBUFF_NET_MAIL_LIST_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MAIL_LIST_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_LIST_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_LIST_RESPONSE(PROBUFF_NET_MAIL_LIST_RESPONSE other) : this() {
      mMail_ = other.mMail_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_LIST_RESPONSE Clone() {
      return new PROBUFF_NET_MAIL_LIST_RESPONSE(this);
    }

    /// <summary>Field number for the "m_mail" field.</summary>
    public const int MMailFieldNumber = 1;
    private static readonly pbc::MapField<int, global::Pbdb.mail>.Codec _map_mMail_codec
        = new pbc::MapField<int, global::Pbdb.mail>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::Pbdb.mail.Parser), 10);
    private readonly pbc::MapField<int, global::Pbdb.mail> mMail_ = new pbc::MapField<int, global::Pbdb.mail>();
    /// <summary>
    /// key mail id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<int, global::Pbdb.mail> MMail {
      get { return mMail_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MAIL_LIST_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MAIL_LIST_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MMail.Equals(other.MMail)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MMail.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mMail_.WriteTo(output, _map_mMail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mMail_.WriteTo(ref output, _map_mMail_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mMail_.CalculateSize(_map_mMail_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MAIL_LIST_RESPONSE other) {
      if (other == null) {
        return;
      }
      mMail_.Add(other.mMail_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mMail_.AddEntriesFrom(input, _map_mMail_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mMail_.AddEntriesFrom(ref input, _map_mMail_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]读取邮件
  /// </summary>
  public sealed partial class PROBUFF_NET_MAIL_READ : pb::IMessage<PROBUFF_NET_MAIL_READ>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MAIL_READ> _parser = new pb::MessageParser<PROBUFF_NET_MAIL_READ>(() => new PROBUFF_NET_MAIL_READ());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MAIL_READ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_READ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_READ(PROBUFF_NET_MAIL_READ other) : this() {
      _hasBits0 = other._hasBits0;
      mMailid_ = other.mMailid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_READ Clone() {
      return new PROBUFF_NET_MAIL_READ(this);
    }

    /// <summary>Field number for the "m_mailid" field.</summary>
    public const int MMailidFieldNumber = 1;
    private long mMailid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MMailid {
      get { if ((_hasBits0 & 1) != 0) { return mMailid_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mMailid_ = value;
      }
    }
    /// <summary>Gets whether the "m_mailid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMMailid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_mailid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMMailid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MAIL_READ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MAIL_READ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MMailid != other.MMailid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMMailid) hash ^= MMailid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMMailid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MMailid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MAIL_READ other) {
      if (other == null) {
        return;
      }
      if (other.HasMMailid) {
        MMailid = other.MMailid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]读取邮件
  /// </summary>
  public sealed partial class PROBUFF_NET_MAIL_READ_RESPONSE : pb::IMessage<PROBUFF_NET_MAIL_READ_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MAIL_READ_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_MAIL_READ_RESPONSE>(() => new PROBUFF_NET_MAIL_READ_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MAIL_READ_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_READ_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_READ_RESPONSE(PROBUFF_NET_MAIL_READ_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mMailid_ = other.mMailid_;
      mStat_ = other.mStat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_READ_RESPONSE Clone() {
      return new PROBUFF_NET_MAIL_READ_RESPONSE(this);
    }

    /// <summary>Field number for the "m_mailid" field.</summary>
    public const int MMailidFieldNumber = 1;
    private long mMailid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MMailid {
      get { if ((_hasBits0 & 1) != 0) { return mMailid_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mMailid_ = value;
      }
    }
    /// <summary>Gets whether the "m_mailid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMMailid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_mailid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMMailid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_stat" field.</summary>
    public const int MStatFieldNumber = 2;
    private bool mStat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MStat {
      get { if ((_hasBits0 & 2) != 0) { return mStat_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        mStat_ = value;
      }
    }
    /// <summary>Gets whether the "m_stat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMStat {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_stat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMStat() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MAIL_READ_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MAIL_READ_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MMailid != other.MMailid) return false;
      if (MStat != other.MStat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMMailid) hash ^= MMailid.GetHashCode();
      if (HasMStat) hash ^= MStat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteBool(MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteBool(MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMMailid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MMailid);
      }
      if (HasMStat) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MAIL_READ_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMMailid) {
        MMailid = other.MMailid;
      }
      if (other.HasMStat) {
        MStat = other.MStat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
          case 16: {
            MStat = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
          case 16: {
            MStat = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]领取邮件附件
  /// </summary>
  public sealed partial class PROBUFF_NET_MAIL_DRAW : pb::IMessage<PROBUFF_NET_MAIL_DRAW>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MAIL_DRAW> _parser = new pb::MessageParser<PROBUFF_NET_MAIL_DRAW>(() => new PROBUFF_NET_MAIL_DRAW());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MAIL_DRAW> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DRAW() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DRAW(PROBUFF_NET_MAIL_DRAW other) : this() {
      _hasBits0 = other._hasBits0;
      mMailid_ = other.mMailid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DRAW Clone() {
      return new PROBUFF_NET_MAIL_DRAW(this);
    }

    /// <summary>Field number for the "m_mailid" field.</summary>
    public const int MMailidFieldNumber = 1;
    private long mMailid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MMailid {
      get { if ((_hasBits0 & 1) != 0) { return mMailid_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mMailid_ = value;
      }
    }
    /// <summary>Gets whether the "m_mailid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMMailid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_mailid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMMailid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MAIL_DRAW);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MAIL_DRAW other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MMailid != other.MMailid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMMailid) hash ^= MMailid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMMailid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MMailid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MAIL_DRAW other) {
      if (other == null) {
        return;
      }
      if (other.HasMMailid) {
        MMailid = other.MMailid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]领取邮件附件
  /// </summary>
  public sealed partial class PROBUFF_NET_MAIL_DRAW_RESPONSE : pb::IMessage<PROBUFF_NET_MAIL_DRAW_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MAIL_DRAW_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_MAIL_DRAW_RESPONSE>(() => new PROBUFF_NET_MAIL_DRAW_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MAIL_DRAW_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DRAW_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DRAW_RESPONSE(PROBUFF_NET_MAIL_DRAW_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mMailid_ = other.mMailid_;
      mStat_ = other.mStat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DRAW_RESPONSE Clone() {
      return new PROBUFF_NET_MAIL_DRAW_RESPONSE(this);
    }

    /// <summary>Field number for the "m_mailid" field.</summary>
    public const int MMailidFieldNumber = 1;
    private long mMailid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MMailid {
      get { if ((_hasBits0 & 1) != 0) { return mMailid_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mMailid_ = value;
      }
    }
    /// <summary>Gets whether the "m_mailid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMMailid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_mailid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMMailid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_stat" field.</summary>
    public const int MStatFieldNumber = 2;
    private bool mStat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MStat {
      get { if ((_hasBits0 & 2) != 0) { return mStat_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        mStat_ = value;
      }
    }
    /// <summary>Gets whether the "m_stat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMStat {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_stat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMStat() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MAIL_DRAW_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MAIL_DRAW_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MMailid != other.MMailid) return false;
      if (MStat != other.MStat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMMailid) hash ^= MMailid.GetHashCode();
      if (HasMStat) hash ^= MStat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteBool(MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteBool(MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMMailid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MMailid);
      }
      if (HasMStat) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MAIL_DRAW_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMMailid) {
        MMailid = other.MMailid;
      }
      if (other.HasMStat) {
        MStat = other.MStat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
          case 16: {
            MStat = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
          case 16: {
            MStat = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [请求]领取邮件附件
  /// </summary>
  public sealed partial class PROBUFF_NET_MAIL_DEL : pb::IMessage<PROBUFF_NET_MAIL_DEL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MAIL_DEL> _parser = new pb::MessageParser<PROBUFF_NET_MAIL_DEL>(() => new PROBUFF_NET_MAIL_DEL());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MAIL_DEL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DEL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DEL(PROBUFF_NET_MAIL_DEL other) : this() {
      _hasBits0 = other._hasBits0;
      mMailid_ = other.mMailid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DEL Clone() {
      return new PROBUFF_NET_MAIL_DEL(this);
    }

    /// <summary>Field number for the "m_mailid" field.</summary>
    public const int MMailidFieldNumber = 1;
    private long mMailid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MMailid {
      get { if ((_hasBits0 & 1) != 0) { return mMailid_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mMailid_ = value;
      }
    }
    /// <summary>Gets whether the "m_mailid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMMailid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_mailid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMMailid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MAIL_DEL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MAIL_DEL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MMailid != other.MMailid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMMailid) hash ^= MMailid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMMailid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MMailid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MAIL_DEL other) {
      if (other == null) {
        return;
      }
      if (other.HasMMailid) {
        MMailid = other.MMailid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// [回复]领取邮件附件
  /// </summary>
  public sealed partial class PROBUFF_NET_MAIL_DEL_RESPONSE : pb::IMessage<PROBUFF_NET_MAIL_DEL_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MAIL_DEL_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_MAIL_DEL_RESPONSE>(() => new PROBUFF_NET_MAIL_DEL_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MAIL_DEL_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DEL_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DEL_RESPONSE(PROBUFF_NET_MAIL_DEL_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mMailid_ = other.mMailid_;
      mStat_ = other.mStat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MAIL_DEL_RESPONSE Clone() {
      return new PROBUFF_NET_MAIL_DEL_RESPONSE(this);
    }

    /// <summary>Field number for the "m_mailid" field.</summary>
    public const int MMailidFieldNumber = 1;
    private long mMailid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MMailid {
      get { if ((_hasBits0 & 1) != 0) { return mMailid_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mMailid_ = value;
      }
    }
    /// <summary>Gets whether the "m_mailid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMMailid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_mailid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMMailid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_stat" field.</summary>
    public const int MStatFieldNumber = 2;
    private bool mStat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MStat {
      get { if ((_hasBits0 & 2) != 0) { return mStat_; } else { return false; } }
      set {
        _hasBits0 |= 2;
        mStat_ = value;
      }
    }
    /// <summary>Gets whether the "m_stat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMStat {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_stat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMStat() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MAIL_DEL_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MAIL_DEL_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MMailid != other.MMailid) return false;
      if (MStat != other.MStat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMMailid) hash ^= MMailid.GetHashCode();
      if (HasMStat) hash ^= MStat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteBool(MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMMailid) {
        output.WriteRawTag(8);
        output.WriteInt64(MMailid);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteBool(MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMMailid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MMailid);
      }
      if (HasMStat) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MAIL_DEL_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMMailid) {
        MMailid = other.MMailid;
      }
      if (other.HasMStat) {
        MStat = other.MStat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
          case 16: {
            MStat = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MMailid = input.ReadInt64();
            break;
          }
          case 16: {
            MStat = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VECTOR2 : pb::IMessage<VECTOR2>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VECTOR2> _parser = new pb::MessageParser<VECTOR2>(() => new VECTOR2());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VECTOR2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VECTOR2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VECTOR2(VECTOR2 other) : this() {
      _hasBits0 = other._hasBits0;
      mX_ = other.mX_;
      mY_ = other.mY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VECTOR2 Clone() {
      return new VECTOR2(this);
    }

    /// <summary>Field number for the "m_x" field.</summary>
    public const int MXFieldNumber = 1;
    private int mX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MX {
      get { if ((_hasBits0 & 1) != 0) { return mX_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mX_ = value;
      }
    }
    /// <summary>Gets whether the "m_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_y" field.</summary>
    public const int MYFieldNumber = 2;
    private int mY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MY {
      get { if ((_hasBits0 & 2) != 0) { return mY_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mY_ = value;
      }
    }
    /// <summary>Gets whether the "m_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMY() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VECTOR2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VECTOR2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MX != other.MX) return false;
      if (MY != other.MY) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMX) hash ^= MX.GetHashCode();
      if (HasMY) hash ^= MY.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMX) {
        output.WriteRawTag(8);
        output.WriteInt32(MX);
      }
      if (HasMY) {
        output.WriteRawTag(16);
        output.WriteInt32(MY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMX) {
        output.WriteRawTag(8);
        output.WriteInt32(MX);
      }
      if (HasMY) {
        output.WriteRawTag(16);
        output.WriteInt32(MY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MX);
      }
      if (HasMY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MY);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VECTOR2 other) {
      if (other == null) {
        return;
      }
      if (other.HasMX) {
        MX = other.MX;
      }
      if (other.HasMY) {
        MY = other.MY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MX = input.ReadInt32();
            break;
          }
          case 16: {
            MY = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MX = input.ReadInt32();
            break;
          }
          case 16: {
            MY = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VECTOR3 : pb::IMessage<VECTOR3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VECTOR3> _parser = new pb::MessageParser<VECTOR3>(() => new VECTOR3());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VECTOR3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VECTOR3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VECTOR3(VECTOR3 other) : this() {
      _hasBits0 = other._hasBits0;
      mX_ = other.mX_;
      mY_ = other.mY_;
      mZ_ = other.mZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VECTOR3 Clone() {
      return new VECTOR3(this);
    }

    /// <summary>Field number for the "m_x" field.</summary>
    public const int MXFieldNumber = 1;
    private int mX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MX {
      get { if ((_hasBits0 & 1) != 0) { return mX_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mX_ = value;
      }
    }
    /// <summary>Gets whether the "m_x" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMX {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_x" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMX() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_y" field.</summary>
    public const int MYFieldNumber = 2;
    private int mY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MY {
      get { if ((_hasBits0 & 2) != 0) { return mY_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mY_ = value;
      }
    }
    /// <summary>Gets whether the "m_y" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMY {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_y" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMY() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_z" field.</summary>
    public const int MZFieldNumber = 3;
    private int mZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MZ {
      get { if ((_hasBits0 & 4) != 0) { return mZ_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        mZ_ = value;
      }
    }
    /// <summary>Gets whether the "m_z" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMZ {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "m_z" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMZ() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VECTOR3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VECTOR3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MX != other.MX) return false;
      if (MY != other.MY) return false;
      if (MZ != other.MZ) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMX) hash ^= MX.GetHashCode();
      if (HasMY) hash ^= MY.GetHashCode();
      if (HasMZ) hash ^= MZ.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMX) {
        output.WriteRawTag(8);
        output.WriteInt32(MX);
      }
      if (HasMY) {
        output.WriteRawTag(16);
        output.WriteInt32(MY);
      }
      if (HasMZ) {
        output.WriteRawTag(24);
        output.WriteInt32(MZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMX) {
        output.WriteRawTag(8);
        output.WriteInt32(MX);
      }
      if (HasMY) {
        output.WriteRawTag(16);
        output.WriteInt32(MY);
      }
      if (HasMZ) {
        output.WriteRawTag(24);
        output.WriteInt32(MZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMX) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MX);
      }
      if (HasMY) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MY);
      }
      if (HasMZ) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MZ);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VECTOR3 other) {
      if (other == null) {
        return;
      }
      if (other.HasMX) {
        MX = other.MX;
      }
      if (other.HasMY) {
        MY = other.MY;
      }
      if (other.HasMZ) {
        MZ = other.MZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MX = input.ReadInt32();
            break;
          }
          case 16: {
            MY = input.ReadInt32();
            break;
          }
          case 24: {
            MZ = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MX = input.ReadInt32();
            break;
          }
          case 16: {
            MY = input.ReadInt32();
            break;
          }
          case 24: {
            MZ = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UNIT_POSITION : pb::IMessage<UNIT_POSITION>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UNIT_POSITION> _parser = new pb::MessageParser<UNIT_POSITION>(() => new UNIT_POSITION());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UNIT_POSITION> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UNIT_POSITION() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UNIT_POSITION(UNIT_POSITION other) : this() {
      _hasBits0 = other._hasBits0;
      mId_ = other.mId_;
      mPosition_ = other.mPosition_ != null ? other.mPosition_.Clone() : null;
      mAngle_ = other.mAngle_;
      mSpeed_ = other.mSpeed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UNIT_POSITION Clone() {
      return new UNIT_POSITION(this);
    }

    /// <summary>Field number for the "m_id" field.</summary>
    public const int MIdFieldNumber = 2;
    private long mId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MId {
      get { if ((_hasBits0 & 1) != 0) { return mId_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mId_ = value;
      }
    }
    /// <summary>Gets whether the "m_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_position" field.</summary>
    public const int MPositionFieldNumber = 3;
    private global::Pbnet.VECTOR2 mPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.VECTOR2 MPosition {
      get { return mPosition_; }
      set {
        mPosition_ = value;
      }
    }

    /// <summary>Field number for the "m_angle" field.</summary>
    public const int MAngleFieldNumber = 4;
    private int mAngle_;
    /// <summary>
    /// 方向角度[0-360]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MAngle {
      get { if ((_hasBits0 & 2) != 0) { return mAngle_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mAngle_ = value;
      }
    }
    /// <summary>Gets whether the "m_angle" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMAngle {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_angle" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMAngle() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_speed" field.</summary>
    public const int MSpeedFieldNumber = 5;
    private int mSpeed_;
    /// <summary>
    /// 速度[米/秒]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MSpeed {
      get { if ((_hasBits0 & 4) != 0) { return mSpeed_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        mSpeed_ = value;
      }
    }
    /// <summary>Gets whether the "m_speed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMSpeed {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "m_speed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMSpeed() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UNIT_POSITION);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UNIT_POSITION other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MId != other.MId) return false;
      if (!object.Equals(MPosition, other.MPosition)) return false;
      if (MAngle != other.MAngle) return false;
      if (MSpeed != other.MSpeed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMId) hash ^= MId.GetHashCode();
      if (mPosition_ != null) hash ^= MPosition.GetHashCode();
      if (HasMAngle) hash ^= MAngle.GetHashCode();
      if (HasMSpeed) hash ^= MSpeed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMId) {
        output.WriteRawTag(16);
        output.WriteInt64(MId);
      }
      if (mPosition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MPosition);
      }
      if (HasMAngle) {
        output.WriteRawTag(32);
        output.WriteInt32(MAngle);
      }
      if (HasMSpeed) {
        output.WriteRawTag(40);
        output.WriteInt32(MSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMId) {
        output.WriteRawTag(16);
        output.WriteInt64(MId);
      }
      if (mPosition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MPosition);
      }
      if (HasMAngle) {
        output.WriteRawTag(32);
        output.WriteInt32(MAngle);
      }
      if (HasMSpeed) {
        output.WriteRawTag(40);
        output.WriteInt32(MSpeed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MId);
      }
      if (mPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MPosition);
      }
      if (HasMAngle) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MAngle);
      }
      if (HasMSpeed) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MSpeed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UNIT_POSITION other) {
      if (other == null) {
        return;
      }
      if (other.HasMId) {
        MId = other.MId;
      }
      if (other.mPosition_ != null) {
        if (mPosition_ == null) {
          MPosition = new global::Pbnet.VECTOR2();
        }
        MPosition.MergeFrom(other.MPosition);
      }
      if (other.HasMAngle) {
        MAngle = other.MAngle;
      }
      if (other.HasMSpeed) {
        MSpeed = other.MSpeed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 16: {
            MId = input.ReadInt64();
            break;
          }
          case 26: {
            if (mPosition_ == null) {
              MPosition = new global::Pbnet.VECTOR2();
            }
            input.ReadMessage(MPosition);
            break;
          }
          case 32: {
            MAngle = input.ReadInt32();
            break;
          }
          case 40: {
            MSpeed = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 16: {
            MId = input.ReadInt64();
            break;
          }
          case 26: {
            if (mPosition_ == null) {
              MPosition = new global::Pbnet.VECTOR2();
            }
            input.ReadMessage(MPosition);
            break;
          }
          case 32: {
            MAngle = input.ReadInt32();
            break;
          }
          case 40: {
            MSpeed = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitAttribute : pb::IMessage<UnitAttribute>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitAttribute> _parser = new pb::MessageParser<UnitAttribute>(() => new UnitAttribute());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitAttribute> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitAttribute() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitAttribute(UnitAttribute other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mValue_ = other.mValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitAttribute Clone() {
      return new UnitAttribute(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private int mType_;
    /// <summary>
    /// EnumAttribute
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_value" field.</summary>
    public const int MValueFieldNumber = 2;
    private int mValue_;
    /// <summary>
    /// 属性值
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MValue {
      get { if ((_hasBits0 & 2) != 0) { return mValue_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mValue_ = value;
      }
    }
    /// <summary>Gets whether the "m_value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMValue {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMValue() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitAttribute);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitAttribute other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MValue != other.MValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMValue) hash ^= MValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteInt32(MType);
      }
      if (HasMValue) {
        output.WriteRawTag(16);
        output.WriteInt32(MValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteInt32(MType);
      }
      if (HasMValue) {
        output.WriteRawTag(16);
        output.WriteInt32(MValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MType);
      }
      if (HasMValue) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitAttribute other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMValue) {
        MValue = other.MValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = input.ReadInt32();
            break;
          }
          case 16: {
            MValue = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = input.ReadInt32();
            break;
          }
          case 16: {
            MValue = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitModule : pb::IMessage<UnitModule>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitModule> _parser = new pb::MessageParser<UnitModule>(() => new UnitModule());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitModule> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitModule() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitModule(UnitModule other) : this() {
      _hasBits0 = other._hasBits0;
      mMtype_ = other.mMtype_;
      mModules_ = other.mModules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitModule Clone() {
      return new UnitModule(this);
    }

    /// <summary>Field number for the "m_mtype" field.</summary>
    public const int MMtypeFieldNumber = 1;
    private int mMtype_;
    /// <summary>
    /// EnumModule
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MMtype {
      get { if ((_hasBits0 & 1) != 0) { return mMtype_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        mMtype_ = value;
      }
    }
    /// <summary>Gets whether the "m_mtype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMMtype {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_mtype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMMtype() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_modules" field.</summary>
    public const int MModulesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Pbnet.UnitAttribute> _repeated_mModules_codec
        = pb::FieldCodec.ForMessage(18, global::Pbnet.UnitAttribute.Parser);
    private readonly pbc::RepeatedField<global::Pbnet.UnitAttribute> mModules_ = new pbc::RepeatedField<global::Pbnet.UnitAttribute>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbnet.UnitAttribute> MModules {
      get { return mModules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitModule);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitModule other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MMtype != other.MMtype) return false;
      if(!mModules_.Equals(other.mModules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMMtype) hash ^= MMtype.GetHashCode();
      hash ^= mModules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMMtype) {
        output.WriteRawTag(8);
        output.WriteInt32(MMtype);
      }
      mModules_.WriteTo(output, _repeated_mModules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMMtype) {
        output.WriteRawTag(8);
        output.WriteInt32(MMtype);
      }
      mModules_.WriteTo(ref output, _repeated_mModules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMMtype) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MMtype);
      }
      size += mModules_.CalculateSize(_repeated_mModules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitModule other) {
      if (other == null) {
        return;
      }
      if (other.HasMMtype) {
        MMtype = other.MMtype;
      }
      mModules_.Add(other.mModules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MMtype = input.ReadInt32();
            break;
          }
          case 18: {
            mModules_.AddEntriesFrom(input, _repeated_mModules_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MMtype = input.ReadInt32();
            break;
          }
          case 18: {
            mModules_.AddEntriesFrom(ref input, _repeated_mModules_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UNIT : pb::IMessage<UNIT>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UNIT> _parser = new pb::MessageParser<UNIT>(() => new UNIT());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UNIT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UNIT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UNIT(UNIT other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mId_ = other.mId_;
      mPosition_ = other.mPosition_ != null ? other.mPosition_.Clone() : null;
      mModules_ = other.mModules_.Clone();
      mStat_ = other.mStat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UNIT Clone() {
      return new UNIT(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eunit mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eunit MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eunit.Role; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_id" field.</summary>
    public const int MIdFieldNumber = 2;
    private long mId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MId {
      get { if ((_hasBits0 & 2) != 0) { return mId_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        mId_ = value;
      }
    }
    /// <summary>Gets whether the "m_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_position" field.</summary>
    public const int MPositionFieldNumber = 3;
    private global::Pbnet.UNIT_POSITION mPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.UNIT_POSITION MPosition {
      get { return mPosition_; }
      set {
        mPosition_ = value;
      }
    }

    /// <summary>Field number for the "m_modules" field.</summary>
    public const int MModulesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Pbnet.UnitModule> _repeated_mModules_codec
        = pb::FieldCodec.ForMessage(34, global::Pbnet.UnitModule.Parser);
    private readonly pbc::RepeatedField<global::Pbnet.UnitModule> mModules_ = new pbc::RepeatedField<global::Pbnet.UnitModule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbnet.UnitModule> MModules {
      get { return mModules_; }
    }

    /// <summary>Field number for the "m_stat" field.</summary>
    public const int MStatFieldNumber = 5;
    private global::Pbnet.eunitstat mStat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eunitstat MStat {
      get { if ((_hasBits0 & 4) != 0) { return mStat_; } else { return global::Pbnet.eunitstat.Normal; } }
      set {
        _hasBits0 |= 4;
        mStat_ = value;
      }
    }
    /// <summary>Gets whether the "m_stat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMStat {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "m_stat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMStat() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UNIT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UNIT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MId != other.MId) return false;
      if (!object.Equals(MPosition, other.MPosition)) return false;
      if(!mModules_.Equals(other.mModules_)) return false;
      if (MStat != other.MStat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMId) hash ^= MId.GetHashCode();
      if (mPosition_ != null) hash ^= MPosition.GetHashCode();
      hash ^= mModules_.GetHashCode();
      if (HasMStat) hash ^= MStat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMId) {
        output.WriteRawTag(16);
        output.WriteInt64(MId);
      }
      if (mPosition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MPosition);
      }
      mModules_.WriteTo(output, _repeated_mModules_codec);
      if (HasMStat) {
        output.WriteRawTag(40);
        output.WriteEnum((int) MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMId) {
        output.WriteRawTag(16);
        output.WriteInt64(MId);
      }
      if (mPosition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MPosition);
      }
      mModules_.WriteTo(ref output, _repeated_mModules_codec);
      if (HasMStat) {
        output.WriteRawTag(40);
        output.WriteEnum((int) MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MId);
      }
      if (mPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MPosition);
      }
      size += mModules_.CalculateSize(_repeated_mModules_codec);
      if (HasMStat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MStat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UNIT other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMId) {
        MId = other.MId;
      }
      if (other.mPosition_ != null) {
        if (mPosition_ == null) {
          MPosition = new global::Pbnet.UNIT_POSITION();
        }
        MPosition.MergeFrom(other.MPosition);
      }
      mModules_.Add(other.mModules_);
      if (other.HasMStat) {
        MStat = other.MStat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eunit) input.ReadEnum();
            break;
          }
          case 16: {
            MId = input.ReadInt64();
            break;
          }
          case 26: {
            if (mPosition_ == null) {
              MPosition = new global::Pbnet.UNIT_POSITION();
            }
            input.ReadMessage(MPosition);
            break;
          }
          case 34: {
            mModules_.AddEntriesFrom(input, _repeated_mModules_codec);
            break;
          }
          case 40: {
            MStat = (global::Pbnet.eunitstat) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eunit) input.ReadEnum();
            break;
          }
          case 16: {
            MId = input.ReadInt64();
            break;
          }
          case 26: {
            if (mPosition_ == null) {
              MPosition = new global::Pbnet.UNIT_POSITION();
            }
            input.ReadMessage(MPosition);
            break;
          }
          case 34: {
            mModules_.AddEntriesFrom(ref input, _repeated_mModules_codec);
            break;
          }
          case 40: {
            MStat = (global::Pbnet.eunitstat) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 同步属性值
  /// </summary>
  public sealed partial class PROBUFF_NET_SYNC_ATTRIBUTE : pb::IMessage<PROBUFF_NET_SYNC_ATTRIBUTE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_SYNC_ATTRIBUTE> _parser = new pb::MessageParser<PROBUFF_NET_SYNC_ATTRIBUTE>(() => new PROBUFF_NET_SYNC_ATTRIBUTE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_SYNC_ATTRIBUTE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_ATTRIBUTE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_ATTRIBUTE(PROBUFF_NET_SYNC_ATTRIBUTE other) : this() {
      mModules_ = other.mModules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_ATTRIBUTE Clone() {
      return new PROBUFF_NET_SYNC_ATTRIBUTE(this);
    }

    /// <summary>Field number for the "m_modules" field.</summary>
    public const int MModulesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Pbnet.UnitModule> _repeated_mModules_codec
        = pb::FieldCodec.ForMessage(10, global::Pbnet.UnitModule.Parser);
    private readonly pbc::RepeatedField<global::Pbnet.UnitModule> mModules_ = new pbc::RepeatedField<global::Pbnet.UnitModule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbnet.UnitModule> MModules {
      get { return mModules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_SYNC_ATTRIBUTE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_SYNC_ATTRIBUTE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mModules_.Equals(other.mModules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mModules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mModules_.WriteTo(output, _repeated_mModules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mModules_.WriteTo(ref output, _repeated_mModules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mModules_.CalculateSize(_repeated_mModules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_SYNC_ATTRIBUTE other) {
      if (other == null) {
        return;
      }
      mModules_.Add(other.mModules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mModules_.AddEntriesFrom(input, _repeated_mModules_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mModules_.AddEntriesFrom(ref input, _repeated_mModules_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 同步玩家信息
  /// </summary>
  public sealed partial class PROBUFF_NET_SYNC_UNIT : pb::IMessage<PROBUFF_NET_SYNC_UNIT>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_SYNC_UNIT> _parser = new pb::MessageParser<PROBUFF_NET_SYNC_UNIT>(() => new PROBUFF_NET_SYNC_UNIT());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_SYNC_UNIT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_UNIT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_UNIT(PROBUFF_NET_SYNC_UNIT other) : this() {
      mUnits_ = other.mUnits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_UNIT Clone() {
      return new PROBUFF_NET_SYNC_UNIT(this);
    }

    /// <summary>Field number for the "m_units" field.</summary>
    public const int MUnitsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Pbnet.UNIT> _repeated_mUnits_codec
        = pb::FieldCodec.ForMessage(10, global::Pbnet.UNIT.Parser);
    private readonly pbc::RepeatedField<global::Pbnet.UNIT> mUnits_ = new pbc::RepeatedField<global::Pbnet.UNIT>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbnet.UNIT> MUnits {
      get { return mUnits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_SYNC_UNIT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_SYNC_UNIT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mUnits_.Equals(other.mUnits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mUnits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mUnits_.WriteTo(output, _repeated_mUnits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mUnits_.WriteTo(ref output, _repeated_mUnits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mUnits_.CalculateSize(_repeated_mUnits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_SYNC_UNIT other) {
      if (other == null) {
        return;
      }
      mUnits_.Add(other.mUnits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mUnits_.AddEntriesFrom(input, _repeated_mUnits_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mUnits_.AddEntriesFrom(ref input, _repeated_mUnits_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 进入视野
  /// </summary>
  public sealed partial class PROBUFF_NET_ENTER_LEAVE_VIEW : pb::IMessage<PROBUFF_NET_ENTER_LEAVE_VIEW>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_ENTER_LEAVE_VIEW> _parser = new pb::MessageParser<PROBUFF_NET_ENTER_LEAVE_VIEW>(() => new PROBUFF_NET_ENTER_LEAVE_VIEW());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_ENTER_LEAVE_VIEW> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ENTER_LEAVE_VIEW() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ENTER_LEAVE_VIEW(PROBUFF_NET_ENTER_LEAVE_VIEW other) : this() {
      _hasBits0 = other._hasBits0;
      mIsenter_ = other.mIsenter_;
      mUnits_ = other.mUnits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ENTER_LEAVE_VIEW Clone() {
      return new PROBUFF_NET_ENTER_LEAVE_VIEW(this);
    }

    /// <summary>Field number for the "m_isenter" field.</summary>
    public const int MIsenterFieldNumber = 1;
    private bool mIsenter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MIsenter {
      get { if ((_hasBits0 & 1) != 0) { return mIsenter_; } else { return false; } }
      set {
        _hasBits0 |= 1;
        mIsenter_ = value;
      }
    }
    /// <summary>Gets whether the "m_isenter" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMIsenter {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_isenter" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMIsenter() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_units" field.</summary>
    public const int MUnitsFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_mUnits_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> mUnits_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> MUnits {
      get { return mUnits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_ENTER_LEAVE_VIEW);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_ENTER_LEAVE_VIEW other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MIsenter != other.MIsenter) return false;
      if(!mUnits_.Equals(other.mUnits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMIsenter) hash ^= MIsenter.GetHashCode();
      hash ^= mUnits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMIsenter) {
        output.WriteRawTag(8);
        output.WriteBool(MIsenter);
      }
      mUnits_.WriteTo(output, _repeated_mUnits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMIsenter) {
        output.WriteRawTag(8);
        output.WriteBool(MIsenter);
      }
      mUnits_.WriteTo(ref output, _repeated_mUnits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMIsenter) {
        size += 1 + 1;
      }
      size += mUnits_.CalculateSize(_repeated_mUnits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_ENTER_LEAVE_VIEW other) {
      if (other == null) {
        return;
      }
      if (other.HasMIsenter) {
        MIsenter = other.MIsenter;
      }
      mUnits_.Add(other.mUnits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MIsenter = input.ReadBool();
            break;
          }
          case 18:
          case 16: {
            mUnits_.AddEntriesFrom(input, _repeated_mUnits_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MIsenter = input.ReadBool();
            break;
          }
          case 18:
          case 16: {
            mUnits_.AddEntriesFrom(ref input, _repeated_mUnits_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 同步位置方向信息
  /// </summary>
  public sealed partial class PROBUFF_NET_SYNC_POSITION : pb::IMessage<PROBUFF_NET_SYNC_POSITION>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_SYNC_POSITION> _parser = new pb::MessageParser<PROBUFF_NET_SYNC_POSITION>(() => new PROBUFF_NET_SYNC_POSITION());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_SYNC_POSITION> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_POSITION() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_POSITION(PROBUFF_NET_SYNC_POSITION other) : this() {
      mPosition_ = other.mPosition_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_POSITION Clone() {
      return new PROBUFF_NET_SYNC_POSITION(this);
    }

    /// <summary>Field number for the "m_position" field.</summary>
    public const int MPositionFieldNumber = 1;
    private static readonly pbc::MapField<long, global::Pbnet.UNIT_POSITION>.Codec _map_mPosition_codec
        = new pbc::MapField<long, global::Pbnet.UNIT_POSITION>.Codec(pb::FieldCodec.ForInt64(8, 0L), pb::FieldCodec.ForMessage(18, global::Pbnet.UNIT_POSITION.Parser), 10);
    private readonly pbc::MapField<long, global::Pbnet.UNIT_POSITION> mPosition_ = new pbc::MapField<long, global::Pbnet.UNIT_POSITION>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<long, global::Pbnet.UNIT_POSITION> MPosition {
      get { return mPosition_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_SYNC_POSITION);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_SYNC_POSITION other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!MPosition.Equals(other.MPosition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= MPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      mPosition_.WriteTo(output, _map_mPosition_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      mPosition_.WriteTo(ref output, _map_mPosition_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mPosition_.CalculateSize(_map_mPosition_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_SYNC_POSITION other) {
      if (other == null) {
        return;
      }
      mPosition_.Add(other.mPosition_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mPosition_.AddEntriesFrom(input, _map_mPosition_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            mPosition_.AddEntriesFrom(ref input, _map_mPosition_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 修改方向,速度
  /// </summary>
  public sealed partial class PROBUFF_NET_CHANGE_ANGLE : pb::IMessage<PROBUFF_NET_CHANGE_ANGLE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_CHANGE_ANGLE> _parser = new pb::MessageParser<PROBUFF_NET_CHANGE_ANGLE>(() => new PROBUFF_NET_CHANGE_ANGLE());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_CHANGE_ANGLE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CHANGE_ANGLE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CHANGE_ANGLE(PROBUFF_NET_CHANGE_ANGLE other) : this() {
      mPosition_ = other.mPosition_ != null ? other.mPosition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_CHANGE_ANGLE Clone() {
      return new PROBUFF_NET_CHANGE_ANGLE(this);
    }

    /// <summary>Field number for the "m_position" field.</summary>
    public const int MPositionFieldNumber = 1;
    private global::Pbnet.UNIT_POSITION mPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.UNIT_POSITION MPosition {
      get { return mPosition_; }
      set {
        mPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_CHANGE_ANGLE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_CHANGE_ANGLE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MPosition, other.MPosition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mPosition_ != null) hash ^= MPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (mPosition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (mPosition_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MPosition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_CHANGE_ANGLE other) {
      if (other == null) {
        return;
      }
      if (other.mPosition_ != null) {
        if (mPosition_ == null) {
          MPosition = new global::Pbnet.UNIT_POSITION();
        }
        MPosition.MergeFrom(other.MPosition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mPosition_ == null) {
              MPosition = new global::Pbnet.UNIT_POSITION();
            }
            input.ReadMessage(MPosition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (mPosition_ == null) {
              MPosition = new global::Pbnet.UNIT_POSITION();
            }
            input.ReadMessage(MPosition);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 发起匹配
  /// </summary>
  public sealed partial class PROBUFF_NET_MATCHING : pb::IMessage<PROBUFF_NET_MATCHING>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MATCHING> _parser = new pb::MessageParser<PROBUFF_NET_MATCHING>(() => new PROBUFF_NET_MATCHING());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MATCHING> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING(PROBUFF_NET_MATCHING other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mTid_ = other.mTid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING Clone() {
      return new PROBUFF_NET_MATCHING(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_tid" field.</summary>
    public const int MTidFieldNumber = 2;
    private int mTid_;
    /// <summary>
    /// 玩法tid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MTid {
      get { if ((_hasBits0 & 2) != 0) { return mTid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mTid_ = value;
      }
    }
    /// <summary>Gets whether the "m_tid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMTid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_tid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMTid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MATCHING);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MATCHING other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MTid != other.MTid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMTid) hash ^= MTid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMTid) {
        output.WriteRawTag(16);
        output.WriteInt32(MTid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMTid) {
        output.WriteRawTag(16);
        output.WriteInt32(MTid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMTid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MTid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MATCHING other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMTid) {
        MTid = other.MTid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MTid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MTid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 匹配玩家的展示数据
  /// </summary>
  public sealed partial class MATCHING_MEMBER : pb::IMessage<MATCHING_MEMBER>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MATCHING_MEMBER> _parser = new pb::MessageParser<MATCHING_MEMBER>(() => new MATCHING_MEMBER());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MATCHING_MEMBER> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MATCHING_MEMBER() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MATCHING_MEMBER(MATCHING_MEMBER other) : this() {
      _hasBits0 = other._hasBits0;
      mId_ = other.mId_;
      mName_ = other.mName_;
      mLv_ = other.mLv_;
      mBegmatch_ = other.mBegmatch_;
      mIsconfirm_ = other.mIsconfirm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MATCHING_MEMBER Clone() {
      return new MATCHING_MEMBER(this);
    }

    /// <summary>Field number for the "m_id" field.</summary>
    public const int MIdFieldNumber = 1;
    private long mId_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MId {
      get { if ((_hasBits0 & 1) != 0) { return mId_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mId_ = value;
      }
    }
    /// <summary>Gets whether the "m_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_name" field.</summary>
    public const int MNameFieldNumber = 2;
    private string mName_;
    /// <summary>
    /// 玩家名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MName {
      get { return mName_ ?? ""; }
      set {
        mName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "m_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMName {
      get { return mName_ != null; }
    }
    /// <summary>Clears the value of the "m_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMName() {
      mName_ = null;
    }

    /// <summary>Field number for the "m_lv" field.</summary>
    public const int MLvFieldNumber = 3;
    private int mLv_;
    /// <summary>
    /// 玩家id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MLv {
      get { if ((_hasBits0 & 2) != 0) { return mLv_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mLv_ = value;
      }
    }
    /// <summary>Gets whether the "m_lv" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMLv {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_lv" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMLv() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_begmatch" field.</summary>
    public const int MBegmatchFieldNumber = 4;
    private int mBegmatch_;
    /// <summary>
    /// 开始匹配的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MBegmatch {
      get { if ((_hasBits0 & 4) != 0) { return mBegmatch_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        mBegmatch_ = value;
      }
    }
    /// <summary>Gets whether the "m_begmatch" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMBegmatch {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "m_begmatch" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMBegmatch() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "m_isconfirm" field.</summary>
    public const int MIsconfirmFieldNumber = 5;
    private bool mIsconfirm_;
    /// <summary>
    /// 是否确认
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MIsconfirm {
      get { if ((_hasBits0 & 8) != 0) { return mIsconfirm_; } else { return false; } }
      set {
        _hasBits0 |= 8;
        mIsconfirm_ = value;
      }
    }
    /// <summary>Gets whether the "m_isconfirm" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMIsconfirm {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "m_isconfirm" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMIsconfirm() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MATCHING_MEMBER);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MATCHING_MEMBER other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MId != other.MId) return false;
      if (MName != other.MName) return false;
      if (MLv != other.MLv) return false;
      if (MBegmatch != other.MBegmatch) return false;
      if (MIsconfirm != other.MIsconfirm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMId) hash ^= MId.GetHashCode();
      if (HasMName) hash ^= MName.GetHashCode();
      if (HasMLv) hash ^= MLv.GetHashCode();
      if (HasMBegmatch) hash ^= MBegmatch.GetHashCode();
      if (HasMIsconfirm) hash ^= MIsconfirm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMId) {
        output.WriteRawTag(8);
        output.WriteInt64(MId);
      }
      if (HasMName) {
        output.WriteRawTag(18);
        output.WriteString(MName);
      }
      if (HasMLv) {
        output.WriteRawTag(24);
        output.WriteInt32(MLv);
      }
      if (HasMBegmatch) {
        output.WriteRawTag(32);
        output.WriteInt32(MBegmatch);
      }
      if (HasMIsconfirm) {
        output.WriteRawTag(40);
        output.WriteBool(MIsconfirm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMId) {
        output.WriteRawTag(8);
        output.WriteInt64(MId);
      }
      if (HasMName) {
        output.WriteRawTag(18);
        output.WriteString(MName);
      }
      if (HasMLv) {
        output.WriteRawTag(24);
        output.WriteInt32(MLv);
      }
      if (HasMBegmatch) {
        output.WriteRawTag(32);
        output.WriteInt32(MBegmatch);
      }
      if (HasMIsconfirm) {
        output.WriteRawTag(40);
        output.WriteBool(MIsconfirm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MId);
      }
      if (HasMName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MName);
      }
      if (HasMLv) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MLv);
      }
      if (HasMBegmatch) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MBegmatch);
      }
      if (HasMIsconfirm) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MATCHING_MEMBER other) {
      if (other == null) {
        return;
      }
      if (other.HasMId) {
        MId = other.MId;
      }
      if (other.HasMName) {
        MName = other.MName;
      }
      if (other.HasMLv) {
        MLv = other.MLv;
      }
      if (other.HasMBegmatch) {
        MBegmatch = other.MBegmatch;
      }
      if (other.HasMIsconfirm) {
        MIsconfirm = other.MIsconfirm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MId = input.ReadInt64();
            break;
          }
          case 18: {
            MName = input.ReadString();
            break;
          }
          case 24: {
            MLv = input.ReadInt32();
            break;
          }
          case 32: {
            MBegmatch = input.ReadInt32();
            break;
          }
          case 40: {
            MIsconfirm = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MId = input.ReadInt64();
            break;
          }
          case 18: {
            MName = input.ReadString();
            break;
          }
          case 24: {
            MLv = input.ReadInt32();
            break;
          }
          case 32: {
            MBegmatch = input.ReadInt32();
            break;
          }
          case 40: {
            MIsconfirm = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 加入匹配
  /// </summary>
  public sealed partial class PROBUFF_NET_MATCHING_RESPONSE : pb::IMessage<PROBUFF_NET_MATCHING_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MATCHING_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_MATCHING_RESPONSE>(() => new PROBUFF_NET_MATCHING_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MATCHING_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_RESPONSE(PROBUFF_NET_MATCHING_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mId_ = other.mId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_RESPONSE Clone() {
      return new PROBUFF_NET_MATCHING_RESPONSE(this);
    }

    /// <summary>Field number for the "m_id" field.</summary>
    public const int MIdFieldNumber = 1;
    private long mId_;
    /// <summary>
    /// 加入的玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MId {
      get { if ((_hasBits0 & 1) != 0) { return mId_; } else { return 0L; } }
      set {
        _hasBits0 |= 1;
        mId_ = value;
      }
    }
    /// <summary>Gets whether the "m_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MATCHING_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MATCHING_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MId != other.MId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMId) hash ^= MId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMId) {
        output.WriteRawTag(8);
        output.WriteInt64(MId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMId) {
        output.WriteRawTag(8);
        output.WriteInt64(MId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMId) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MATCHING_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMId) {
        MId = other.MId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///取消匹配
  /// </summary>
  public sealed partial class PROBUFF_NET_MATCHING_CANCEL : pb::IMessage<PROBUFF_NET_MATCHING_CANCEL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MATCHING_CANCEL> _parser = new pb::MessageParser<PROBUFF_NET_MATCHING_CANCEL>(() => new PROBUFF_NET_MATCHING_CANCEL());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MATCHING_CANCEL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CANCEL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CANCEL(PROBUFF_NET_MATCHING_CANCEL other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mRoomid_ = other.mRoomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CANCEL Clone() {
      return new PROBUFF_NET_MATCHING_CANCEL(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_roomid" field.</summary>
    public const int MRoomidFieldNumber = 2;
    private long mRoomid_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MRoomid {
      get { if ((_hasBits0 & 2) != 0) { return mRoomid_; } else { return 0L; } }
      set {
        _hasBits0 |= 2;
        mRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoomid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MATCHING_CANCEL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MATCHING_CANCEL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MRoomid != other.MRoomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMRoomid) hash ^= MRoomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt64(MRoomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt64(MRoomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MRoomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MATCHING_CANCEL other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMRoomid) {
        MRoomid = other.MRoomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PROBUFF_NET_MATCHING_CANCEL_RESPONSE : pb::IMessage<PROBUFF_NET_MATCHING_CANCEL_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MATCHING_CANCEL_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_MATCHING_CANCEL_RESPONSE>(() => new PROBUFF_NET_MATCHING_CANCEL_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MATCHING_CANCEL_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CANCEL_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CANCEL_RESPONSE(PROBUFF_NET_MATCHING_CANCEL_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mStat_ = other.mStat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CANCEL_RESPONSE Clone() {
      return new PROBUFF_NET_MATCHING_CANCEL_RESPONSE(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_stat" field.</summary>
    public const int MStatFieldNumber = 2;
    private global::Pbnet.ematching_cancel_stat mStat_;
    /// <summary>
    /// 取消匹配失败原因
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.ematching_cancel_stat MStat {
      get { if ((_hasBits0 & 2) != 0) { return mStat_; } else { return global::Pbnet.ematching_cancel_stat.EmatchingCancelSuccess; } }
      set {
        _hasBits0 |= 2;
        mStat_ = value;
      }
    }
    /// <summary>Gets whether the "m_stat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMStat {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_stat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMStat() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MATCHING_CANCEL_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MATCHING_CANCEL_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MStat != other.MStat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMStat) hash ^= MStat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMStat) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMStat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MStat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MATCHING_CANCEL_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMStat) {
        MStat = other.MStat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MStat = (global::Pbnet.ematching_cancel_stat) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MStat = (global::Pbnet.ematching_cancel_stat) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PROBUFF_NET_MEMBER_MATCHING_CANCEL : pb::IMessage<PROBUFF_NET_MEMBER_MATCHING_CANCEL>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MEMBER_MATCHING_CANCEL> _parser = new pb::MessageParser<PROBUFF_NET_MEMBER_MATCHING_CANCEL>(() => new PROBUFF_NET_MEMBER_MATCHING_CANCEL());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MEMBER_MATCHING_CANCEL> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MEMBER_MATCHING_CANCEL() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MEMBER_MATCHING_CANCEL(PROBUFF_NET_MEMBER_MATCHING_CANCEL other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mCanceltype_ = other.mCanceltype_;
      mCancelmember_ = other.mCancelmember_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MEMBER_MATCHING_CANCEL Clone() {
      return new PROBUFF_NET_MEMBER_MATCHING_CANCEL(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_canceltype" field.</summary>
    public const int MCanceltypeFieldNumber = 2;
    private global::Pbnet.etype_matching_cancel mCanceltype_;
    /// <summary>
    /// 取消的原因
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.etype_matching_cancel MCanceltype {
      get { if ((_hasBits0 & 2) != 0) { return mCanceltype_; } else { return global::Pbnet.etype_matching_cancel.Active; } }
      set {
        _hasBits0 |= 2;
        mCanceltype_ = value;
      }
    }
    /// <summary>Gets whether the "m_canceltype" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMCanceltype {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_canceltype" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMCanceltype() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_cancelmember" field.</summary>
    public const int MCancelmemberFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_mCancelmember_codec
        = pb::FieldCodec.ForInt64(26);
    private readonly pbc::RepeatedField<long> mCancelmember_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// 取消匹配的玩家
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> MCancelmember {
      get { return mCancelmember_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MEMBER_MATCHING_CANCEL);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MEMBER_MATCHING_CANCEL other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MCanceltype != other.MCanceltype) return false;
      if(!mCancelmember_.Equals(other.mCancelmember_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMCanceltype) hash ^= MCanceltype.GetHashCode();
      hash ^= mCancelmember_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMCanceltype) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MCanceltype);
      }
      mCancelmember_.WriteTo(output, _repeated_mCancelmember_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMCanceltype) {
        output.WriteRawTag(16);
        output.WriteEnum((int) MCanceltype);
      }
      mCancelmember_.WriteTo(ref output, _repeated_mCancelmember_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMCanceltype) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MCanceltype);
      }
      size += mCancelmember_.CalculateSize(_repeated_mCancelmember_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MEMBER_MATCHING_CANCEL other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMCanceltype) {
        MCanceltype = other.MCanceltype;
      }
      mCancelmember_.Add(other.mCancelmember_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MCanceltype = (global::Pbnet.etype_matching_cancel) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            mCancelmember_.AddEntriesFrom(input, _repeated_mCancelmember_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MCanceltype = (global::Pbnet.etype_matching_cancel) input.ReadEnum();
            break;
          }
          case 26:
          case 24: {
            mCancelmember_.AddEntriesFrom(ref input, _repeated_mCancelmember_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 等待确认
  /// </summary>
  public sealed partial class PROBUFF_NET_MATCHING_WAITCONFIRM : pb::IMessage<PROBUFF_NET_MATCHING_WAITCONFIRM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MATCHING_WAITCONFIRM> _parser = new pb::MessageParser<PROBUFF_NET_MATCHING_WAITCONFIRM>(() => new PROBUFF_NET_MATCHING_WAITCONFIRM());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MATCHING_WAITCONFIRM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_WAITCONFIRM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_WAITCONFIRM(PROBUFF_NET_MATCHING_WAITCONFIRM other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mRoomid_ = other.mRoomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_WAITCONFIRM Clone() {
      return new PROBUFF_NET_MATCHING_WAITCONFIRM(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_roomid" field.</summary>
    public const int MRoomidFieldNumber = 2;
    private int mRoomid_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRoomid {
      get { if ((_hasBits0 & 2) != 0) { return mRoomid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoomid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MATCHING_WAITCONFIRM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MATCHING_WAITCONFIRM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MRoomid != other.MRoomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMRoomid) hash ^= MRoomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRoomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MATCHING_WAITCONFIRM other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMRoomid) {
        MRoomid = other.MRoomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 发起确认
  /// </summary>
  public sealed partial class PROBUFF_NET_MATCHING_CONFIRM : pb::IMessage<PROBUFF_NET_MATCHING_CONFIRM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MATCHING_CONFIRM> _parser = new pb::MessageParser<PROBUFF_NET_MATCHING_CONFIRM>(() => new PROBUFF_NET_MATCHING_CONFIRM());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MATCHING_CONFIRM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CONFIRM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CONFIRM(PROBUFF_NET_MATCHING_CONFIRM other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mRoomid_ = other.mRoomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CONFIRM Clone() {
      return new PROBUFF_NET_MATCHING_CONFIRM(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_roomid" field.</summary>
    public const int MRoomidFieldNumber = 2;
    private int mRoomid_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRoomid {
      get { if ((_hasBits0 & 2) != 0) { return mRoomid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoomid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MATCHING_CONFIRM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MATCHING_CONFIRM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MRoomid != other.MRoomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMRoomid) hash ^= MRoomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRoomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MATCHING_CONFIRM other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMRoomid) {
        MRoomid = other.MRoomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PROBUFF_NET_MATCHING_CONFIRM_RESPONSE : pb::IMessage<PROBUFF_NET_MATCHING_CONFIRM_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MATCHING_CONFIRM_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_MATCHING_CONFIRM_RESPONSE>(() => new PROBUFF_NET_MATCHING_CONFIRM_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MATCHING_CONFIRM_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CONFIRM_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CONFIRM_RESPONSE(PROBUFF_NET_MATCHING_CONFIRM_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mRoomid_ = other.mRoomid_;
      mStat_ = other.mStat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_CONFIRM_RESPONSE Clone() {
      return new PROBUFF_NET_MATCHING_CONFIRM_RESPONSE(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_roomid" field.</summary>
    public const int MRoomidFieldNumber = 2;
    private int mRoomid_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRoomid {
      get { if ((_hasBits0 & 2) != 0) { return mRoomid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_stat" field.</summary>
    public const int MStatFieldNumber = 3;
    private global::Pbnet.ematching_confirm_stat mStat_;
    /// <summary>
    /// 确认状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.ematching_confirm_stat MStat {
      get { if ((_hasBits0 & 4) != 0) { return mStat_; } else { return global::Pbnet.ematching_confirm_stat.EmatchingConfirmSuccess; } }
      set {
        _hasBits0 |= 4;
        mStat_ = value;
      }
    }
    /// <summary>Gets whether the "m_stat" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMStat {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "m_stat" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMStat() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MATCHING_CONFIRM_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MATCHING_CONFIRM_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MRoomid != other.MRoomid) return false;
      if (MStat != other.MStat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMRoomid) hash ^= MRoomid.GetHashCode();
      if (HasMStat) hash ^= MStat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      if (HasMStat) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      if (HasMStat) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MStat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRoomid);
      }
      if (HasMStat) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MStat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MATCHING_CONFIRM_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMRoomid) {
        MRoomid = other.MRoomid;
      }
      if (other.HasMStat) {
        MStat = other.MStat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
          case 24: {
            MStat = (global::Pbnet.ematching_confirm_stat) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
          case 24: {
            MStat = (global::Pbnet.ematching_confirm_stat) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 同步玩家匹配确认信息
  /// </summary>
  public sealed partial class PROBUFF_NET_SYNC_MATCHING_CONFIRM : pb::IMessage<PROBUFF_NET_SYNC_MATCHING_CONFIRM>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_SYNC_MATCHING_CONFIRM> _parser = new pb::MessageParser<PROBUFF_NET_SYNC_MATCHING_CONFIRM>(() => new PROBUFF_NET_SYNC_MATCHING_CONFIRM());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_SYNC_MATCHING_CONFIRM> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_MATCHING_CONFIRM() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_MATCHING_CONFIRM(PROBUFF_NET_SYNC_MATCHING_CONFIRM other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mRoomid_ = other.mRoomid_;
      mRoleid_ = other.mRoleid_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_SYNC_MATCHING_CONFIRM Clone() {
      return new PROBUFF_NET_SYNC_MATCHING_CONFIRM(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_roomid" field.</summary>
    public const int MRoomidFieldNumber = 2;
    private int mRoomid_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRoomid {
      get { if ((_hasBits0 & 2) != 0) { return mRoomid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_roleid" field.</summary>
    public const int MRoleidFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_mRoleid_codec
        = pb::FieldCodec.ForInt64(26);
    private readonly pbc::RepeatedField<long> mRoleid_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> MRoleid {
      get { return mRoleid_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_SYNC_MATCHING_CONFIRM);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_SYNC_MATCHING_CONFIRM other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MRoomid != other.MRoomid) return false;
      if(!mRoleid_.Equals(other.mRoleid_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMRoomid) hash ^= MRoomid.GetHashCode();
      hash ^= mRoleid_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      mRoleid_.WriteTo(output, _repeated_mRoleid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      mRoleid_.WriteTo(ref output, _repeated_mRoleid_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRoomid);
      }
      size += mRoleid_.CalculateSize(_repeated_mRoleid_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_SYNC_MATCHING_CONFIRM other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMRoomid) {
        MRoomid = other.MRoomid;
      }
      mRoleid_.Add(other.mRoleid_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            mRoleid_.AddEntriesFrom(input, _repeated_mRoleid_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            mRoleid_.AddEntriesFrom(ref input, _repeated_mRoleid_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 同步匹配信息
  /// </summary>
  public sealed partial class PROBUFF_NET_MATCHING_SYNC : pb::IMessage<PROBUFF_NET_MATCHING_SYNC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MATCHING_SYNC> _parser = new pb::MessageParser<PROBUFF_NET_MATCHING_SYNC>(() => new PROBUFF_NET_MATCHING_SYNC());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MATCHING_SYNC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_SYNC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_SYNC(PROBUFF_NET_MATCHING_SYNC other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mRoomid_ = other.mRoomid_;
      mMember_ = other.mMember_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_SYNC Clone() {
      return new PROBUFF_NET_MATCHING_SYNC(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_roomid" field.</summary>
    public const int MRoomidFieldNumber = 2;
    private int mRoomid_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRoomid {
      get { if ((_hasBits0 & 2) != 0) { return mRoomid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_member" field.</summary>
    public const int MMemberFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Pbnet.MATCHING_MEMBER> _repeated_mMember_codec
        = pb::FieldCodec.ForMessage(26, global::Pbnet.MATCHING_MEMBER.Parser);
    private readonly pbc::RepeatedField<global::Pbnet.MATCHING_MEMBER> mMember_ = new pbc::RepeatedField<global::Pbnet.MATCHING_MEMBER>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbnet.MATCHING_MEMBER> MMember {
      get { return mMember_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MATCHING_SYNC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MATCHING_SYNC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MRoomid != other.MRoomid) return false;
      if(!mMember_.Equals(other.mMember_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMRoomid) hash ^= MRoomid.GetHashCode();
      hash ^= mMember_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      mMember_.WriteTo(output, _repeated_mMember_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      mMember_.WriteTo(ref output, _repeated_mMember_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRoomid);
      }
      size += mMember_.CalculateSize(_repeated_mMember_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MATCHING_SYNC other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMRoomid) {
        MRoomid = other.MRoomid;
      }
      mMember_.Add(other.mMember_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
          case 26: {
            mMember_.AddEntriesFrom(input, _repeated_mMember_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
          case 26: {
            mMember_.AddEntriesFrom(ref input, _repeated_mMember_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// room内的玩家都确认了,准备进入玩法
  /// </summary>
  public sealed partial class PROBUFF_NET_MATCHING_SUCCESS_RESPONSE : pb::IMessage<PROBUFF_NET_MATCHING_SUCCESS_RESPONSE>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MATCHING_SUCCESS_RESPONSE> _parser = new pb::MessageParser<PROBUFF_NET_MATCHING_SUCCESS_RESPONSE>(() => new PROBUFF_NET_MATCHING_SUCCESS_RESPONSE());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MATCHING_SUCCESS_RESPONSE> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_SUCCESS_RESPONSE() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_SUCCESS_RESPONSE(PROBUFF_NET_MATCHING_SUCCESS_RESPONSE other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mRoomid_ = other.mRoomid_;
      mPlaysactorid_ = other.mPlaysactorid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_SUCCESS_RESPONSE Clone() {
      return new PROBUFF_NET_MATCHING_SUCCESS_RESPONSE(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_roomid" field.</summary>
    public const int MRoomidFieldNumber = 2;
    private int mRoomid_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRoomid {
      get { if ((_hasBits0 & 2) != 0) { return mRoomid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_playsactorid" field.</summary>
    public const int MPlaysactoridFieldNumber = 3;
    private long mPlaysactorid_;
    /// <summary>
    /// 玩法id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MPlaysactorid {
      get { if ((_hasBits0 & 4) != 0) { return mPlaysactorid_; } else { return 0L; } }
      set {
        _hasBits0 |= 4;
        mPlaysactorid_ = value;
      }
    }
    /// <summary>Gets whether the "m_playsactorid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMPlaysactorid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "m_playsactorid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMPlaysactorid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MATCHING_SUCCESS_RESPONSE);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MATCHING_SUCCESS_RESPONSE other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MRoomid != other.MRoomid) return false;
      if (MPlaysactorid != other.MPlaysactorid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMRoomid) hash ^= MRoomid.GetHashCode();
      if (HasMPlaysactorid) hash ^= MPlaysactorid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      if (HasMPlaysactorid) {
        output.WriteRawTag(24);
        output.WriteInt64(MPlaysactorid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      if (HasMPlaysactorid) {
        output.WriteRawTag(24);
        output.WriteInt64(MPlaysactorid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRoomid);
      }
      if (HasMPlaysactorid) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MPlaysactorid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MATCHING_SUCCESS_RESPONSE other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMRoomid) {
        MRoomid = other.MRoomid;
      }
      if (other.HasMPlaysactorid) {
        MPlaysactorid = other.MPlaysactorid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
          case 24: {
            MPlaysactorid = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
          case 24: {
            MPlaysactorid = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PROBUFF_NET_MATCHING_SUCCESS : pb::IMessage<PROBUFF_NET_MATCHING_SUCCESS>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_MATCHING_SUCCESS> _parser = new pb::MessageParser<PROBUFF_NET_MATCHING_SUCCESS>(() => new PROBUFF_NET_MATCHING_SUCCESS());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_MATCHING_SUCCESS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_SUCCESS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_SUCCESS(PROBUFF_NET_MATCHING_SUCCESS other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mRoomid_ = other.mRoomid_;
      mMember_ = other.mMember_.Clone();
      mDataid_ = other.mDataid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_MATCHING_SUCCESS Clone() {
      return new PROBUFF_NET_MATCHING_SUCCESS(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_roomid" field.</summary>
    public const int MRoomidFieldNumber = 2;
    private int mRoomid_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRoomid {
      get { if ((_hasBits0 & 2) != 0) { return mRoomid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoomid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "m_member" field.</summary>
    public const int MMemberFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Pbnet.MATCHING_MEMBER> _repeated_mMember_codec
        = pb::FieldCodec.ForMessage(26, global::Pbnet.MATCHING_MEMBER.Parser);
    private readonly pbc::RepeatedField<global::Pbnet.MATCHING_MEMBER> mMember_ = new pbc::RepeatedField<global::Pbnet.MATCHING_MEMBER>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pbnet.MATCHING_MEMBER> MMember {
      get { return mMember_; }
    }

    /// <summary>Field number for the "m_dataid" field.</summary>
    public const int MDataidFieldNumber = 4;
    private int mDataid_;
    /// <summary>
    /// 匹配成功后生成的actor的data id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MDataid {
      get { if ((_hasBits0 & 4) != 0) { return mDataid_; } else { return 0; } }
      set {
        _hasBits0 |= 4;
        mDataid_ = value;
      }
    }
    /// <summary>Gets whether the "m_dataid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMDataid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "m_dataid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMDataid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_MATCHING_SUCCESS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_MATCHING_SUCCESS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MRoomid != other.MRoomid) return false;
      if(!mMember_.Equals(other.mMember_)) return false;
      if (MDataid != other.MDataid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMRoomid) hash ^= MRoomid.GetHashCode();
      hash ^= mMember_.GetHashCode();
      if (HasMDataid) hash ^= MDataid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      mMember_.WriteTo(output, _repeated_mMember_codec);
      if (HasMDataid) {
        output.WriteRawTag(32);
        output.WriteInt32(MDataid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      mMember_.WriteTo(ref output, _repeated_mMember_codec);
      if (HasMDataid) {
        output.WriteRawTag(32);
        output.WriteInt32(MDataid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRoomid);
      }
      size += mMember_.CalculateSize(_repeated_mMember_codec);
      if (HasMDataid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MDataid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_MATCHING_SUCCESS other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMRoomid) {
        MRoomid = other.MRoomid;
      }
      mMember_.Add(other.mMember_);
      if (other.HasMDataid) {
        MDataid = other.MDataid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
          case 26: {
            mMember_.AddEntriesFrom(input, _repeated_mMember_codec);
            break;
          }
          case 32: {
            MDataid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
          case 26: {
            mMember_.AddEntriesFrom(ref input, _repeated_mMember_codec);
            break;
          }
          case 32: {
            MDataid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// 确认进入玩法
  /// </summary>
  public sealed partial class PROBUFF_NET_ENTER_PLAYS : pb::IMessage<PROBUFF_NET_ENTER_PLAYS>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PROBUFF_NET_ENTER_PLAYS> _parser = new pb::MessageParser<PROBUFF_NET_ENTER_PLAYS>(() => new PROBUFF_NET_ENTER_PLAYS());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PROBUFF_NET_ENTER_PLAYS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pbnet.NetReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ENTER_PLAYS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ENTER_PLAYS(PROBUFF_NET_ENTER_PLAYS other) : this() {
      _hasBits0 = other._hasBits0;
      mType_ = other.mType_;
      mRoomid_ = other.mRoomid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PROBUFF_NET_ENTER_PLAYS Clone() {
      return new PROBUFF_NET_ENTER_PLAYS(this);
    }

    /// <summary>Field number for the "m_type" field.</summary>
    public const int MTypeFieldNumber = 1;
    private global::Pbnet.eplays mType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pbnet.eplays MType {
      get { if ((_hasBits0 & 1) != 0) { return mType_; } else { return global::Pbnet.eplays.GoUndergroundpalace; } }
      set {
        _hasBits0 |= 1;
        mType_ = value;
      }
    }
    /// <summary>Gets whether the "m_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "m_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "m_roomid" field.</summary>
    public const int MRoomidFieldNumber = 2;
    private int mRoomid_;
    /// <summary>
    /// 房间id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MRoomid {
      get { if ((_hasBits0 & 2) != 0) { return mRoomid_; } else { return 0; } }
      set {
        _hasBits0 |= 2;
        mRoomid_ = value;
      }
    }
    /// <summary>Gets whether the "m_roomid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasMRoomid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "m_roomid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMRoomid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PROBUFF_NET_ENTER_PLAYS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PROBUFF_NET_ENTER_PLAYS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MType != other.MType) return false;
      if (MRoomid != other.MRoomid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMType) hash ^= MType.GetHashCode();
      if (HasMRoomid) hash ^= MRoomid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMType) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MType);
      }
      if (HasMRoomid) {
        output.WriteRawTag(16);
        output.WriteInt32(MRoomid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasMType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MType);
      }
      if (HasMRoomid) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MRoomid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PROBUFF_NET_ENTER_PLAYS other) {
      if (other == null) {
        return;
      }
      if (other.HasMType) {
        MType = other.MType;
      }
      if (other.HasMRoomid) {
        MRoomid = other.MRoomid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MType = (global::Pbnet.eplays) input.ReadEnum();
            break;
          }
          case 16: {
            MRoomid = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
